<<<<<<< HEAD
[{"D:\\Projects\\lifeministry-spera2\\src\\pages\\generator.tsx":"1","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\assignment.tsx":"2","D:\\Projects\\lifeministry-spera2\\src\\App.tsx":"3","D:\\Projects\\lifeministry-spera2\\src\\reportWebVitals.ts":"4","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\simpleStdList.tsx":"5","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\generator.tsx":"6"},{"size":14527,"mtime":1636156201534,"results":"7","hashOfConfig":"8"},{"size":13278,"mtime":1633578599605,"results":"9","hashOfConfig":"8"},{"size":5623,"mtime":1636044823895,"results":"10","hashOfConfig":"8"},{"size":425,"mtime":1607041598639,"results":"11","hashOfConfig":"8"},{"size":20392,"mtime":1623712625021,"results":"12","hashOfConfig":"8"},{"size":4160,"mtime":1636157832372,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dsm628",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\lifeministry-spera2\\src\\pages\\generator.tsx",["26"],"D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\assignment.tsx",["27","28","29","30"],"D:\\Projects\\lifeministry-spera2\\src\\App.tsx",[],"D:\\Projects\\lifeministry-spera2\\src\\reportWebVitals.ts",[],"D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\simpleStdList.tsx",["31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52"],"D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\generator.tsx",["53","54","55","56","57","58","59","60","61"],{"ruleId":"62","severity":1,"message":"63","line":103,"column":12,"nodeType":"64","messageId":"65","endLine":103,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":8,"column":32,"nodeType":"64","messageId":"65","endLine":8,"endColumn":40},{"ruleId":"62","severity":1,"message":"67","line":98,"column":7,"nodeType":"64","messageId":"65","endLine":98,"endColumn":47},{"ruleId":"62","severity":1,"message":"68","line":106,"column":11,"nodeType":"64","messageId":"65","endLine":106,"endColumn":19},{"ruleId":"62","severity":1,"message":"69","line":137,"column":10,"nodeType":"64","messageId":"65","endLine":137,"endColumn":25},{"ruleId":"62","severity":1,"message":"70","line":5,"column":10,"nodeType":"64","messageId":"65","endLine":5,"endColumn":19},{"ruleId":"62","severity":1,"message":"71","line":17,"column":10,"nodeType":"64","messageId":"65","endLine":17,"endColumn":26},{"ruleId":"62","severity":1,"message":"72","line":17,"column":49,"nodeType":"64","messageId":"65","endLine":17,"endColumn":63},{"ruleId":"62","severity":1,"message":"73","line":17,"column":108,"nodeType":"64","messageId":"65","endLine":17,"endColumn":124},{"ruleId":"62","severity":1,"message":"74","line":17,"column":140,"nodeType":"64","messageId":"65","endLine":17,"endColumn":152},{"ruleId":"62","severity":1,"message":"75","line":17,"column":154,"nodeType":"64","messageId":"65","endLine":17,"endColumn":159},{"ruleId":"62","severity":1,"message":"76","line":17,"column":161,"nodeType":"64","messageId":"65","endLine":17,"endColumn":170},{"ruleId":"62","severity":1,"message":"77","line":17,"column":172,"nodeType":"64","messageId":"65","endLine":17,"endColumn":177},{"ruleId":"62","severity":1,"message":"78","line":17,"column":179,"nodeType":"64","messageId":"65","endLine":17,"endColumn":183},{"ruleId":"62","severity":1,"message":"79","line":109,"column":7,"nodeType":"64","messageId":"65","endLine":109,"endColumn":49},{"ruleId":"62","severity":1,"message":"80","line":111,"column":7,"nodeType":"64","messageId":"65","endLine":111,"endColumn":26},{"ruleId":"62","severity":1,"message":"81","line":112,"column":7,"nodeType":"64","messageId":"65","endLine":112,"endColumn":27},{"ruleId":"62","severity":1,"message":"82","line":113,"column":7,"nodeType":"64","messageId":"65","endLine":113,"endColumn":41},{"ruleId":"62","severity":1,"message":"83","line":132,"column":12,"nodeType":"64","messageId":"65","endLine":132,"endColumn":28},{"ruleId":"62","severity":1,"message":"84","line":132,"column":30,"nodeType":"64","messageId":"65","endLine":132,"endColumn":49},{"ruleId":"62","severity":1,"message":"85","line":133,"column":57,"nodeType":"64","messageId":"65","endLine":133,"endColumn":66},{"ruleId":"62","severity":1,"message":"86","line":134,"column":12,"nodeType":"64","messageId":"65","endLine":134,"endColumn":21},{"ruleId":"62","severity":1,"message":"87","line":135,"column":11,"nodeType":"64","messageId":"65","endLine":135,"endColumn":18},{"ruleId":"62","severity":1,"message":"88","line":307,"column":11,"nodeType":"64","messageId":"65","endLine":307,"endColumn":24},{"ruleId":"62","severity":1,"message":"89","line":310,"column":15,"nodeType":"64","messageId":"65","endLine":310,"endColumn":19},{"ruleId":"62","severity":1,"message":"90","line":319,"column":11,"nodeType":"64","messageId":"65","endLine":319,"endColumn":20},{"ruleId":"62","severity":1,"message":"91","line":328,"column":11,"nodeType":"64","messageId":"65","endLine":328,"endColumn":22},{"ruleId":"62","severity":1,"message":"92","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":22},{"ruleId":"62","severity":1,"message":"72","line":1,"column":42,"nodeType":"64","messageId":"65","endLine":1,"endColumn":56},{"ruleId":"62","severity":1,"message":"73","line":1,"column":80,"nodeType":"64","messageId":"65","endLine":1,"endColumn":96},{"ruleId":"62","severity":1,"message":"93","line":1,"column":98,"nodeType":"64","messageId":"65","endLine":1,"endColumn":110},{"ruleId":"62","severity":1,"message":"74","line":1,"column":112,"nodeType":"64","messageId":"65","endLine":1,"endColumn":124},{"ruleId":"62","severity":1,"message":"94","line":1,"column":126,"nodeType":"64","messageId":"65","endLine":1,"endColumn":138},{"ruleId":"62","severity":1,"message":"95","line":1,"column":156,"nodeType":"64","messageId":"65","endLine":1,"endColumn":169},{"ruleId":"62","severity":1,"message":"77","line":1,"column":171,"nodeType":"64","messageId":"65","endLine":1,"endColumn":176},{"ruleId":"62","severity":1,"message":"96","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":28},"@typescript-eslint/no-unused-vars","'scheduleWeeks' is assigned a value but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'dropdownStyles' is assigned a value but never used.","'TimeOpts' is defined but never used.","'stedAssignments' is assigned a value but never used.","'Announced' is defined but never used.","'CommandBarButton' is defined but never used.","'DefaultPalette' is defined but never used.","'IStackItemStyles' is defined but never used.","'IStackTokens' is defined but never used.","'Label' is defined but never used.","'SearchBox' is defined but never used.","'Stack' is defined but never used.","'Text' is defined but never used.","'searchBoxStyles' is assigned a value but never used.","'addIcon' is assigned a value but never used.","'mailIcon' is assigned a value but never used.","'stackStyles' is assigned a value but never used.","'announcedMessage' is assigned a value but never used.","'setAnnouncedMessage' is assigned a value but never used.","'hideModal' is assigned a value but never used.","'modalData' is assigned a value but never used.","'db' is assigned a value but never used.","'_onChangeText' is assigned a value but never used.","'text' is assigned a value but never used.","'openModal' is assigned a value but never used.","'onClickTest' is assigned a value but never used.","'ActionButton' is defined but never used.","'IStackStyles' is defined but never used.","'KTP_LAYER_ID' is defined but never used.","'PrimaryButton' is defined but never used.","'ClassificationType' is defined but never used."]
=======
[{"D:\\Projects\\lifeministry-spera2\\src\\pages\\generator.tsx":"1","D:\\Projects\\lifeministry-spera2\\src\\index.tsx":"2","D:\\Projects\\lifeministry-spera2\\src\\api\\lifeministry.ts":"3","D:\\Projects\\lifeministry-spera2\\src\\pages\\students.tsx":"4","D:\\Projects\\lifeministry-spera2\\src\\components\\menu\\menu.tsx":"5","D:\\Projects\\lifeministry-spera2\\src\\components\\assigmanets\\assgList.tsx":"6","D:\\Projects\\lifeministry-spera2\\src\\components\\students\\stdList.tsx":"7","D:\\Projects\\lifeministry-spera2\\src\\components\\assigmanets\\assgModal.tsx":"8","D:\\Projects\\lifeministry-spera2\\src\\components\\students\\stdModal.tsx":"9","D:\\Projects\\lifeministry-spera2\\src\\components\\calendar\\calendar.tsx":"10","D:\\Projects\\lifeministry-spera2\\src\\reportWebVitals.ts":"11","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\dates.tsx":"12","D:\\Projects\\lifeministry-spera2\\src\\App.tsx":"13","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\assignment.tsx":"14","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\generator.tsx":"15","D:\\Projects\\lifeministry-spera2\\src\\pages\\assignments.tsx":"16","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\partnersLayout.tsx":"17","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\pubsModal.tsx":"18","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\simpleStdList.tsx":"19","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\schedulesList.tsx":"20"},{"size":11690,"mtime":1627009922299,"results":"21","hashOfConfig":"22"},{"size":584,"mtime":1609443821483,"results":"23","hashOfConfig":"22"},{"size":3282,"mtime":1626044318006,"results":"24","hashOfConfig":"22"},{"size":1187,"mtime":1610479083869,"results":"25","hashOfConfig":"22"},{"size":2606,"mtime":1612843480600,"results":"26","hashOfConfig":"22"},{"size":22980,"mtime":1626046280252,"results":"27","hashOfConfig":"22"},{"size":24403,"mtime":1610506231006,"results":"28","hashOfConfig":"22"},{"size":8176,"mtime":1613361818117,"results":"29","hashOfConfig":"22"},{"size":8583,"mtime":1612760497651,"results":"30","hashOfConfig":"22"},{"size":4702,"mtime":1626046475672,"results":"31","hashOfConfig":"22"},{"size":425,"mtime":1607041598639,"results":"32","hashOfConfig":"22"},{"size":5783,"mtime":1613361817911,"results":"33","hashOfConfig":"22"},{"size":3287,"mtime":1613361663843,"results":"34","hashOfConfig":"22"},{"size":8401,"mtime":1619215388053,"results":"35","hashOfConfig":"22"},{"size":3985,"mtime":1625715253988,"results":"36","hashOfConfig":"22"},{"size":1100,"mtime":1613361818065,"results":"37","hashOfConfig":"22"},{"size":5176,"mtime":1624505733760,"results":"38","hashOfConfig":"22"},{"size":6815,"mtime":1621914311004,"results":"39","hashOfConfig":"22"},{"size":20392,"mtime":1623712625021,"results":"40","hashOfConfig":"22"},{"size":20945,"mtime":1627009429788,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dsm628",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\lifeministry-spera2\\src\\pages\\generator.tsx",["94","95","96","97","98","99","100"],"D:\\Projects\\lifeministry-spera2\\src\\index.tsx",[],["101","102"],"D:\\Projects\\lifeministry-spera2\\src\\api\\lifeministry.ts",[],"D:\\Projects\\lifeministry-spera2\\src\\pages\\students.tsx",["103"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { LifeministryContext } from '../App';\r\nimport StudentsTable from '../components/students/stdList';\r\nimport { IStudent } from '../types/ministry.types';\r\n\r\nfunction Students() {\r\n    const initialData: IStudent[] = [{ \"id\": 0, \"name\": \"Initial\", \"gender\": \"m\", \"cel\": 0, \"active\": false, \"notes\": \"\", \"last\": \"2020-11-01T00:00:00Z\", \"lastpartner\": 0 }];\r\n    const [stdData, setStdData] = useState<IStudent[]>(initialData)\r\n    const db: any = useContext(LifeministryContext)\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        console.log(db.getStudents().then((res: IStudent[]) => {\r\n            console.log(res);\r\n            setStdData(res);\r\n        }));\r\n        /* const stdUrl = \"http://localhost:8000/students\";\r\n        console.log(stdUrl);\r\n        fetch(stdUrl)\r\n            .then((res) => res.json())\r\n            .then((repos) => {\r\n                console.log(repos)\r\n                setStdData(repos as IStudent[])\r\n            }); */\r\n    }, [setStdData]);\r\n\r\n    return (\r\n        <StudentsTable data={stdData} />\r\n    );\r\n}\r\n\r\nexport default Students; \r\n","D:\\Projects\\lifeministry-spera2\\src\\components\\menu\\menu.tsx",[],["104","105"],"D:\\Projects\\lifeministry-spera2\\src\\components\\assigmanets\\assgList.tsx",["106"],"D:\\Projects\\lifeministry-spera2\\src\\components\\students\\stdList.tsx",["107","108","109","110","111","112","113","114","115"],"import * as React from 'react';\r\n//import { TextField } from 'office-ui-fabric-react/lib/TextField';\r\n//import { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { Announced } from 'office-ui-fabric-react/lib/Announced';\r\nimport {\r\n    DetailsList,\r\n    DetailsListLayoutMode,\r\n    Selection,\r\n    SelectionMode,\r\n    IColumn,\r\n    CheckboxVisibility,\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\nimport { StudentsModal } from './stdModal';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { CommandBarButton, /* DefaultButton, */ DefaultPalette, FontWeights, IIconProps, ISearchBoxStyles, IStackItemStyles, IStackStyles, IStackTokens, Label, SearchBox, Stack, Text } from '@fluentui/react';\r\nimport { IStudent } from '../../types/ministry.types';\r\nimport { LifeministryContext } from '../../App';\r\n\r\nconst classNames = mergeStyleSets({\r\n    fileIconHeaderIcon: {\r\n        padding: 0,\r\n        fontSize: '16px',\r\n    },\r\n    fileIconCell: {\r\n        textAlign: 'center',\r\n        selectors: {\r\n            '&:before': {\r\n                content: '.',\r\n                display: 'inline-block',\r\n                verticalAlign: 'middle',\r\n                height: '100%',\r\n                width: '0px',\r\n                visibility: 'hidden',\r\n            },\r\n        },\r\n    },\r\n    fileIconImg: {\r\n        verticalAlign: 'middle',\r\n        maxHeight: '16px',\r\n        maxWidth: '16px',\r\n    },\r\n    controlWrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    exampleToggle: {\r\n        display: 'inline-block',\r\n        marginBottom: '10px',\r\n        marginRight: '30px',\r\n    },\r\n    selectionDetails: {\r\n        marginBottom: '20px',\r\n    },\r\n    flexDiv: [\r\n        //theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: '1px solid rgb(149 149 149)',\r\n            //color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            width: \"100%\"\r\n            //padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n});\r\n/* const controlStyles = {\r\n    root: {\r\n        margin: '0 30px 20px 0',\r\n        maxWidth: '300px',\r\n    },\r\n}; */\r\n\r\nexport interface IDetailsListDocumentsExampleState {\r\n    columns: IColumn[];\r\n    items: IStudent[];\r\n    selectionDetails: string;\r\n    isModalSelection: boolean;\r\n    isCompactMode: boolean;\r\n    announcedMessage?: string;\r\n}\r\n\r\nexport interface IDocument {\r\n    key: string;\r\n    name: string;\r\n    value: string;\r\n    iconName: string;\r\n    fileType: string;\r\n    modifiedBy: string;\r\n    dateModified: string;\r\n    dateModifiedValue: number;\r\n    fileSize: string;\r\n    fileSizeRaw: number;\r\n}\r\n\r\ninterface Props {\r\n    data: IStudent[];\r\n}\r\n\r\nconst initialData: IStudent[] = [{\r\n    \"id\": 0,\r\n    \"name\": \"\",\r\n    \"gender\": \"f\",\r\n    \"cel\": 0,\r\n    \"active\": true,\r\n    \"notes\": \"\",\r\n    \"last\": new Date(\"01/01/21\").toISOString(),\r\n    \"lastpartner\": 0\r\n}]\r\n\r\nconst searchBoxStyles: Partial<ISearchBoxStyles> = { root: { width: 200, height: 44 } };\r\n\r\nconst addIcon: IIconProps = { iconName: 'Add' };\r\nconst mailIcon: IIconProps = { iconName: 'Mail' };\r\nconst stackStyles: Partial<IStackStyles> = { root: { width: \"100%\", height: 44 } };\r\n\r\n/* const stackItemStyles: IStackItemStyles = {\r\n    root: {\r\n        background: DefaultPalette.themePrimary,\r\n        color: DefaultPalette.white,\r\n        padding: 5,\r\n    },\r\n}; */\r\nconst fabricStyle: IStackStyles = {\r\n    root: {\r\n        width: \"100%\",\r\n    },\r\n};\r\n\r\n/* const itemAlignmentsStackTokens: IStackTokens = {\r\n    childrenGap: 5,\r\n    padding: 10,\r\n};\r\n\r\nconst fabricStyle2: React.CSSProperties = {\r\n    width: \"100%\",\r\n};\r\n */\r\nconst StudentsTable = (props: Props) => {\r\n    //export class StudentsTable extends React.Component<{}, IDetailsListDocumentsExampleState> {\r\n    let _selection: Selection;\r\n    //let _selection2: Selection;\r\n    let _allItems: IStudent[];\r\n    _allItems = props.data;\r\n    //console.log(_allItems[0]);\r\n    const isModalSelection = true;\r\n    const isCompactMode = false;\r\n\r\n    const [items, setItems] = React.useState(_allItems);\r\n    const [announcedMessage, setAnnouncedMessage] = React.useState();\r\n    const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n    const [modalData, setModalData] = React.useState({ mode: \"new\", data: initialData })\r\n    const db: any = React.useContext(LifeministryContext)\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"component updated\");\r\n        setItems(props.data);\r\n        _allItems = props.data;\r\n        //console.log(_allItems[0]);\r\n    }, [props, isModalOpen]);\r\n\r\n    const _onColumnClick2 = (): void => {\r\n        console.log(\"Call from 2 function\");\r\n        console.log(items[0]);\r\n    }\r\n\r\n    const _onColumnClick = (ev: React.MouseEvent<HTMLElement>, column: IColumn): void => {\r\n        //const { columns, items } = state;\r\n        _onColumnClick2();\r\n        console.log(items[0]);\r\n        const newColumns: IColumn[] = tableColumns.slice();\r\n        const currColumn: IColumn = newColumns.filter(currCol => column.key === currCol.key)[0];\r\n        newColumns.forEach((newCol: IColumn) => {\r\n            if (newCol === currColumn) {\r\n                currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n                currColumn.isSorted = true;\r\n                //setAnnouncedMessage(`${currColumn.name} is sorted ${currColumn.isSortedDescending ? 'descending' : 'ascending'}`)\r\n            } else {\r\n                newCol.isSorted = false;\r\n                newCol.isSortedDescending = true;\r\n            }\r\n        });\r\n        console.log(props.data[0])\r\n        const newItems = _copyAndSort(props.data, currColumn.fieldName!, currColumn.isSortedDescending);\r\n        setColumns(newColumns);\r\n        setItems(newItems);\r\n    };\r\n\r\n    _selection = new Selection({\r\n        onSelectionChanged: () => {\r\n            console.log(items[0]);\r\n            console.log(\"Row selected\");\r\n            //setSelectionDetails(_getSelectionDetails());\r\n            const crrStudentData: string | IStudent[] = _getSelectionDetails();\r\n            console.log(crrStudentData[0])\r\n            setModalData({\r\n                mode: \"edit\",\r\n                data: crrStudentData as IStudent[]\r\n            })\r\n            showModal();\r\n        },\r\n    });\r\n\r\n    /* _selection2 = new Selection({\r\n        onSelectionChanged: () => {\r\n            console.log(\"Row selected from _selection2\");\r\n            const crrStudentData: string | IStudent[] = _getSelectionDetails();\r\n            console.log(crrStudentData[0]);\r\n            setModalData({\r\n                mode: \"edit\",\r\n                data: crrStudentData as IStudent[]\r\n            })\r\n            //setSelectionDetails(_getSelectionDetails());\r\n        },\r\n    }); */\r\n\r\n    const _getSelectionDetails = (): string | IStudent[] => {\r\n        const selectionCount = _selection.getSelectedCount();\r\n\r\n        switch (selectionCount) {\r\n            case 0:\r\n                return initialData;\r\n            case 1:\r\n                //return '1 item selected: ' + (_selection.getSelection()[0] as IStudent).name;\r\n                return _selection.getSelection() as IStudent[];\r\n            default:\r\n                return `${selectionCount} items selected`;\r\n        }\r\n    }\r\n\r\n    const columns: IColumn[] = [\r\n        {\r\n            key: 'column1',\r\n            name: 'Icon',\r\n            className: classNames.fileIconCell,\r\n            iconClassName: classNames.fileIconHeaderIcon,\r\n            ariaLabel: 'Column operations for File type, Press to sort on File type',\r\n            iconName: 'Page',\r\n            isIconOnly: true,\r\n            fieldName: 'name',\r\n            minWidth: 16,\r\n            maxWidth: 16,\r\n            onColumnClick: _onColumnClick,\r\n            /* onRender: (item: IStudent) => {\r\n                return <img src={item.iconName} className={classNames.fileIconImg} alt={item.fileType + ' file icon'} />;\r\n            }, */\r\n        },\r\n        {\r\n            key: 'column2',\r\n            name: 'Nombre',\r\n            fieldName: 'name',\r\n            minWidth: 100,\r\n            maxWidth: 250,\r\n            isRowHeader: true,\r\n            isResizable: true,\r\n            isSorted: true,\r\n            isSortedDescending: false,\r\n            sortAscendingAriaLabel: 'Sorted A to Z',\r\n            sortDescendingAriaLabel: 'Sorted Z to A',\r\n            onColumnClick: _onColumnClick,\r\n            data: 'string',\r\n            isPadded: true,\r\n        },\r\n        {\r\n            key: 'column3',\r\n            name: 'Género',\r\n            fieldName: 'gender',\r\n            minWidth: 30,\r\n            maxWidth: 50,\r\n            isResizable: true,\r\n            onColumnClick: _onColumnClick,\r\n            data: 'string',\r\n            onRender: (item: IStudent) => {\r\n                return <span>{item.gender}</span>;\r\n            },\r\n            isPadded: true,\r\n        },\r\n        {\r\n            key: 'column4',\r\n            name: 'Activo',\r\n            fieldName: 'active',\r\n            minWidth: 50,\r\n            maxWidth: 50,\r\n            isResizable: true,\r\n            isCollapsible: true,\r\n            data: 'boolean',\r\n            onColumnClick: _onColumnClick,\r\n            onRender: (item: IStudent) => {\r\n                return <span>{item.active ? \"Si\" : \"No\"}</span>;\r\n            },\r\n            isPadded: true,\r\n        },\r\n        {\r\n            key: 'column5',\r\n            name: 'Cel',\r\n            fieldName: 'cel',\r\n            minWidth: 70,\r\n            maxWidth: 100,\r\n            isResizable: true,\r\n            isCollapsible: true,\r\n            data: 'number',\r\n            onColumnClick: _onColumnClick,\r\n            onRender: (item: IStudent) => {\r\n                return <span>{item.cel}</span>;\r\n            },\r\n        },\r\n        {\r\n            key: 'column6',\r\n            name: 'Nota',\r\n            fieldName: 'notes',\r\n            minWidth: 70,\r\n            maxWidth: 100,\r\n            isResizable: true,\r\n            isCollapsible: true,\r\n            data: 'string',\r\n            onColumnClick: _onColumnClick,\r\n            onRender: (item: IStudent) => {\r\n                return <span>{item.notes}</span>;\r\n            },\r\n        },\r\n        {\r\n            key: 'column7',\r\n            name: 'Last',\r\n            fieldName: 'last',\r\n            minWidth: 70,\r\n            maxWidth: 90,\r\n            isResizable: true,\r\n            isCollapsible: true,\r\n            data: 'string',\r\n            onColumnClick: _onColumnClick,\r\n            onRender: (item: IStudent) => {\r\n                return <span>{item.last}</span>;\r\n            },\r\n        },\r\n        {\r\n            key: 'column8',\r\n            name: 'Last Partner',\r\n            fieldName: 'lastpartner',\r\n            minWidth: 50,\r\n            maxWidth: 70,\r\n            isResizable: true,\r\n            isCollapsible: true,\r\n            data: 'string',\r\n            onColumnClick: _onColumnClick,\r\n            onRender: (item: IStudent) => {\r\n                return <span>{item.lastpartner}</span>;\r\n            },\r\n        },\r\n    ];\r\n    //_allItems = [{ \"id\": 1, \"name\": \"Ana Iris Arrieta \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:00Z\", \"lastpartner\": 0 }, { \"id\": 2, \"name\": \"Kelly Arrieta \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:01Z\", \"lastpartner\": 0 }, { \"id\": 3, \"name\": \"Wilson Arrieta \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:02Z\", \"lastpartner\": 0 }, { \"id\": 4, \"name\": \"Wilson hijo Arrieta \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:03Z\", \"lastpartner\": 0 }, { \"id\": 5, \"name\": \"Claribel Cárdenas \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:04Z\", \"lastpartner\": 0 }, { \"id\": 6, \"name\": \"Samuel Cárdenas \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:05Z\", \"lastpartner\": 0 }, { \"id\": 7, \"name\": \"Yesenia Cárdenas\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:06Z\", \"lastpartner\": 0 }, { \"id\": 8, \"name\": \"Vélez Carolina \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:07Z\", \"lastpartner\": 0 }, { \"id\": 9, \"name\": \"Dairo C Chávez \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:08Z\", \"lastpartner\": 0 }, { \"id\": 10, \"name\": \"Mary Cielo Corpus \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:09Z\", \"lastpartner\": 0 }, { \"id\": 11, \"name\": \"Pablo Corpus \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:10Z\", \"lastpartner\": 0 }, { \"id\": 12, \"name\": \"Paulina Corpus \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:11Z\", \"lastpartner\": 0 }, { \"id\": 13, \"name\": \"Aldair Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:12Z\", \"lastpartner\": 0 }, { \"id\": 14, \"name\": \"Iván Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:13Z\", \"lastpartner\": 0 }, { \"id\": 15, \"name\": \"Jael Galván \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:14Z\", \"lastpartner\": 0 }, { \"id\": 16, \"name\": \"Nelson Galvis Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:15Z\", \"lastpartner\": 0 }, { \"id\": 17, \"name\": \"Abad García \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:16Z\", \"lastpartner\": 0 }, { \"id\": 18, \"name\": \"Doris González \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:17Z\", \"lastpartner\": 0 }, { \"id\": 19, \"name\": \"Brenda Guardo \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:18Z\", \"lastpartner\": 0 }, { \"id\": 20, \"name\": \"Celia Guardo \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-26T11:58:04.3956794-05:00\", \"lastpartner\": 38 }, { \"id\": 21, \"name\": \"Oleida Guzmán \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:20Z\", \"lastpartner\": 0 }, { \"id\": 22, \"name\": \"Eneida Hoyos \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:21Z\", \"lastpartner\": 0 }, { \"id\": 23, \"name\": \"Marley Jaller \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:22Z\", \"lastpartner\": 0 }, { \"id\": 24, \"name\": \"Eduardo Jaller \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:23Z\", \"lastpartner\": 0 }, { \"id\": 25, \"name\": \"Salma Jaller \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:24Z\", \"lastpartner\": 0 }, { \"id\": 26, \"name\": \"Isabella Jiménez \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:25Z\", \"lastpartner\": 0 }, { \"id\": 27, \"name\": \"Lilián Manchego \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:26Z\", \"lastpartner\": 0 }, { \"id\": 28, \"name\": \"Isabel Manjarrés\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:27Z\", \"lastpartner\": 0 }, { \"id\": 29, \"name\": \"Angélica Montesinos\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:28Z\", \"lastpartner\": 0 }, { \"id\": 30, \"name\": \"Pio Pacheco\", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:29Z\", \"lastpartner\": 0 }, { \"id\": 31, \"name\": \"Maryonis Pacheco\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:30Z\", \"lastpartner\": 0 }, { \"id\": 32, \"name\": \"Rita Rico \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:31Z\", \"lastpartner\": 0 }, { \"id\": 33, \"name\": \"Karol Rincón \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:32Z\", \"lastpartner\": 0 }, { \"id\": 34, \"name\": \"Katerin Rincón\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:33Z\", \"lastpartner\": 0 }, { \"id\": 35, \"name\": \"Rosmira Rodríguez\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:34Z\", \"lastpartner\": 0 }, { \"id\": 36, \"name\": \"Sixta Rodríguez \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:35Z\", \"lastpartner\": 0 }, { \"id\": 37, \"name\": \"Erika Silgado\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:36Z\", \"lastpartner\": 0 }, { \"id\": 38, \"name\": \"Lorena Silgado\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-26T11:58:04.3956794-05:00\", \"lastpartner\": 20 }, { \"id\": 39, \"name\": \"Ana Turizo\", \"gender\": \"f\", \"cel\": 0, \"active\": false, \"notes\": \"\", \"last\": \"2020-11-01T00:00:38Z\", \"lastpartner\": 0 }, { \"id\": 40, \"name\": \"Calixto Turizo\", \"gender\": \"m\", \"cel\": 0, \"active\": false, \"notes\": \"\", \"last\": \"2020-11-01T00:00:39Z\", \"lastpartner\": 0 }, { \"id\": 41, \"name\": \"Máximo Villalobos\", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:40Z\", \"lastpartner\": 0 }, { \"id\": 42, \"name\": \"Sara Villalobos\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:41Z\", \"lastpartner\": 0 }, { \"id\": 43, \"name\": \"Yadith Villalobos \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:42Z\", \"lastpartner\": 0 }]\r\n    const [tableColumns, setColumns] = React.useState(columns);\r\n    //const [selectionDetails, setSelectionDetails] = React.useState(_getSelectionDetails);\r\n    //constructor(props: {}) {\r\n    //super(props);\r\n\r\n    //_allItems = _generateDocuments();\r\n\r\n    const _getKey = (item: any, index?: number): string => {\r\n        return item.key;\r\n    }\r\n\r\n    const _onChangeText = (ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n        const text2 = ev?.target as HTMLButtonElement;\r\n        console.log(text2.value);\r\n        const text = text2.value;\r\n        setItems(text ? _allItems.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _allItems)\r\n        console.log(items);\r\n    };\r\n\r\n    const _onItemInvoked = (item: any): void => {\r\n        alert(`Item invoked: ${item.name}`);\r\n    }\r\n\r\n    const _addStd = (data: IStudent[]): boolean => {\r\n        console.log(data);\r\n        //let method: string = \"POST\"\r\n        //let finalData: IStudent[] | IStudent = data;\r\n        if (modalData.mode === \"edit\") {\r\n            //method = \"PUT\"\r\n            //finalData = data[0];\r\n            return db.updateStudent(data[0]);\r\n        } else {\r\n            return db.addStudents(data);\r\n        }\r\n        //const dataUrl = \"http://localhost:8000/students\";\r\n        //const result = fetchData(dataUrl, finalData, method);\r\n        /* if (result) {\r\n            return true\r\n        } */\r\n        //return false\r\n    }\r\n\r\n    const fetchData = async (url: string = '', data: IStudent[] | IStudent = [], method: string = 'POST') => {\r\n        // Default options are marked with *\r\n        const response = await fetch(url, {\r\n            method: method, // *GET, POST, PUT, DELETE, etc.\r\n            //mode: 'cors', // no-cors, *cors, same-origin\r\n            //cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            //credentials: 'same-origin', // include, *same-origin, omit\r\n            //headers: {\r\n            //   'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            //},\r\n            //redirect: 'follow', // manual, *follow, error\r\n            //referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n        });\r\n        return response.json(); // parses JSON response into native JavaScript objects\r\n    }\r\n\r\n    const closeModal = () => {\r\n        console.log(\"Closing\");\r\n        hideModal();\r\n    }\r\n\r\n    const openModal = () => {\r\n        console.log(\"Opening\");\r\n        setModalData({\r\n            mode: \"new\",\r\n            data: initialData\r\n        })\r\n        showModal();\r\n    }\r\n\r\n    const onClickTest = () => {\r\n        console.log(\"Good Click\")\r\n    }\r\n\r\n\r\n    /*  useEffect(() => {\r\n \r\n     }); */\r\n    //const { isCompactMode, items, selectionDetails, isModalSelection, announcedMessage } = state;\r\n\r\n    return (\r\n        <Fabric styles={fabricStyle}>\r\n            {/* <div className={classNames.selectionDetails}>{selectionDetails}</div> */}\r\n\r\n            {/* <DefaultButton onClick={openModal} text=\"Open Modal\" /> */}\r\n            {/* <DefaultButton onClick={_onColumnClick2} text=\"Test\" /> */}\r\n            {/* <div className={classNames.controlWrapper}>\r\n                <TextField label=\"Filter by name:\" onChange={(event) => { _onChangeText(event) }} styles={controlStyles} />\r\n                <Announced message={`Number of items after filter applied: ${items.length}.`} />\r\n            </div> */}\r\n            <div className={classNames.flexDiv}>\r\n                <div>\r\n                    <Text variant={\"xLarge\"} block> Estudiantes </Text>\r\n                </div>\r\n                <Stack horizontal horizontalAlign=\"end\" styles={stackStyles}>\r\n                    <CommandBarButton iconProps={mailIcon} text=\"Borrar\" disabled={true} checked={false} />\r\n                    <CommandBarButton iconProps={addIcon} text=\"Nuevo\" onClick={openModal} />\r\n                    <SearchBox styles={searchBoxStyles} placeholder=\"Buscar\" underlined={true} onChange={(event) => { _onChangeText(event) }} />\r\n                </Stack>\r\n            </div>\r\n            {/* <Announced message={selectionDetails} /> */}\r\n            <StudentsModal addStd={_addStd} isOpen={isModalOpen} onClose={hideModal} mode={modalData.mode} data={modalData.data} />\r\n            {announcedMessage ? <Announced message={announcedMessage} /> : undefined}\r\n            {isModalSelection ? (\r\n                <MarqueeSelection selection={_selection}>\r\n                    <DetailsList\r\n                        items={items}\r\n                        compact={isCompactMode}\r\n                        columns={tableColumns}\r\n                        //selectionMode={SelectionMode.multiple}\r\n                        selectionMode={SelectionMode.single}\r\n                        getKey={_getKey}\r\n                        setKey=\"multiple\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        isHeaderVisible={true}\r\n                        selection={_selection}\r\n                        selectionPreservedOnEmptyClick={true}\r\n                        onItemInvoked={_onItemInvoked}\r\n                        enterModalSelectionOnTouch={true}\r\n                        ariaLabelForSelectionColumn=\"Toggle selection\"\r\n                        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n                        checkButtonAriaLabel=\"Row checkbox\"\r\n                        checkboxVisibility={CheckboxVisibility.hidden}\r\n                    />\r\n                </MarqueeSelection>\r\n            ) : (\r\n                    <DetailsList\r\n                        items={items}\r\n                        compact={isCompactMode}\r\n                        columns={tableColumns}\r\n                        selectionMode={SelectionMode.none}\r\n                        getKey={_getKey}\r\n                        setKey=\"none\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        isHeaderVisible={true}\r\n                        onItemInvoked={_onItemInvoked}\r\n                        selection={_selection}\r\n                    />\r\n                )}\r\n        </Fabric>\r\n    );\r\n\r\n    function _copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n        const key = columnKey as keyof T;\r\n        console.log(items[0]);\r\n        return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n    }\r\n}\r\n\r\nexport default StudentsTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Projects\\lifeministry-spera2\\src\\components\\assigmanets\\assgModal.tsx",[],"D:\\Projects\\lifeministry-spera2\\src\\components\\students\\stdModal.tsx",["116","117","118"],"import * as React from 'react';\r\nimport { useId, useBoolean } from '@uifabric/react-hooks';\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    ContextualMenu,\r\n    //Toggle,\r\n    DefaultButton,\r\n    Modal,\r\n    //IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n} from 'office-ui-fabric-react';\r\nimport { ChoiceGroup, IChoiceGroupOption, IStackStyles, Label, /* MaskedTextField, */ MessageBar, MessageBarType, PrimaryButton, Spinner, Stack, TextField, Toggle } from '@fluentui/react';\r\nimport { StudentsCalendar } from '../calendar/calendar';\r\nimport { useEffect } from 'react';\r\nimport { IStudent } from '../../types/ministry.types';\r\n\r\n\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n\r\nconst options: IChoiceGroupOption[] = [\r\n    { key: 'f', text: 'Hermana', iconProps: { iconName: 'Contact' } },\r\n    { key: 'm', text: 'Hermano', iconProps: { iconName: 'Contact' } },\r\n];\r\n\r\n\r\n/* const initialData: IStudent[] = [{\r\n    \"id\": 0,\r\n    \"name\": \"\",\r\n    \"gender\": \"f\",\r\n    \"cel\": 0,\r\n    \"active\": true,\r\n    \"notes\": \"\",\r\n    \"last\": \"\",\r\n    \"lastpartner\": 0\r\n}]\r\n */\r\ninterface Props {\r\n    addStd: any;\r\n    isOpen?: boolean;\r\n    onClose: any;\r\n    mode: string;\r\n    data: IStudent[];\r\n}\r\n\r\nconst SuccessMsg = () => (\r\n    <MessageBar\r\n        messageBarType={MessageBarType.success}\r\n        isMultiline={false}\r\n    >\r\n        La información se ha guadado correctamente\r\n    </MessageBar>\r\n);\r\n\r\nconst footerStackStyles: Partial<IStackStyles> = { root: { width: \"100%\" } };\r\n\r\nexport const StudentsModal: React.FunctionComponent<Props> = (props: Props) => {\r\n    const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n    const [stdData, setStdData] = React.useState<IStudent[]>(props.data)\r\n    const [currentDate, setCurrentDate] = React.useState<Date>()\r\n    const [isMsgShow, { setTrue: showMsg, setFalse: hideMsg }] = useBoolean(false);\r\n    const [isLoadShow, { setTrue: showLoad, setFalse: hideLoad }] = useBoolean(false);\r\n\r\n    const updateValues = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n        const ele = e.target as HTMLInputElement;\r\n        console.log(ele.id);\r\n        let value: string | number = ele.value;\r\n        const keyName = ele.id;\r\n        if (keyName === \"cel\") {\r\n            value = parseInt(value);\r\n        }\r\n        setStdData([{\r\n            ...stdData[0],\r\n            [keyName]: value\r\n        }])\r\n    }\r\n\r\n    const updateValues2 = (key?: string, value?: string | boolean | number | Date): void => {\r\n        console.log(`${key} = ${value}`);\r\n        setStdData([{\r\n            ...stdData[0],\r\n            [key as string]: value\r\n        }])\r\n    }\r\n\r\n    function _onChangeOptions(ev?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOption): void {\r\n        console.dir(option);\r\n        updateValues2(\"gender\", option?.key)\r\n    }\r\n    function _onChangeToggle(ev?: React.MouseEvent<HTMLElement>, checked?: boolean) {\r\n        console.log('toggle is ' + (checked ? 'checked' : 'not checked'));\r\n        updateValues2(\"active\", checked)\r\n    }\r\n\r\n    const onChangeDate = (date: Date) => {\r\n        console.log(date);\r\n        setCurrentDate(date);\r\n        updateValues2(\"last\", date.toISOString())\r\n    }\r\n    // Use useId() to ensure that the IDs are unique on the page.\r\n    // (It's also okay to use plain strings and manually ensure uniqueness.)\r\n    const titleId = useId('title');\r\n\r\n    const sendStdData = (): void => {\r\n        showLoad();\r\n        //updateValues2(\"last\", currentDate?.toISOString())\r\n        const result = props.addStd(stdData);\r\n        if (result) {\r\n            hideLoad();\r\n            showMsg();\r\n            setTimeout(function () { hideMsg(); }, 3000);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStdData(props.data);\r\n        console.log(props.data);\r\n        let formatedDate: string = \"01/01/21\";\r\n        const currentDate = props.data[0].last;\r\n        if (currentDate) {\r\n            formatedDate = currentDate.split(\"T\")[0].replace(/-/g, \"/\");\r\n        }\r\n        const newFormatedDate = new Date(formatedDate);\r\n        setCurrentDate(newFormatedDate);\r\n        //updateValues2(\"last\", newFormatedDate.toISOString());\r\n        if (props.mode === \"edit\") {\r\n            console.log(\"This is a edit mode modal\");\r\n            //setStdData(props.data);\r\n        } else {\r\n            console.log(\"This is a new modal\");\r\n            //updateValues2(\"last\", newFormatedDate.toISOString());\r\n        }\r\n    }, [props.data, props.mode])\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                titleAriaId={titleId}\r\n                isOpen={props.isOpen}\r\n                onDismiss={props.onClose}\r\n                isBlocking={false}\r\n                containerClassName={contentStyles.container}\r\n                dragOptions={undefined}\r\n            >\r\n                <div className={contentStyles.header}>\r\n                    <span id={titleId}>Datos del Estudiante</span>\r\n                    <IconButton\r\n                        styles={iconButtonStyles}\r\n                        iconProps={cancelIcon}\r\n                        ariaLabel=\"Close popup modal\"\r\n                        onClick={props.onClose}\r\n                    />\r\n                </div>\r\n                <div className={contentStyles.body}>\r\n                    <TextField label=\"Nombre\" id=\"name\" required defaultValue={stdData[0].name} onChange={(event) => { updateValues(event) }} />\r\n                    <ChoiceGroup label=\"Escoja uno\" id=\"gender\" required defaultSelectedKey={stdData[0].gender} options={options} onChange={_onChangeOptions} />\r\n                    <Toggle label=\"Activo\" id=\"active\" inlineLabel onText=\"Si\" offText=\"No\" defaultChecked={stdData[0].active} onChange={_onChangeToggle} />\r\n                    <TextField id=\"notes\" label=\"Nota\" onChange={(event) => { updateValues(event) }} />\r\n                    <TextField label=\"Celular\" required id=\"cel\" type=\"number\" defaultValue={stdData[0].cel.toString()} onChange={(event) => { updateValues(event) }} />\r\n                    {/* <MaskedTextField label=\"With input mask\" mask=\"(999) 999 - 9999\" /> */}\r\n                    <Label>Última asignación</Label>\r\n                    <StudentsCalendar onChangeDate={onChangeDate} currentDate={currentDate} />\r\n                </div>\r\n                <div>\r\n                    {isLoadShow &&\r\n                        <Spinner label=\"Guardando...\" ariaLive=\"assertive\" labelPosition=\"right\" />\r\n                    }\r\n                    {isMsgShow &&\r\n                        <SuccessMsg />\r\n                    }\r\n                </div>\r\n                <div className={contentStyles.footer}>\r\n                    <Stack horizontal horizontalAlign=\"end\" styles={footerStackStyles}>\r\n                        <DefaultButton text=\"Borrar\" onClick={showModal} />\r\n                        <PrimaryButton text=\"Guardar\" onClick={() => { sendStdData() }} />\r\n                    </Stack>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst theme = getTheme();\r\nconst contentStyles = mergeStyleSets({\r\n    container: {\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        alignItems: 'stretch',\r\n    },\r\n    header: [\r\n\r\n        //theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    body: {\r\n        flex: '4 4 auto',\r\n        padding: '0 24px 24px 24px',\r\n        overflowY: 'hidden',\r\n        selectors: {\r\n            p: { margin: '14px 0' },\r\n            'p:first-child': { marginTop: 0 },\r\n            'p:last-child': { marginBottom: 0 },\r\n        },\r\n    },\r\n    footer: [\r\n\r\n        //theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: '1px solid rgb(149 149 149)',\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n});\r\n\r\nconst iconButtonStyles = {\r\n    root: {\r\n        color: theme.palette.neutralPrimary,\r\n        marginLeft: 'auto',\r\n        marginTop: '4px',\r\n        marginRight: '2px',\r\n    },\r\n    rootHovered: {\r\n        color: theme.palette.neutralDark,\r\n    },\r\n};\r\n","D:\\Projects\\lifeministry-spera2\\src\\components\\calendar\\calendar.tsx",["119"],"D:\\Projects\\lifeministry-spera2\\src\\reportWebVitals.ts",[],["120","121"],"D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\dates.tsx",[],"D:\\Projects\\lifeministry-spera2\\src\\App.tsx",[],"D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\assignment.tsx",["122","123"],"import React, { useEffect, useState } from 'react';\r\n//import { LifeministryContext } from '../App';\r\n//import { IAssignment, WeeksList } from '../types/ministry.types';\r\nimport {/*  DropdownMenuItemType, */ IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { /* Checkbox, ChoiceGroup, */ Dropdown, getTheme, IDropdownStyles, /* FontWeights, getTheme, */ /* IChoiceGroupOption, */ /* IStackTokens, */ Label,/* , mergeStyleSets *//* , Stack */\r\n    mergeStyleSets\r\n} from '@fluentui/react';\r\nimport { IAssignment, WeeksList } from '../../types/ministry.types';\r\nimport { getWeeksFromMonth } from '../../pages/generator';\r\nimport { LifeministryContext } from '../../App';\r\n\r\nconst theme = getTheme();\r\nconst classNames = mergeStyleSets({\r\n    wrapper: {\r\n        //height: '40vh',\r\n        position: 'relative',\r\n        maxHeight: 'inherit',\r\n        //width: '45vh',\r\n    },\r\n    pane: {\r\n        maxWidth: 400,\r\n        border: '1px solid ' + theme.palette.neutralLight,\r\n        margin: \"10px auto\",\r\n        padding: 10\r\n    },\r\n    sticky: {\r\n        //color: theme.palette.neutralDark,\r\n        padding: '5px 20px 5px 10px',\r\n        fontSize: '13px',\r\n        //borderTop: '1px solid ' + theme.palette.black,\r\n        //borderBottom: '1px solid ' + theme.palette.black,\r\n    },\r\n    textContent: {\r\n        padding: '15px 10px',\r\n    },\r\n    checkbox: {\r\n        padding: '5px'\r\n    },\r\n    /* flexDiv: [\r\n        //theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: '1px solid rgb(149 149 149)',\r\n            //color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            width: \"100%\"\r\n            //padding: '12px 12px 14px 24px',\r\n        },\r\n    ], */\r\n});\r\n\r\n/* const sectionStackTokens: IStackTokens = { childrenGap: 30 };\r\n\r\nconst toDay: Date = new Date();\r\nconst months: string[] = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n] */\r\nconst dropdownStyles: Partial<IDropdownStyles> = {\r\n    dropdown: { width: 300, margin: \"0 auto\" },\r\n};\r\n\r\ntype tpOptions = {\r\n    [key: string]: any\r\n}\r\n\r\ninterface TimeOpts extends tpOptions {\r\n    week: boolean;\r\n    month: boolean\r\n}\r\n\r\ninterface AssignmentsSelected extends tpOptions {\r\n    week: boolean;\r\n}\r\n\r\ninterface Props {\r\n    //monthsChange: any;\r\n    //weeksChange: any;\r\n    //timeChange: any;\r\n    timeOpts: TimeOpts;\r\n    stdMonths: string[];\r\n    stdWeeks: string[];\r\n    fullWeeksList: WeeksList[];\r\n    stdAssigments: any;\r\n    assigmentsChange: any;\r\n}\r\n//function GeneratorDates() {\r\nconst GeneratorAssigments: React.FunctionComponent<Props> = (props: Props) => {\r\n    //const initialData: IAssignment[] = [{ \"id\": 0, \"name\": \"Initial\", \"type\": \"school\", \"participants\": 0 }];\r\n    const [optSelected, setOptSelected] = useState<string>(\"\");\r\n    const [weeksSelected, setWeeksSelected] = useState<WeeksList[]>([]);\r\n    const [assgList, setAssgList] = useState<IDropdownOption[]>([{ key: 'lectura', text: 'Lectura' }]);\r\n    const db: any = React.useContext(LifeministryContext);\r\n    const [stedAssignments, setstedAssignments] = React.useState({});\r\n\r\n    const onChangeAssigment = (event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption): void => {\r\n        if (option) {\r\n            console.log(option);\r\n            const ev: HTMLButtonElement = event.target as HTMLButtonElement;\r\n            const keySplit: string[] = ev.id.split(\":\");\r\n            let newstedAssignments: tpOptions = { ...stedAssignments };\r\n            newstedAssignments[keySplit[0] as string].assignmentsIds[keySplit[1]] = option.key;\r\n            setstedAssignments(newstedAssignments);\r\n            props.assigmentsChange(newstedAssignments);\r\n\r\n            /* setSelectedKeys(\r\n              item.selected ? [...selectedKeys, item.key as string] : selectedKeys.filter(key => key !== item.key),\r\n            ); */\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"Gen Dates\");\r\n        // Update the document title using the browser API\r\n        let newSelectedWeeks: any[] = [];\r\n        if (props.timeOpts.month) {\r\n            setOptSelected(\"month\");\r\n            newSelectedWeeks = getWeeksFromMonth(2021, props.stdMonths)\r\n            setWeeksSelected(newSelectedWeeks);\r\n        }\r\n        if (props.timeOpts.week) {\r\n            setOptSelected(\"week\");\r\n            newSelectedWeeks = props.fullWeeksList.filter((week, index) => {\r\n                // if (props.stdWeeks.includes(index.toString())) {\r\n                return props.stdWeeks.includes(index.toString())\r\n                //}\r\n            }).map(week => week)\r\n            setWeeksSelected(newSelectedWeeks)\r\n        }\r\n        let newSelectedAssignments = {};\r\n        newSelectedWeeks.forEach((week: any) => {\r\n            console.log(\"Creating Assi\")\r\n            newSelectedAssignments = { ...newSelectedAssignments, [week.start.toLocaleDateString()]: { assignmentsIds: [1, 2, 3, 4], dates: [], partners: [] } }\r\n        })\r\n        console.log(newSelectedAssignments);\r\n        //props.assigmentsChange(newSelectedAssignments);\r\n        setstedAssignments(newSelectedAssignments);\r\n        //let assgList: any[] = []\r\n\r\n        db.getAssignments().then((res: IAssignment[]) => {\r\n            console.log(res);\r\n            res.push({ id: 0, name: \"Video/Ninguna\", participants: 0, type: \"School\" })\r\n            setAssgList(res.map(assg => {\r\n                //console.log(assg)\r\n                return { key: assg.id, text: assg.name }\r\n            }));\r\n        });\r\n        //setAssgList(newassgList);\r\n        //console.log(assgList);\r\n    }, [props.fullWeeksList, props.stdMonths, props.stdWeeks, props.timeOpts.month, props.timeOpts.week, db, setAssgList]);\r\n\r\n    return (\r\n\r\n        <div>\r\n            {/* <div>{optSelected}</div> */}\r\n            {weeksSelected.map(week => {\r\n                return (\r\n                    <div className={classNames.pane}>\r\n                        <Label key={week.start.toLocaleDateString()}>{`Semana del ${week.start.toLocaleDateString()} al ${week.end.toLocaleDateString()}`}</Label>\r\n                        <Dropdown\r\n                            key={`${week.start.toLocaleDateString()}:0`}\r\n                            label=\"Asignación # 1\"\r\n                            defaultSelectedKey=\"lectura\"\r\n                            options={[{ key: 'lectura', text: 'Lectura' }]}\r\n                            disabled={true}\r\n                            styles={dropdownStyles}\r\n                        />\r\n                        <Dropdown\r\n                            key={`${week.start.toLocaleDateString()}:1`}\r\n                            label=\"Asignación # 2\"\r\n                            defaultSelectedKey={2}\r\n                            options={assgList}\r\n                            disabled={false}\r\n                            styles={dropdownStyles}\r\n                            id={`${week.start.toLocaleDateString()}:1`}\r\n                            onChange={onChangeAssigment}\r\n                        />\r\n                        <Dropdown\r\n                            key={`${week.start.toLocaleDateString()}:2`}\r\n                            label=\"Asignación # 3\"\r\n                            defaultSelectedKey={3}\r\n                            options={assgList}\r\n                            disabled={false}\r\n                            styles={dropdownStyles}\r\n                            id={`${week.start.toLocaleDateString()}:2`}\r\n                            onChange={onChangeAssigment}\r\n                        />\r\n                        <Dropdown\r\n                            key={`${week.start.toLocaleDateString()}:3`}\r\n                            label=\"Asignación # 4\"\r\n                            defaultSelectedKey={4}\r\n                            options={assgList}\r\n                            disabled={false}\r\n                            styles={dropdownStyles}\r\n                            id={`${week.start.toLocaleDateString()}:3`}\r\n                            onChange={onChangeAssigment}\r\n                        />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default GeneratorAssigments; \r\n","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\generator.tsx",["124","125","126","127","128","129","130","131"],"D:\\Projects\\lifeministry-spera2\\src\\pages\\assignments.tsx",["132"],"import React, { useEffect, useState } from 'react';\r\nimport { LifeministryContext } from '../App';\r\nimport AssigmentsTable from '../components/assigmanets/assgList';\r\nimport { IAssignment } from '../types/ministry.types';\r\n\r\nfunction Assignments() {\r\n    const initialData: IAssignment[] = [{ \"id\": 0, \"name\": \"Initial\", \"type\": \"school\", \"participants\": 0 }];\r\n    const [stdData, setStdData] = useState<IAssignment[]>(initialData);\r\n    const db: any = React.useContext(LifeministryContext);\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        /* const stdUrl = \"http://localhost:8000/assigments\";\r\n        console.log(stdUrl);\r\n        fetch(stdUrl)\r\n            .then((res) => res.json())\r\n            .then((repos) => {\r\n                setStdData(repos as IAssignment[])\r\n            }); */\r\n        db.getAssignments().then((res: IAssignment[]) => {\r\n            console.log(res);\r\n            setStdData(res);\r\n        });\r\n    }, [setStdData]);\r\n\r\n    return (\r\n        <AssigmentsTable data={stdData} />\r\n    );\r\n}\r\n\r\nexport default Assignments; \r\n","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\partnersLayout.tsx",["133","134","135","136","137"],"import { ActionButton, CommandBarButton, DefaultPalette, getTheme, IIconProps, IStackItemStyles, IStackStyles, IStackTokens, KTP_LAYER_ID, mergeStyleSets, PrimaryButton, Stack } from \"@fluentui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { PubsModal } from \"./pubsModal\";\r\nimport { IStudent } from \"../../types/ministry.types\";\r\n\r\ninterface Props {\r\n    partners: any;\r\n}\r\n\r\nconst stackStyles: IStackStyles = {\r\n    root: {\r\n        //background: DefaultPalette.themeTertiary,\r\n        textAlign: \"left\"\r\n    },\r\n};\r\nconst stackItemStyles: IStackItemStyles = {\r\n    root: {\r\n        //background: DefaultPalette.themePrimary,\r\n        //color: DefaultPalette.white,\r\n        padding: 5,\r\n    },\r\n};\r\nconst itemAlignmentsStackStyles: IStackStyles = {\r\n    root: {\r\n        background: DefaultPalette.themeTertiary,\r\n        height: 100,\r\n    },\r\n};\r\nconst stackTokens: IStackTokens = {\r\n    childrenGap: 5,\r\n    padding: 10,\r\n};\r\n\r\nconst containerStackTokens: IStackTokens = { childrenGap: 5 };\r\n\r\ntype tpOptions = {\r\n    [key: string]: any\r\n}\r\nconst theme = getTheme();\r\nconst classNames = mergeStyleSets({\r\n    pane: {\r\n        maxWidth: 500,\r\n        border: '1px solid ' + theme.palette.neutralLight,\r\n        margin: \"10px auto\",\r\n        //padding: 10\r\n    },\r\n    stackAssName: {\r\n        width: 200\r\n    }\r\n})\r\n\r\nconst addFriendIcon: IIconProps = { iconName: 'EditContact' };\r\n\r\nconst PartnersLayout: React.FunctionComponent<Props> = (props: Props) => {\r\n    const [allPartners, setAllPartners] = React.useState<tpOptions>(props.partners);\r\n    const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n    const [modalData, setModalData] = React.useState<{ gender: string, addr: string }>({ gender: \"m\", addr: \"\" })\r\n\r\n    const changeStd = (index: string, gender: string) => {\r\n        console.log(\"Changing participants\");\r\n        console.log(`index:${index} - gender:${gender}`)\r\n        setModalData({ gender: gender, addr: index });\r\n        showModal()\r\n    }\r\n\r\n    const selectParticipant = (participant: IStudent, index: string) => {\r\n        console.log(`new std ${participant} in index ${index}`)\r\n        const splitIndex = index.split('/')\r\n        let newStdData = { ...allPartners }\r\n        console.log(splitIndex[1])\r\n        console.log(newStdData[splitIndex[0]])\r\n        newStdData[splitIndex[0]][splitIndex[1]][splitIndex[2]] = participant;\r\n        hideModal()\r\n        //setAllPartners(newStdData);\r\n    }\r\n\r\n    const getPartnersLayout = (data: tpOptions) => {\r\n        let layout: any[] = [];\r\n        const StartDate = new Date(Object.keys(data)[0]).toDateString()\r\n        const EndDate = new Date(Object.keys(data)[Object.keys(data).length - 1]).toDateString()\r\n        layout.push(<><p><strong>{`Pograma del ${StartDate} al ${EndDate}`}</strong></p></>)\r\n        Object.entries(data).forEach((key) => {\r\n            //<strong>{key[0]}</strong>\r\n            const day: string = new Date(key[0]).toDateString()\r\n            layout.push(<strong>{day}</strong>)\r\n            key[1].forEach((couple: any, index: string) => {\r\n                console.log(couple);\r\n                layout.push(<div className={classNames.pane}>\r\n                    <Stack horizontal styles={stackStyles} tokens={stackTokens}>\r\n                        <Stack.Item grow={0} styles={stackItemStyles} className={classNames.stackAssName}>\r\n                            <span>{couple.assigmenttype.name}</span>\r\n                        </Stack.Item>\r\n                        <Stack.Item grow={2} styles={stackItemStyles}>\r\n                            {/* <ul>\r\n                                <li>\r\n                                    <ActionButton iconProps={addFriendIcon} allowDisabledFocus>\r\n                                        {couple.incharge.name}\r\n                                    </ActionButton></li>\r\n                                <li><span>{couple.helper.name}</span></li>\r\n                            </ul> */}\r\n                            Publicador:\r\n                            <ActionButton iconProps={addFriendIcon} allowDisabledFocus onClick={() => { changeStd(key[0] + \"/\" + index + \"/incharge\", couple.incharge.gender) }}>\r\n                                {couple.incharge.name}\r\n                            </ActionButton><br />\r\n                            Ayudante:\r\n                            <ActionButton iconProps={addFriendIcon} allowDisabledFocus onClick={() => { changeStd(key[0] + \"/\" + index + \"/helper\", couple.helper.gender) }}>\r\n                                {couple.helper.name}\r\n                            </ActionButton>\r\n                        </Stack.Item>\r\n                    </Stack>\r\n                </div>\r\n                )\r\n            })\r\n        })\r\n        return layout\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAllPartners(props.partners);\r\n    }, [props])\r\n\r\n    return (\r\n        <>\r\n            <PubsModal editStd={selectParticipant} isOpen={isModalOpen} onClose={hideModal} options={modalData} />\r\n            {getPartnersLayout(allPartners)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PartnersLayout;","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\pubsModal.tsx",["138","139","140","141","142","143","144","145","146","147"],"import * as React from 'react';\r\nimport { useId, useBoolean } from '@uifabric/react-hooks';\r\nimport {\r\n    getTheme,\r\n    mergeStyleSets,\r\n    FontWeights,\r\n    //ContextualMenu,\r\n    //Toggle,\r\n    DefaultButton,\r\n    Modal,\r\n    //IDragOptions,\r\n    IconButton,\r\n    IIconProps,\r\n} from 'office-ui-fabric-react';\r\nimport { /* ChoiceGroup, */ /* IChoiceGroupOption, */ IScrollablePaneStyles, IStackStyles, /* Label, MaskedTextField, */ MessageBar, MessageBarType, PrimaryButton, ScrollablePane, Spinner, Stack, TextField/* , Toggle  */ } from '@fluentui/react';\r\n//import { StudentsCalendar } from '../calendar/calendar';\r\nimport { useEffect, useState } from 'react';\r\nimport { IAssignment, IStudent } from '../../types/ministry.types';\r\nimport { LifeministryContext } from '../../App';\r\nimport SimpleStudentsTable from './simpleStdList';\r\n\r\n\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n\r\ninterface Props {\r\n    editStd: any;\r\n    isOpen?: boolean;\r\n    onClose: any;\r\n    options: { gender: string, addr: string }\r\n}\r\n\r\nconst SuccessMsg = () => (\r\n    <MessageBar\r\n        messageBarType={MessageBarType.success}\r\n        isMultiline={false}\r\n    >\r\n        La información se ha guadado correctamente\r\n    </MessageBar>\r\n);\r\n\r\nconst theme = getTheme();\r\nconst contentStyles = mergeStyleSets({\r\n    container: {\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        alignItems: 'stretch',\r\n        height: 500\r\n\r\n    },\r\n    header: [\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    body: {\r\n        flex: '4 4 auto',\r\n        padding: '0 24px 24px 24px',\r\n        //overflowY: 'hidden',\r\n        selectors: {\r\n            p: { margin: '14px 0' },\r\n            'p:first-child': { marginTop: 0 },\r\n            'p:last-child': { marginBottom: 0 },\r\n        },\r\n        overflow: 'auto',\r\n        height: 350,\r\n        width: 600\r\n\r\n    },\r\n    footer: [\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: '1px solid rgb(149 149 149)',\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    wrapper: {\r\n        height: '80vh',\r\n        position: 'relative',\r\n        maxHeight: 'inherit',\r\n    },\r\n    pane: {\r\n        maxWidth: 500,\r\n        border: '1px solid ' + theme.palette.neutralLight,\r\n    },\r\n    textContent: {\r\n        padding: '15px 10px',\r\n    },\r\n});\r\nconst scrollablePaneStyles: Partial<IScrollablePaneStyles> = { root: contentStyles.pane };\r\nconst iconButtonStyles = {\r\n    root: {\r\n        color: theme.palette.neutralPrimary,\r\n        marginLeft: 'auto',\r\n        marginTop: '4px',\r\n        marginRight: '2px',\r\n    },\r\n    rootHovered: {\r\n        color: theme.palette.neutralDark,\r\n    },\r\n};\r\n\r\nconst footerStackStyles: Partial<IStackStyles> = { root: { width: \"100%\" } };\r\n\r\nexport const PubsModal: React.FunctionComponent<Props> = (props: Props) => {\r\n    //const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n    //const [currentDate, setCurrentDate] = React.useState<Date>()\r\n    const [isMsgShow, { setTrue: showMsg, setFalse: hideMsg }] = useBoolean(false);\r\n    const [isLoadShow, { setTrue: showLoad, setFalse: hideLoad }] = useBoolean(false);\r\n    const [stdData, setStdData] = useState<IStudent[]>([])\r\n    const [participant, setParticipant] = useState<IStudent | undefined>()\r\n    const db: any = React.useContext(LifeministryContext)\r\n\r\n    const updateValues = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n        const ele = e.target as HTMLInputElement;\r\n        console.log(ele.id);\r\n        let value: string | number = ele.value;\r\n        const keyName = ele.id;\r\n        if (keyName === \"participants\") {\r\n            value = parseInt(value);\r\n        }\r\n        /*  setStdData([{\r\n             ...stdData[0],\r\n             [keyName]: value\r\n         }]) */\r\n    }\r\n\r\n    const titleId = useId('title');\r\n\r\n    const sendStdData = (): void => {\r\n        //showLoad();\r\n        console.log(participant);\r\n        props.editStd(participant, props.options.addr);\r\n        //updateValues2(\"last\", currentDate?.toISOString())\r\n        /* const result = props.addStd(stdData);\r\n        if (result) {\r\n            hideLoad();\r\n            showMsg();\r\n            setTimeout(function () { hideMsg(); }, 3000);\r\n        } */\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(props.options)\r\n        console.log(db.getStudents(props.options.gender, \"active\").then((res: IStudent[]) => {\r\n            console.log(res);\r\n            setStdData(res)\r\n        }));\r\n    }, [db, props.options])\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                titleAriaId={titleId}\r\n                isOpen={props.isOpen}\r\n                onDismiss={props.onClose}\r\n                isBlocking={false}\r\n                containerClassName={contentStyles.container}\r\n                dragOptions={undefined}\r\n                allowTouchBodyScroll={true}\r\n            >\r\n                <div className={contentStyles.header}>\r\n                    <span id={titleId}>Lista de publicadores</span>\r\n                    <IconButton\r\n                        styles={iconButtonStyles}\r\n                        iconProps={cancelIcon}\r\n                        ariaLabel=\"Close popup modal\"\r\n                        onClick={props.onClose}\r\n                    />\r\n                </div>\r\n                <div className={contentStyles.body}>\r\n                    {/* <ScrollablePane\r\n\r\n                    >\r\n                        \r\n                    </ScrollablePane> */}\r\n                    <SimpleStudentsTable data={stdData} cllBack={setParticipant} />\r\n\r\n                </div>\r\n                <div>\r\n                    {isLoadShow &&\r\n                        <Spinner label=\"Guardando...\" ariaLive=\"assertive\" labelPosition=\"right\" />\r\n                    }\r\n                    {isMsgShow &&\r\n                        <SuccessMsg />\r\n                    }\r\n                </div>\r\n                <div className={contentStyles.footer}>\r\n                    <Stack horizontal horizontalAlign=\"end\" styles={footerStackStyles}>\r\n                        <DefaultButton text=\"Cancelar\" onClick={props.onClose} />\r\n                        <PrimaryButton text=\"Aceptar\" onClick={() => { sendStdData() }} />\r\n                    </Stack>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n",["148","149"],"D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\simpleStdList.tsx",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"import * as React from 'react';\r\n//import { TextField } from 'office-ui-fabric-react/lib/TextField';\r\n//import { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { Announced } from 'office-ui-fabric-react/lib/Announced';\r\nimport {\r\n    DetailsList,\r\n    DetailsListLayoutMode,\r\n    Selection,\r\n    SelectionMode,\r\n    IColumn,\r\n    CheckboxVisibility,\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\nimport { CommandBarButton, /* DefaultButton, */ DefaultPalette, FontWeights, IIconProps, ISearchBoxStyles, IStackItemStyles, IStackStyles, IStackTokens, Label, SearchBox, Stack, Text } from '@fluentui/react';\r\nimport { IStudent } from '../../types/ministry.types';\r\nimport { LifeministryContext } from '../../App';\r\n\r\nconst classNames = mergeStyleSets({\r\n    fileIconHeaderIcon: {\r\n        padding: 0,\r\n        fontSize: '16px',\r\n    },\r\n    fileIconCell: {\r\n        textAlign: 'center',\r\n        selectors: {\r\n            '&:before': {\r\n                content: '.',\r\n                display: 'inline-block',\r\n                verticalAlign: 'middle',\r\n                height: '100%',\r\n                width: '0px',\r\n                visibility: 'hidden',\r\n            },\r\n        },\r\n    },\r\n    fileIconImg: {\r\n        verticalAlign: 'middle',\r\n        maxHeight: '16px',\r\n        maxWidth: '16px',\r\n    },\r\n    controlWrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    exampleToggle: {\r\n        display: 'inline-block',\r\n        marginBottom: '10px',\r\n        marginRight: '30px',\r\n    },\r\n    selectionDetails: {\r\n        marginBottom: '20px',\r\n    },\r\n    flexDiv: [\r\n        //theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: '1px solid rgb(149 149 149)',\r\n            //color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            width: \"100%\"\r\n            //padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n});\r\n\r\nexport interface IDetailsListDocumentsExampleState {\r\n    columns: IColumn[];\r\n    items: IStudent[];\r\n    selectionDetails: string;\r\n    isModalSelection: boolean;\r\n    isCompactMode: boolean;\r\n    announcedMessage?: string;\r\n}\r\n\r\nexport interface IDocument {\r\n    key: string;\r\n    name: string;\r\n    value: string;\r\n    iconName: string;\r\n    fileType: string;\r\n    modifiedBy: string;\r\n    dateModified: string;\r\n    dateModifiedValue: number;\r\n    fileSize: string;\r\n    fileSizeRaw: number;\r\n}\r\n\r\ninterface Props {\r\n    data: IStudent[];\r\n    cllBack: any\r\n}\r\n\r\nconst initialData: IStudent[] = [{\r\n    \"id\": 0,\r\n    \"name\": \"\",\r\n    \"gender\": \"f\",\r\n    \"cel\": 0,\r\n    \"active\": true,\r\n    \"notes\": \"\",\r\n    \"last\": new Date(\"01/01/21\").toISOString(),\r\n    \"lastpartner\": 0\r\n}]\r\n\r\nconst searchBoxStyles: Partial<ISearchBoxStyles> = { root: { width: 200, height: 44 } };\r\n\r\nconst addIcon: IIconProps = { iconName: 'Add' };\r\nconst mailIcon: IIconProps = { iconName: 'Mail' };\r\nconst stackStyles: Partial<IStackStyles> = { root: { width: \"100%\", height: 44 } };\r\n\r\nconst fabricStyle: IStackStyles = {\r\n    root: {\r\n        width: \"100%\",\r\n    },\r\n};\r\n\r\nconst SimpleStudentsTable = (props: Props) => {\r\n    //export class StudentsTable extends React.Component<{}, IDetailsListDocumentsExampleState> {\r\n    let _selection: Selection;\r\n    //let _selection2: Selection;\r\n    //let _allItems: IStudent[];\r\n    //_allItems = props.data;\r\n    //console.log(_allItems[0]);\r\n    const isModalSelection = true;\r\n    const isCompactMode = false;\r\n\r\n    const [items, setItems] = React.useState<IStudent[]>([]);\r\n    const [announcedMessage, setAnnouncedMessage] = React.useState();\r\n    const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\r\n    const [modalData, setModalData] = React.useState({ mode: \"new\", data: initialData })\r\n    const db: any = React.useContext(LifeministryContext)\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"component updated\");\r\n        setItems(props.data);\r\n        //_allItems = props.data;\r\n        //console.log(_allItems[0]);\r\n    }, [props, isModalOpen]);\r\n\r\n    const _onColumnClick2 = (): void => {\r\n        console.log(\"Call from 2 function\");\r\n        console.log(items[0]);\r\n        console.log(props.data[0])\r\n    }\r\n\r\n    const _onColumnClick = (ev: React.MouseEvent<HTMLElement>, column: IColumn): void => {\r\n        //const { columns, items } = state;\r\n        //_onColumnClick2();\r\n        console.log(items[0]);\r\n        const newColumns: IColumn[] = tableColumns.slice();\r\n        const currColumn: IColumn = newColumns.filter(currCol => column.key === currCol.key)[0];\r\n        newColumns.forEach((newCol: IColumn) => {\r\n            if (newCol === currColumn) {\r\n                currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n                currColumn.isSorted = true;\r\n                //setAnnouncedMessage(`${currColumn.name} is sorted ${currColumn.isSortedDescending ? 'descending' : 'ascending'}`)\r\n            } else {\r\n                newCol.isSorted = false;\r\n                newCol.isSortedDescending = true;\r\n            }\r\n        });\r\n        console.log(props.data[0])\r\n        const newItems = _copyAndSort(props.data, currColumn.fieldName!, currColumn.isSortedDescending);\r\n        setColumns(newColumns);\r\n        setItems(newItems);\r\n    };\r\n\r\n    _selection = new Selection({\r\n        onSelectionChanged: () => {\r\n            console.log(items[0]);\r\n            console.log(\"Row selected\");\r\n            //setSelectionDetails(_getSelectionDetails());\r\n            const crrStudentData: string | IStudent[] = _getSelectionDetails();\r\n            console.log(crrStudentData[0])\r\n            props.cllBack(crrStudentData[0])\r\n           /*  setModalData({\r\n                mode: \"edit\",\r\n                data: crrStudentData as IStudent[]\r\n            })\r\n            showModal() */;\r\n        },\r\n    });\r\n\r\n    const _getSelectionDetails = (): string | IStudent[] => {\r\n        const selectionCount = _selection.getSelectedCount();\r\n\r\n        switch (selectionCount) {\r\n            case 0:\r\n                return initialData;\r\n            case 1:\r\n                //return '1 item selected: ' + (_selection.getSelection()[0] as IStudent).name;\r\n                return _selection.getSelection() as IStudent[];\r\n            default:\r\n                return `${selectionCount} items selected`;\r\n        }\r\n    }\r\n\r\n    const columns: IColumn[] = [\r\n        {\r\n            key: 'column1',\r\n            name: 'Icon',\r\n            className: classNames.fileIconCell,\r\n            iconClassName: classNames.fileIconHeaderIcon,\r\n            ariaLabel: 'Column operations for File type, Press to sort on File type',\r\n            iconName: 'Page',\r\n            isIconOnly: true,\r\n            fieldName: 'name',\r\n            minWidth: 16,\r\n            maxWidth: 16,\r\n            onColumnClick: _onColumnClick,\r\n            /* onRender: (item: IStudent) => {\r\n                return <img src={item.iconName} className={classNames.fileIconImg} alt={item.fileType + ' file icon'} />;\r\n            }, */\r\n        },\r\n        {\r\n            key: 'column2',\r\n            name: 'Nombre',\r\n            fieldName: 'name',\r\n            minWidth: 100,\r\n            maxWidth: 150,\r\n            isRowHeader: true,\r\n            isResizable: true,\r\n            isSorted: true,\r\n            isSortedDescending: false,\r\n            sortAscendingAriaLabel: 'Sorted A to Z',\r\n            sortDescendingAriaLabel: 'Sorted Z to A',\r\n            onColumnClick: _onColumnClick,\r\n            data: 'string',\r\n            isPadded: true,\r\n        },\r\n\r\n        /* {\r\n            key: 'column4',\r\n            name: 'Activo',\r\n            fieldName: 'active',\r\n            minWidth: 50,\r\n            maxWidth: 50,\r\n            isResizable: true,\r\n            isCollapsible: true,\r\n            data: 'boolean',\r\n            onColumnClick: _onColumnClick,\r\n            onRender: (item: IStudent) => {\r\n                return <span>{item.active ? \"Si\" : \"No\"}</span>;\r\n            },\r\n            isPadded: true,\r\n        }, */\r\n        {\r\n            key: 'column6',\r\n            name: 'Nota',\r\n            fieldName: 'notes',\r\n            minWidth: 70,\r\n            maxWidth: 100,\r\n            isResizable: true,\r\n            isCollapsible: true,\r\n            data: 'string',\r\n            onColumnClick: _onColumnClick2,\r\n            onRender: (item: IStudent) => {\r\n                return <span>{item.notes}</span>;\r\n            },\r\n        },\r\n        {\r\n            key: 'column7',\r\n            name: 'Last',\r\n            fieldName: 'last',\r\n            minWidth: 70,\r\n            maxWidth: 90,\r\n            isResizable: true,\r\n            isCollapsible: true,\r\n            data: 'string',\r\n            onColumnClick: _onColumnClick,\r\n            onRender: (item: IStudent) => {\r\n                return <span>{new Date(item.last).toDateString()}</span>;\r\n                //return <span>{item.last}</span>;\r\n            },\r\n        },\r\n        /* {\r\n            key: 'column8',\r\n            name: 'Last Partner',\r\n            fieldName: 'lastpartner',\r\n            minWidth: 50,\r\n            maxWidth: 70,\r\n            isResizable: true,\r\n            isCollapsible: true,\r\n            data: 'string',\r\n            onColumnClick: _onColumnClick,\r\n            onRender: (item: IStudent) => {\r\n                return <span>{item.lastpartner}</span>;\r\n            },\r\n        }, */\r\n    ];\r\n    //_allItems = [{ \"id\": 1, \"name\": \"Ana Iris Arrieta \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:00Z\", \"lastpartner\": 0 }, { \"id\": 2, \"name\": \"Kelly Arrieta \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:01Z\", \"lastpartner\": 0 }, { \"id\": 3, \"name\": \"Wilson Arrieta \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:02Z\", \"lastpartner\": 0 }, { \"id\": 4, \"name\": \"Wilson hijo Arrieta \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:03Z\", \"lastpartner\": 0 }, { \"id\": 5, \"name\": \"Claribel Cárdenas \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:04Z\", \"lastpartner\": 0 }, { \"id\": 6, \"name\": \"Samuel Cárdenas \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:05Z\", \"lastpartner\": 0 }, { \"id\": 7, \"name\": \"Yesenia Cárdenas\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:06Z\", \"lastpartner\": 0 }, { \"id\": 8, \"name\": \"Vélez Carolina \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:07Z\", \"lastpartner\": 0 }, { \"id\": 9, \"name\": \"Dairo C Chávez \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:08Z\", \"lastpartner\": 0 }, { \"id\": 10, \"name\": \"Mary Cielo Corpus \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:09Z\", \"lastpartner\": 0 }, { \"id\": 11, \"name\": \"Pablo Corpus \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:10Z\", \"lastpartner\": 0 }, { \"id\": 12, \"name\": \"Paulina Corpus \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:11Z\", \"lastpartner\": 0 }, { \"id\": 13, \"name\": \"Aldair Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:12Z\", \"lastpartner\": 0 }, { \"id\": 14, \"name\": \"Iván Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:13Z\", \"lastpartner\": 0 }, { \"id\": 15, \"name\": \"Jael Galván \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:14Z\", \"lastpartner\": 0 }, { \"id\": 16, \"name\": \"Nelson Galvis Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:15Z\", \"lastpartner\": 0 }, { \"id\": 17, \"name\": \"Abad García \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:16Z\", \"lastpartner\": 0 }, { \"id\": 18, \"name\": \"Doris González \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:17Z\", \"lastpartner\": 0 }, { \"id\": 19, \"name\": \"Brenda Guardo \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:18Z\", \"lastpartner\": 0 }, { \"id\": 20, \"name\": \"Celia Guardo \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-26T11:58:04.3956794-05:00\", \"lastpartner\": 38 }, { \"id\": 21, \"name\": \"Oleida Guzmán \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:20Z\", \"lastpartner\": 0 }, { \"id\": 22, \"name\": \"Eneida Hoyos \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:21Z\", \"lastpartner\": 0 }, { \"id\": 23, \"name\": \"Marley Jaller \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:22Z\", \"lastpartner\": 0 }, { \"id\": 24, \"name\": \"Eduardo Jaller \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:23Z\", \"lastpartner\": 0 }, { \"id\": 25, \"name\": \"Salma Jaller \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:24Z\", \"lastpartner\": 0 }, { \"id\": 26, \"name\": \"Isabella Jiménez \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:25Z\", \"lastpartner\": 0 }, { \"id\": 27, \"name\": \"Lilián Manchego \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:26Z\", \"lastpartner\": 0 }, { \"id\": 28, \"name\": \"Isabel Manjarrés\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:27Z\", \"lastpartner\": 0 }, { \"id\": 29, \"name\": \"Angélica Montesinos\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:28Z\", \"lastpartner\": 0 }, { \"id\": 30, \"name\": \"Pio Pacheco\", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:29Z\", \"lastpartner\": 0 }, { \"id\": 31, \"name\": \"Maryonis Pacheco\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:30Z\", \"lastpartner\": 0 }, { \"id\": 32, \"name\": \"Rita Rico \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:31Z\", \"lastpartner\": 0 }, { \"id\": 33, \"name\": \"Karol Rincón \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:32Z\", \"lastpartner\": 0 }, { \"id\": 34, \"name\": \"Katerin Rincón\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:33Z\", \"lastpartner\": 0 }, { \"id\": 35, \"name\": \"Rosmira Rodríguez\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:34Z\", \"lastpartner\": 0 }, { \"id\": 36, \"name\": \"Sixta Rodríguez \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:35Z\", \"lastpartner\": 0 }, { \"id\": 37, \"name\": \"Erika Silgado\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:36Z\", \"lastpartner\": 0 }, { \"id\": 38, \"name\": \"Lorena Silgado\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-26T11:58:04.3956794-05:00\", \"lastpartner\": 20 }, { \"id\": 39, \"name\": \"Ana Turizo\", \"gender\": \"f\", \"cel\": 0, \"active\": false, \"notes\": \"\", \"last\": \"2020-11-01T00:00:38Z\", \"lastpartner\": 0 }, { \"id\": 40, \"name\": \"Calixto Turizo\", \"gender\": \"m\", \"cel\": 0, \"active\": false, \"notes\": \"\", \"last\": \"2020-11-01T00:00:39Z\", \"lastpartner\": 0 }, { \"id\": 41, \"name\": \"Máximo Villalobos\", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:40Z\", \"lastpartner\": 0 }, { \"id\": 42, \"name\": \"Sara Villalobos\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:41Z\", \"lastpartner\": 0 }, { \"id\": 43, \"name\": \"Yadith Villalobos \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:42Z\", \"lastpartner\": 0 }]\r\n    const [tableColumns, setColumns] = React.useState(columns);\r\n    //const [selectionDetails, setSelectionDetails] = React.useState(_getSelectionDetails);\r\n    //constructor(props: {}) {\r\n    //super(props);\r\n\r\n    //_allItems = _generateDocuments();\r\n\r\n    const _getKey = (item: any, index?: number): string => {\r\n        return item.key;\r\n    }\r\n\r\n    const _onChangeText = (ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n        const text2 = ev?.target as HTMLButtonElement;\r\n        console.log(text2.value);\r\n        const text = text2.value;\r\n        //setItems(text ? _allItems.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _allItems)\r\n        console.log(items);\r\n    };\r\n\r\n    const _onItemInvoked = (item: any): void => {\r\n        alert(`Item invoked: ${item.name}`);\r\n    }\r\n\r\n    const openModal = () => {\r\n        console.log(\"Opening\");\r\n        setModalData({\r\n            mode: \"new\",\r\n            data: initialData\r\n        })\r\n        showModal();\r\n    }\r\n\r\n    const onClickTest = () => {\r\n        console.log(\"Good Click\")\r\n    }\r\n\r\n\r\n    /*  useEffect(() => {\r\n \r\n     }); */\r\n    //const { isCompactMode, items, selectionDetails, isModalSelection, announcedMessage } = state;\r\n\r\n    return (\r\n        <Fabric styles={fabricStyle}>\r\n            {/* <div className={classNames.selectionDetails}>{selectionDetails}</div> */}\r\n\r\n            {/* <DefaultButton onClick={openModal} text=\"Open Modal\" /> */}\r\n            {/* <DefaultButton onClick={_onColumnClick2} text=\"Test\" /> */}\r\n            {/* <div className={classNames.controlWrapper}>\r\n                <TextField label=\"Filter by name:\" onChange={(event) => { _onChangeText(event) }} styles={controlStyles} />\r\n                <Announced message={`Number of items after filter applied: ${items.length}.`} />\r\n            </div> */}\r\n            {/* <div className={classNames.flexDiv}>\r\n                <div>\r\n                    <Text variant={\"xLarge\"} block> Estudiantes </Text>\r\n                </div>\r\n            </div> */}\r\n            {/* <Announced message={selectionDetails} /> */}\r\n            {/* {announcedMessage ? <Announced message={announcedMessage} /> : undefined} */}\r\n            {isModalSelection ? (\r\n                <MarqueeSelection selection={_selection}>\r\n                    <DetailsList\r\n                        items={items}\r\n                        compact={isCompactMode}\r\n                        columns={tableColumns}\r\n                        //selectionMode={SelectionMode.multiple}\r\n                        selectionMode={SelectionMode.single}\r\n                        getKey={_getKey}\r\n                        setKey=\"multiple\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        isHeaderVisible={true}\r\n                        selection={_selection}\r\n                        selectionPreservedOnEmptyClick={true}\r\n                        onItemInvoked={_onItemInvoked}\r\n                        enterModalSelectionOnTouch={true}\r\n                        ariaLabelForSelectionColumn=\"Toggle selection\"\r\n                        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n                        checkButtonAriaLabel=\"Row checkbox\"\r\n                        checkboxVisibility={CheckboxVisibility.hidden}\r\n                    />\r\n                </MarqueeSelection>\r\n            ) : (\r\n                    <DetailsList\r\n                        items={items}\r\n                        compact={isCompactMode}\r\n                        columns={tableColumns}\r\n                        selectionMode={SelectionMode.none}\r\n                        getKey={_getKey}\r\n                        setKey=\"none\"\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        isHeaderVisible={true}\r\n                        onItemInvoked={_onItemInvoked}\r\n                        selection={_selection}\r\n                    />\r\n                )}\r\n        </Fabric>\r\n    );\r\n\r\n    function _copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n        const key = columnKey as keyof T;\r\n        console.log(items[0]);\r\n        return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n    }\r\n}\r\n\r\nexport default SimpleStudentsTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Projects\\lifeministry-spera2\\src\\components\\generator\\schedulesList.tsx",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196"],{"ruleId":"197","severity":1,"message":"198","line":1,"column":28,"nodeType":"199","messageId":"200","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"201","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":29},{"ruleId":"197","severity":1,"message":"202","line":4,"column":10,"nodeType":"199","messageId":"200","endLine":4,"endColumn":30},{"ruleId":"197","severity":1,"message":"203","line":4,"column":32,"nodeType":"199","messageId":"200","endLine":4,"endColumn":47},{"ruleId":"197","severity":1,"message":"204","line":5,"column":123,"nodeType":"199","messageId":"200","endLine":5,"endColumn":138},{"ruleId":"197","severity":1,"message":"205","line":5,"column":140,"nodeType":"199","messageId":"200","endLine":5,"endColumn":153},{"ruleId":"197","severity":1,"message":"206","line":146,"column":11,"nodeType":"199","messageId":"200","endLine":146,"endColumn":37},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":25,"column":8,"nodeType":"213","endLine":25,"endColumn":20,"suggestions":"214"},{"ruleId":"207","replacedBy":"215"},{"ruleId":"209","replacedBy":"216"},{"ruleId":"197","severity":1,"message":"217","line":148,"column":30,"nodeType":"199","messageId":"200","endLine":148,"endColumn":49},{"ruleId":"197","severity":1,"message":"218","line":18,"column":49,"nodeType":"199","messageId":"200","endLine":18,"endColumn":63},{"ruleId":"197","severity":1,"message":"219","line":18,"column":108,"nodeType":"199","messageId":"200","endLine":18,"endColumn":124},{"ruleId":"197","severity":1,"message":"220","line":18,"column":140,"nodeType":"199","messageId":"200","endLine":18,"endColumn":152},{"ruleId":"197","severity":1,"message":"221","line":18,"column":154,"nodeType":"199","messageId":"200","endLine":18,"endColumn":159},{"ruleId":"197","severity":1,"message":"217","line":154,"column":30,"nodeType":"199","messageId":"200","endLine":154,"endColumn":49},{"ruleId":"211","severity":1,"message":"222","line":162,"column":21,"nodeType":"223","endLine":162,"endColumn":31},{"ruleId":"197","severity":1,"message":"224","line":397,"column":11,"nodeType":"199","messageId":"200","endLine":397,"endColumn":20},{"ruleId":"197","severity":1,"message":"225","line":415,"column":11,"nodeType":"199","messageId":"200","endLine":415,"endColumn":21},{"ruleId":"197","severity":1,"message":"226","line":429,"column":11,"nodeType":"199","messageId":"200","endLine":429,"endColumn":22},{"ruleId":"197","severity":1,"message":"227","line":7,"column":5,"nodeType":"199","messageId":"200","endLine":7,"endColumn":19},{"ruleId":"197","severity":1,"message":"228","line":60,"column":12,"nodeType":"199","messageId":"200","endLine":60,"endColumn":23},{"ruleId":"197","severity":1,"message":"229","line":60,"column":57,"nodeType":"199","messageId":"200","endLine":60,"endColumn":66},{"ruleId":"211","severity":1,"message":"230","line":80,"column":8,"nodeType":"213","endLine":80,"endColumn":10,"suggestions":"231"},{"ruleId":"207","replacedBy":"232"},{"ruleId":"209","replacedBy":"233"},{"ruleId":"197","severity":1,"message":"234","line":84,"column":11,"nodeType":"199","messageId":"200","endLine":84,"endColumn":30},{"ruleId":"197","severity":1,"message":"235","line":102,"column":12,"nodeType":"199","messageId":"200","endLine":102,"endColumn":23},{"ruleId":"197","severity":1,"message":"236","line":1,"column":10,"nodeType":"199","messageId":"200","endLine":1,"endColumn":22},{"ruleId":"197","severity":1,"message":"218","line":1,"column":42,"nodeType":"199","messageId":"200","endLine":1,"endColumn":56},{"ruleId":"197","severity":1,"message":"219","line":1,"column":80,"nodeType":"199","messageId":"200","endLine":1,"endColumn":96},{"ruleId":"197","severity":1,"message":"237","line":1,"column":98,"nodeType":"199","messageId":"200","endLine":1,"endColumn":110},{"ruleId":"197","severity":1,"message":"220","line":1,"column":112,"nodeType":"199","messageId":"200","endLine":1,"endColumn":124},{"ruleId":"197","severity":1,"message":"238","line":1,"column":126,"nodeType":"199","messageId":"200","endLine":1,"endColumn":138},{"ruleId":"197","severity":1,"message":"239","line":1,"column":171,"nodeType":"199","messageId":"200","endLine":1,"endColumn":176},{"ruleId":"197","severity":1,"message":"240","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":28},{"ruleId":"211","severity":1,"message":"212","line":24,"column":8,"nodeType":"213","endLine":24,"endColumn":20,"suggestions":"241"},{"ruleId":"197","severity":1,"message":"242","line":1,"column":24,"nodeType":"199","messageId":"200","endLine":1,"endColumn":40},{"ruleId":"197","severity":1,"message":"238","line":1,"column":126,"nodeType":"199","messageId":"200","endLine":1,"endColumn":138},{"ruleId":"197","severity":1,"message":"205","line":1,"column":156,"nodeType":"199","messageId":"200","endLine":1,"endColumn":169},{"ruleId":"197","severity":1,"message":"243","line":24,"column":7,"nodeType":"199","messageId":"200","endLine":24,"endColumn":46},{"ruleId":"197","severity":1,"message":"244","line":35,"column":7,"nodeType":"199","messageId":"200","endLine":35,"endColumn":41},{"ruleId":"197","severity":1,"message":"245","line":15,"column":165,"nodeType":"199","messageId":"200","endLine":15,"endColumn":179},{"ruleId":"197","severity":1,"message":"246","line":15,"column":197,"nodeType":"199","messageId":"200","endLine":15,"endColumn":206},{"ruleId":"197","severity":1,"message":"247","line":18,"column":10,"nodeType":"199","messageId":"200","endLine":18,"endColumn":21},{"ruleId":"197","severity":1,"message":"248","line":99,"column":7,"nodeType":"199","messageId":"200","endLine":99,"endColumn":59},{"ruleId":"197","severity":1,"message":"249","line":117,"column":34,"nodeType":"199","messageId":"200","endLine":117,"endColumn":41},{"ruleId":"197","severity":1,"message":"250","line":117,"column":53,"nodeType":"199","messageId":"200","endLine":117,"endColumn":60},{"ruleId":"197","severity":1,"message":"251","line":118,"column":35,"nodeType":"199","messageId":"200","endLine":118,"endColumn":43},{"ruleId":"197","severity":1,"message":"252","line":118,"column":55,"nodeType":"199","messageId":"200","endLine":118,"endColumn":63},{"ruleId":"197","severity":1,"message":"253","line":123,"column":11,"nodeType":"199","messageId":"200","endLine":123,"endColumn":23},{"ruleId":"197","severity":1,"message":"254","line":129,"column":30,"nodeType":"199","messageId":"200","endLine":129,"endColumn":35},{"ruleId":"207","replacedBy":"255"},{"ruleId":"209","replacedBy":"256"},{"ruleId":"197","severity":1,"message":"257","line":5,"column":10,"nodeType":"199","messageId":"200","endLine":5,"endColumn":19},{"ruleId":"197","severity":1,"message":"242","line":17,"column":10,"nodeType":"199","messageId":"200","endLine":17,"endColumn":26},{"ruleId":"197","severity":1,"message":"218","line":17,"column":49,"nodeType":"199","messageId":"200","endLine":17,"endColumn":63},{"ruleId":"197","severity":1,"message":"219","line":17,"column":108,"nodeType":"199","messageId":"200","endLine":17,"endColumn":124},{"ruleId":"197","severity":1,"message":"220","line":17,"column":140,"nodeType":"199","messageId":"200","endLine":17,"endColumn":152},{"ruleId":"197","severity":1,"message":"221","line":17,"column":154,"nodeType":"199","messageId":"200","endLine":17,"endColumn":159},{"ruleId":"197","severity":1,"message":"258","line":17,"column":161,"nodeType":"199","messageId":"200","endLine":17,"endColumn":170},{"ruleId":"197","severity":1,"message":"239","line":17,"column":172,"nodeType":"199","messageId":"200","endLine":17,"endColumn":177},{"ruleId":"197","severity":1,"message":"259","line":17,"column":179,"nodeType":"199","messageId":"200","endLine":17,"endColumn":183},{"ruleId":"197","severity":1,"message":"260","line":109,"column":7,"nodeType":"199","messageId":"200","endLine":109,"endColumn":49},{"ruleId":"197","severity":1,"message":"261","line":111,"column":7,"nodeType":"199","messageId":"200","endLine":111,"endColumn":26},{"ruleId":"197","severity":1,"message":"262","line":112,"column":7,"nodeType":"199","messageId":"200","endLine":112,"endColumn":27},{"ruleId":"197","severity":1,"message":"263","line":113,"column":7,"nodeType":"199","messageId":"200","endLine":113,"endColumn":41},{"ruleId":"197","severity":1,"message":"264","line":132,"column":12,"nodeType":"199","messageId":"200","endLine":132,"endColumn":28},{"ruleId":"197","severity":1,"message":"217","line":132,"column":30,"nodeType":"199","messageId":"200","endLine":132,"endColumn":49},{"ruleId":"197","severity":1,"message":"229","line":133,"column":57,"nodeType":"199","messageId":"200","endLine":133,"endColumn":66},{"ruleId":"197","severity":1,"message":"265","line":134,"column":12,"nodeType":"199","messageId":"200","endLine":134,"endColumn":21},{"ruleId":"197","severity":1,"message":"266","line":135,"column":11,"nodeType":"199","messageId":"200","endLine":135,"endColumn":18},{"ruleId":"197","severity":1,"message":"267","line":307,"column":11,"nodeType":"199","messageId":"200","endLine":307,"endColumn":24},{"ruleId":"197","severity":1,"message":"268","line":310,"column":15,"nodeType":"199","messageId":"200","endLine":310,"endColumn":19},{"ruleId":"197","severity":1,"message":"269","line":319,"column":11,"nodeType":"199","messageId":"200","endLine":319,"endColumn":20},{"ruleId":"197","severity":1,"message":"226","line":328,"column":11,"nodeType":"199","messageId":"200","endLine":328,"endColumn":22},{"ruleId":"197","severity":1,"message":"257","line":5,"column":10,"nodeType":"199","messageId":"200","endLine":5,"endColumn":19},{"ruleId":"197","severity":1,"message":"242","line":17,"column":24,"nodeType":"199","messageId":"200","endLine":17,"endColumn":40},{"ruleId":"197","severity":1,"message":"218","line":17,"column":63,"nodeType":"199","messageId":"200","endLine":17,"endColumn":77},{"ruleId":"197","severity":1,"message":"219","line":17,"column":122,"nodeType":"199","messageId":"200","endLine":17,"endColumn":138},{"ruleId":"197","severity":1,"message":"220","line":17,"column":154,"nodeType":"199","messageId":"200","endLine":17,"endColumn":166},{"ruleId":"197","severity":1,"message":"221","line":17,"column":168,"nodeType":"199","messageId":"200","endLine":17,"endColumn":173},{"ruleId":"197","severity":1,"message":"258","line":17,"column":175,"nodeType":"199","messageId":"200","endLine":17,"endColumn":184},{"ruleId":"197","severity":1,"message":"239","line":17,"column":186,"nodeType":"199","messageId":"200","endLine":17,"endColumn":191},{"ruleId":"197","severity":1,"message":"259","line":17,"column":193,"nodeType":"199","messageId":"200","endLine":17,"endColumn":197},{"ruleId":"197","severity":1,"message":"260","line":109,"column":7,"nodeType":"199","messageId":"200","endLine":109,"endColumn":49},{"ruleId":"197","severity":1,"message":"270","line":111,"column":7,"nodeType":"199","messageId":"200","endLine":111,"endColumn":26},{"ruleId":"197","severity":1,"message":"262","line":112,"column":7,"nodeType":"199","messageId":"200","endLine":112,"endColumn":27},{"ruleId":"197","severity":1,"message":"263","line":113,"column":7,"nodeType":"199","messageId":"200","endLine":113,"endColumn":41},{"ruleId":"197","severity":1,"message":"264","line":133,"column":12,"nodeType":"199","messageId":"200","endLine":133,"endColumn":28},{"ruleId":"197","severity":1,"message":"217","line":133,"column":30,"nodeType":"199","messageId":"200","endLine":133,"endColumn":49},{"ruleId":"197","severity":1,"message":"228","line":134,"column":12,"nodeType":"199","messageId":"200","endLine":134,"endColumn":23},{"ruleId":"197","severity":1,"message":"229","line":134,"column":57,"nodeType":"199","messageId":"200","endLine":134,"endColumn":66},{"ruleId":"197","severity":1,"message":"265","line":135,"column":12,"nodeType":"199","messageId":"200","endLine":135,"endColumn":21},{"ruleId":"211","severity":1,"message":"271","line":148,"column":8,"nodeType":"213","endLine":148,"endColumn":10,"suggestions":"272"},{"ruleId":"197","severity":1,"message":"273","line":314,"column":26,"nodeType":"199","messageId":"200","endLine":314,"endColumn":36},{"ruleId":"197","severity":1,"message":"267","line":325,"column":11,"nodeType":"199","messageId":"200","endLine":325,"endColumn":24},{"ruleId":"197","severity":1,"message":"268","line":328,"column":15,"nodeType":"199","messageId":"200","endLine":328,"endColumn":19},{"ruleId":"197","severity":1,"message":"269","line":337,"column":11,"nodeType":"199","messageId":"200","endLine":337,"endColumn":20},{"ruleId":"197","severity":1,"message":"226","line":346,"column":11,"nodeType":"199","messageId":"200","endLine":346,"endColumn":22},{"ruleId":"197","severity":1,"message":"274","line":412,"column":14,"nodeType":"199","messageId":"200","endLine":412,"endColumn":26},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'LifeministryContext' is defined but never used.","'DropdownMenuItemType' is defined but never used.","'IDropdownOption' is defined but never used.","'PivotLinkFormat' is defined but never used.","'PrimaryButton' is defined but never used.","'initialData' is assigned a value but never used.","no-native-reassign",["275"],"no-negated-in-lhs",["276"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["277"],["275"],["276"],"'setAnnouncedMessage' is assigned a value but never used.","'DefaultPalette' is defined but never used.","'IStackItemStyles' is defined but never used.","'IStackTokens' is defined but never used.","'Label' is defined but never used.","Assignments to the '_allItems' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","MemberExpression","'fetchData' is assigned a value but never used.","'closeModal' is assigned a value but never used.","'onClickTest' is assigned a value but never used.","'ContextualMenu' is defined but never used.","'isModalOpen' is assigned a value but never used.","'hideModal' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'currentDate'. Either include it or remove the dependency array.",["278"],["275"],["276"],"'AssignmentsSelected' is defined but never used.","'optSelected' is assigned a value but never used.","'ActionButton' is defined but never used.","'IStackStyles' is defined but never used.","'KTP_LAYER_ID' is defined but never used.","'Stack' is defined but never used.","'ClassificationType' is defined but never used.",["279"],"'CommandBarButton' is defined but never used.","'itemAlignmentsStackStyles' is assigned a value but never used.","'containerStackTokens' is assigned a value but never used.","'ScrollablePane' is defined but never used.","'TextField' is defined but never used.","'IAssignment' is defined but never used.","'scrollablePaneStyles' is assigned a value but never used.","'showMsg' is assigned a value but never used.","'hideMsg' is assigned a value but never used.","'showLoad' is assigned a value but never used.","'hideLoad' is assigned a value but never used.","'updateValues' is assigned a value but never used.","'value' is assigned a value but never used.",["275"],["276"],"'Announced' is defined but never used.","'SearchBox' is defined but never used.","'Text' is defined but never used.","'searchBoxStyles' is assigned a value but never used.","'addIcon' is assigned a value but never used.","'mailIcon' is assigned a value but never used.","'stackStyles' is assigned a value but never used.","'announcedMessage' is assigned a value but never used.","'modalData' is assigned a value but never used.","'db' is assigned a value but never used.","'_onChangeText' is assigned a value but never used.","'text' is assigned a value but never used.","'openModal' is assigned a value but never used.","'delIcon' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'db' and 'items'. Either include them or remove the dependency array.",["280"],"'setColumns' is assigned a value but never used.","'_copyAndSort' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"281","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [db, setStdData]",{"range":"288","text":"289"},"Update the dependencies array to be: [currentDate]",{"range":"290","text":"291"},{"range":"292","text":"289"},"Update the dependencies array to be: [db, items]",{"range":"293","text":"294"},[1073,1085],"[db, setStdData]",[2745,2747],"[currentDate]",[981,993],[4558,4560],"[db, items]"]
>>>>>>> main
