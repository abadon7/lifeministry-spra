[{"/root/projects/lifeministry-spra/src/index.tsx":"1","/root/projects/lifeministry-spra/src/reportWebVitals.ts":"2","/root/projects/lifeministry-spra/src/App.tsx":"3","/root/projects/lifeministry-spra/src/api/lifeministry.ts":"4","/root/projects/lifeministry-spra/src/pages/students.tsx":"5","/root/projects/lifeministry-spra/src/pages/generator.tsx":"6","/root/projects/lifeministry-spra/src/components/menu/navigation.tsx":"7","/root/projects/lifeministry-spra/src/components/students/studentsList.tsx":"8","/root/projects/lifeministry-spra/src/components/generator/generator.tsx":"9","/root/projects/lifeministry-spra/src/components/generator/datesGenerator.tsx":"10","/root/projects/lifeministry-spra/src/components/generator/assignment.tsx":"11","/root/projects/lifeministry-spra/src/components/generator/partnersLayout.tsx":"12","/root/projects/lifeministry-spra/src/components/generator/pubsModal.tsx":"13","/root/projects/lifeministry-spra/src/components/generator/simpleStdList.tsx":"14","/root/projects/lifeministry-spra/src/components/students/stdModal.tsx":"15","/root/projects/lifeministry-spra/src/components/generator/schedulesList.tsx":"16","/home/velez/Projects/lifeministry-spra/src/index.tsx":"17","/home/velez/Projects/lifeministry-spra/src/reportWebVitals.ts":"18","/home/velez/Projects/lifeministry-spra/src/App.tsx":"19","/home/velez/Projects/lifeministry-spra/src/api/lifeministry.ts":"20","/home/velez/Projects/lifeministry-spra/src/pages/students.tsx":"21","/home/velez/Projects/lifeministry-spra/src/pages/generator.tsx":"22","/home/velez/Projects/lifeministry-spra/src/components/menu/navigation.tsx":"23","/home/velez/Projects/lifeministry-spra/src/components/students/studentsList.tsx":"24","/home/velez/Projects/lifeministry-spra/src/components/generator/datesGenerator.tsx":"25","/home/velez/Projects/lifeministry-spra/src/components/generator/generator.tsx":"26","/home/velez/Projects/lifeministry-spra/src/components/generator/schedulesList.tsx":"27","/home/velez/Projects/lifeministry-spra/src/components/generator/assignment.tsx":"28","/home/velez/Projects/lifeministry-spra/src/components/students/stdModal.tsx":"29","/home/velez/Projects/lifeministry-spra/src/components/generator/partnersLayout.tsx":"30","/home/velez/Projects/lifeministry-spra/src/components/generator/pubsModal.tsx":"31","/home/velez/Projects/lifeministry-spra/src/components/generator/simpleStdList.tsx":"32"},{"size":584,"mtime":1638417775683,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1638417775683,"results":"35","hashOfConfig":"34"},{"size":4689,"mtime":1660788834816,"results":"36","hashOfConfig":"34"},{"size":3182,"mtime":1660796475216,"results":"37","hashOfConfig":"34"},{"size":1162,"mtime":1660347379274,"results":"38","hashOfConfig":"34"},{"size":13403,"mtime":1660791302146,"results":"39","hashOfConfig":"34"},{"size":1879,"mtime":1638500029331,"results":"40","hashOfConfig":"34"},{"size":14140,"mtime":1660348496874,"results":"41","hashOfConfig":"34"},{"size":3926,"mtime":1660347379274,"results":"42","hashOfConfig":"34"},{"size":3918,"mtime":1638500029321,"results":"43","hashOfConfig":"34"},{"size":12906,"mtime":1660347379274,"results":"44","hashOfConfig":"34"},{"size":5046,"mtime":1638417775673,"results":"45","hashOfConfig":"34"},{"size":6607,"mtime":1660347379274,"results":"46","hashOfConfig":"34"},{"size":19984,"mtime":1660347379274,"results":"47","hashOfConfig":"34"},{"size":6673,"mtime":1660347379274,"results":"48","hashOfConfig":"34"},{"size":20519,"mtime":1660347379274,"results":"49","hashOfConfig":"34"},{"size":584,"mtime":1667189205747,"results":"50","hashOfConfig":"51"},{"size":425,"mtime":1667189205747,"results":"52","hashOfConfig":"51"},{"size":4736,"mtime":1670518883687,"results":"53","hashOfConfig":"51"},{"size":3182,"mtime":1667189205747,"results":"54","hashOfConfig":"51"},{"size":1162,"mtime":1667189205747,"results":"55","hashOfConfig":"51"},{"size":13403,"mtime":1667189205747,"results":"56","hashOfConfig":"51"},{"size":1879,"mtime":1667189205747,"results":"57","hashOfConfig":"51"},{"size":14140,"mtime":1667189205747,"results":"58","hashOfConfig":"51"},{"size":3918,"mtime":1667189205747,"results":"59","hashOfConfig":"51"},{"size":3926,"mtime":1667189205747,"results":"60","hashOfConfig":"51"},{"size":20519,"mtime":1667189205747,"results":"61","hashOfConfig":"51"},{"size":12955,"mtime":1667538295625,"results":"62","hashOfConfig":"51"},{"size":6673,"mtime":1667189205747,"results":"63","hashOfConfig":"51"},{"size":5046,"mtime":1667189205747,"results":"64","hashOfConfig":"51"},{"size":6607,"mtime":1667189205747,"results":"65","hashOfConfig":"51"},{"size":19984,"mtime":1667189205747,"results":"66","hashOfConfig":"51"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"qbm7ef",{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"ollg4n",{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"111"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"111"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"111"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"111"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"111"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"111"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"111"},"/root/projects/lifeministry-spra/src/index.tsx",[],["142","143"],"/root/projects/lifeministry-spra/src/reportWebVitals.ts",[],"/root/projects/lifeministry-spra/src/App.tsx",[],"/root/projects/lifeministry-spra/src/api/lifeministry.ts",[],"/root/projects/lifeministry-spra/src/pages/students.tsx",["144"],"import { useContext, useEffect, useState } from \"react\";\nimport { LifeMinistryContext } from \"../App\";\nimport StudentsTable from \"../components/students/studentsList\";\nimport { IStudent } from \"../types/ministry.types\";\n\nfunction Students() {\n  const initialData: IStudent[] = [\n    {\n      id: 0,\n      name: \"Initial\",\n      gender: \"m\",\n      cel: 0,\n      active: false,\n      notes: \"\",\n      last: \"2020-11-01T00:00:00Z\",\n      lastpartner: 0,\n    },\n  ];\n  const [stdData, setStdData] = useState<IStudent[]>(initialData);\n  const db: any = useContext(LifeMinistryContext);\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    console.log(\n      db.getStudents().then((res: IStudent[]) => {\n        console.log(res);\n        setStdData(res);\n      })\n    );\n    /* const stdUrl = \"http://localhost:8000/students\";\n        console.log(stdUrl);\n        fetch(stdUrl)\n            .then((res) => res.json())\n            .then((repos) => {\n                console.log(repos)\n                setStdData(repos as IStudent[])\n            }); */\n  }, [setStdData]);\n\n  return <StudentsTable data={stdData} />;\n}\n\nexport default Students;\n","/root/projects/lifeministry-spra/src/pages/generator.tsx",["145"],"import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\n//import StepLabel from '@material-ui/core/StepLabel';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TimeOpts, WeeksList } from \"../types/ministry.types\";\n//import GeneratorDates from '../components/generator/dates';\n//import { IChoiceGroupOption } from '@fluentui/react';\nimport DatesGenerator from \"../components/generator/datesGenerator\";\nimport { /* Container */ Paper, StepButton } from \"@material-ui/core\";\nimport GeneratorAssigments from \"../components/generator/assignment\";\nimport GeneratorProgram from \"../components/generator/generator\";\nimport SchedulesList from \"../components/generator/schedulesList\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      //width: '100%',\n      display: \"flex\",\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      marginRight: theme.spacing(3),\n      marginLeft: theme.spacing(3),\n    },\n  })\n);\n\nexport const getWeeksFromMonth = (\n  year: number,\n  months: number[] | string[]\n): WeeksList[] => {\n  let weeks: WeeksList[] = [];\n  //for (const mnth in months) {\n  months.forEach((mnth: any) => {\n    console.log(\"MONTH \" + mnth);\n    const month = parseInt(mnth);\n    let fDay: Date = new Date(year, month, 1);\n    let lDay: Date = new Date(year, month + 1, 0);\n    if (fDay.getDay() !== 1) {\n      console.log(\"This is not a monday\");\n      const fDateDay = fDay.getDay();\n      if (fDateDay === 0) {\n        fDay = new Date(year, month, fDay.getDate() + 1);\n      }\n      if (fDateDay > 1) {\n        const diffDates = 8 - fDateDay;\n        fDay = new Date(year, month, fDay.getDate() + diffDates);\n      }\n    }\n\n    let nextMonth: number = month;\n    let sDay: Date = new Date(year, month, fDay.getDate() + 6);\n    //console.log(`Monday=${fDay} and Sunday =${sDay}`);\n    weeks.push({ start: fDay, end: sDay });\n    while (month === nextMonth && sDay.getDate() < lDay.getDate()) {\n      fDay = new Date(year, month, fDay.getDate() + 7);\n      sDay = new Date(year, month, fDay.getDate() + 6);\n      nextMonth = sDay.getMonth();\n      //console.log(`Monday=${fDay} and Sunday =${sDay}`);\n      weeks.push({ start: fDay, end: sDay });\n    }\n    //console.log(weeks);\n    //weeks.concat(newWeek);\n  });\n  console.log(weeks);\n  return weeks;\n};\n\nconst toDay: Date = new Date();\n\nfunction rangeMonths(start: number, end: number) {\n  return Array(end - start + 1)\n    .fill(0)\n    .map((_, idx) => start + idx);\n}\n\nconst monthsRange = rangeMonths(toDay.getMonth(), 11);\nconsole.log(monthsRange);\n\nconst weeksListArray: WeeksList[] = getWeeksFromMonth(\n  toDay.getFullYear(),\n  monthsRange\n);\n\nfunction getSteps() {\n  return [\n    \"Escoge las semanas\",\n    \"Organiza las asignaciones\",\n    \"Genera el programa\",\n  ];\n}\n\ntype assgOptions = {\n  [key: string]: any;\n};\n\nconst Generator = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const [selectedWeeks, setSelectedWeeks] = React.useState<string[]>([]);\n  const [timeOption, setTimeOption] = React.useState<TimeOpts>({\n    week: false,\n    month: true,\n  });\n  const [selectedMonths, setSelectedMonths] = React.useState<string[]>([]);\n  const [scheduleWeeks, setScheduleWeeks] = React.useState<WeeksList[]>([]);\n  const [selectedAssigments, setSelectedAssigments] =\n    React.useState<assgOptions>({});\n\n  const _onChangeOptions = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    const option = event.target.value;\n    console.log(option);\n    let newTimeoOpt = { ...timeOption };\n    Object.keys(newTimeoOpt).forEach((v) => (newTimeoOpt[v] = false));\n    setTimeOption({\n      ...newTimeoOpt,\n      [option as string]: true,\n    });\n    //updateValues2(\"gender\", option?.key)\n    let newSelectedWeeks: WeeksList[] = [];\n    if (option === \"month\") {\n      //setOptSelected(\"month\");\n      newSelectedWeeks = getWeeksFromMonth(2021, selectedMonths);\n      //setScheduleWeeks(newSelectedWeeks);\n    }\n    if (option === \"week\") {\n      //setOptSelected(\"week\");\n      newSelectedWeeks = weeksListArray\n        .filter((week, index) => {\n          // if (props.stdWeeks.includes(index.toString())) {\n          return selectedWeeks.includes(index.toString());\n          //}\n        })\n        .map((week) => week);\n      //setScheduleWeeks(newSelectedWeeks)\n    }\n\n    let newSelectedAssignments = {};\n    newSelectedWeeks.forEach((week: WeeksList) => {\n      console.log(\"Creating Assi\");\n      newSelectedAssignments = {\n        ...newSelectedAssignments,\n        [week.start.toLocaleDateString()]: {\n          assignmentsIds: [1, 2, 3, 4],\n          dates: week,\n          partners: [],\n        },\n      };\n    });\n\n    console.log(newSelectedAssignments);\n    setSelectedAssigments(newSelectedAssignments);\n    //props.assigmentsChange(newSelectedAssignments);\n  };\n\n  //const updateDatesSelected = () => {\n  //    let newSelectedWeeks: WeeksList[] = [];\n  //    if (timeOption.month) {\n  //        //setOptSelected(\"month\");\n  //        newSelectedWeeks = getWeeksFromMonth(2021, selectedMonths)\n  //        //setScheduleWeeks(newSelectedWeeks);\n  //    }\n  //    if (timeOption.week) {\n  //        //setOptSelected(\"week\");\n  //        newSelectedWeeks = weeksListArray.filter((week, index) => {\n  //            // if (props.stdWeeks.includes(index.toString())) {\n  //            return selectedWeeks.includes(index.toString())\n  //            //}\n  //        }).map(week => week)\n  //        //setScheduleWeeks(newSelectedWeeks)\n  //    }\n\n  //    let newSelectedAssignments = {};\n  //    newSelectedWeeks.forEach((week: WeeksList) => {\n  //        console.log(\"Creating Assi\")\n  //        //newSelectedAssignments = { ...newSelectedAssignments, [week.start.toLocaleDateString()]: { assignmentsIds: [1, 2, 3, 4], dates: [], partners: [] } }\n\n  //        newSelectedAssignments = { ...newSelectedAssignments, [week.start.toLocaleDateString()]: { assignmentsIds: [1, 2, 3, 4], dates: week, partners: [] } }\n  //    })\n\n  //    console.log(newSelectedAssignments);\n  //    //props.assigmentsChange(newSelectedAssignments);\n  //    setSelectedAssigments(newSelectedAssignments);\n  //    //return newSelectedAssignments\n  //    //let assgList: any[] = []\n\n  //}\n\n  const _onChangeWeeks = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const isChecked: boolean = event.target.checked;\n    console.log(`The option has been changed to ${isChecked}.`);\n    const newSelectedWeeks = isChecked\n      ? [...selectedWeeks, event.target.name]\n      : selectedWeeks.filter((item) => item !== event.target.name);\n    setSelectedWeeks(newSelectedWeeks);\n\n    let newScheduleWeeks: WeeksList[] = [];\n    newScheduleWeeks = weeksListArray\n      .filter((week, index) => {\n        // if (props.stdWeeks.includes(index.toString())) {\n        return newSelectedWeeks.includes(index.toString());\n        //}\n      })\n      .map((week) => week);\n\n    let newSelectedAssignments = { ...selectedAssigments };\n    if (isChecked) {\n      newSelectedAssignments = {\n        ...selectedAssigments,\n        [weeksListArray[\n          parseInt(event.target.name)\n        ].start.toLocaleDateString()]: {\n          assignmentsIds: [1, 2, 3, 4],\n          dates: weeksListArray[parseInt(event.target.name)],\n          partners: [],\n        },\n      };\n    } else {\n      delete newSelectedAssignments[\n        weeksListArray[parseInt(event.target.name)].start.toLocaleDateString()\n      ];\n    }\n    setScheduleWeeks(newScheduleWeeks);\n    setSelectedAssigments(newSelectedAssignments);\n  };\n\n  // function _onChangeWeeks2(ev?: React.FormEvent<HTMLElement>, isChecked?: boolean) {\n  //       console.log(`The option has been changed to ${isChecked}.`);\n  //       const event = ev?.target as HTMLButtonElement;\n  //       setSelectedWeeks(\n  //           isChecked ? [...selectedWeeks, event.name as string] : selectedWeeks.filter(item => item !== event.name),\n  //       );\n  //   }\n\n  const _onChangeMonths = (\n    ev?: React.FormEvent<HTMLElement>,\n    isChecked?: boolean\n  ) => {\n    console.log(`The option has been changed to ${isChecked}.`);\n    const event = ev?.target as HTMLButtonElement;\n    const newSelectedMonths = isChecked\n      ? [...selectedMonths, event.name as string]\n      : selectedMonths.filter((item) => item !== event.name);\n    setSelectedMonths(newSelectedMonths);\n\n    const newScheduleWeeks = [\n      ...getWeeksFromMonth(toDay.getFullYear(), [event.name]),\n    ];\n    let newSelectedAssignments = { ...selectedAssigments };\n\n    if (isChecked) {\n      newScheduleWeeks.forEach((week: WeeksList) => {\n        console.log(\"Creating Assi from month - Adding\");\n        newSelectedAssignments = {\n          ...newSelectedAssignments,\n          [week.start.toLocaleDateString()]: {\n            assignmentsIds: [1, 2, 3, 4],\n            dates: week,\n            partners: [],\n          },\n        };\n      });\n    } else {\n      newScheduleWeeks.forEach((week: WeeksList) => {\n        console.log(\"Creating Assi from month - Deleting\");\n        delete newSelectedAssignments[week.start.toLocaleDateString()];\n      });\n    }\n    //setScheduleWeeks([...scheduleWeeks, ...newScheduleWeeks])\n    setScheduleWeeks(newScheduleWeeks);\n    setSelectedAssigments(newSelectedAssignments);\n  };\n\n  const isStepCompleted = (step: number) => {\n    switch (step) {\n      case 0:\n        return selectedWeeks.length > 0 || selectedMonths.length > 0;\n      case 1:\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  function getStepContent(stepIndex: number) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <DatesGenerator\n            monthsChange={_onChangeMonths}\n            weeksChange={_onChangeWeeks}\n            timeChange={_onChangeOptions}\n            timeOpts={timeOption}\n            stdMonths={selectedMonths}\n            stdWeeks={selectedWeeks}\n            weeksListArray={weeksListArray}\n          />\n        );\n      case 1:\n        return (\n          <GeneratorAssigments\n            //timeOpts={timeOption}\n            stdMonths={selectedMonths}\n            //stdWeeks={selectedWeeks}\n            fullWeeksList={weeksListArray}\n            stdAssigments={selectedAssigments}\n            //stdAssigments={() => {updateDatesSelected()}}\n            assigmentsChange={setSelectedAssigments}\n            //scheduleWeeks={scheduleWeeks}\n          />\n        );\n      case 2:\n        return <GeneratorProgram stdAssigments={selectedAssigments} />;\n      default:\n        return \"Unknown stepIndex\";\n    }\n  }\n  const handleStep = (step: number) => () => {\n    if (step > 0) {\n      if (!isStepCompleted(step - 1)) {\n        alert(\"Por completar paso \" + step.toString());\n        return;\n      }\n    }\n    setActiveStep(step);\n  };\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const loadSavedSchedule = () => {\n    console.log(\"loading a Schedule\");\n  };\n\n  React.useEffect(() => {\n    //updateDatesSelected()\n  }, []);\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Paper className={classes.content}>\n          <Stepper activeStep={activeStep} alternativeLabel nonLinear>\n            {steps.map((label, index) => (\n              <Step key={label}>\n                {/* <StepLabel>{label}</StepLabel> */}\n                <StepButton\n                  onClick={handleStep(index)}\n                  completed={isStepCompleted(index)}\n                >\n                  {label}\n                </StepButton>\n              </Step>\n            ))}\n          </Stepper>\n          <div>\n            {activeStep === steps.length ? (\n              <div>\n                <Typography className={classes.instructions}>\n                  All steps completed\n                </Typography>\n                <Button onClick={handleReset}>Reset</Button>\n              </div>\n            ) : (\n              <div>\n                <Typography className={classes.instructions}>\n                  {getStepContent(activeStep)}\n                </Typography>\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.backButton}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                  >\n                    {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n        </Paper>\n        <Paper className={classes.content}>\n          <span>Programaciones</span>\n          <SchedulesList loadSchedule={loadSavedSchedule} />\n        </Paper>\n      </div>\n    </>\n  );\n};\nexport default Generator;\n","/root/projects/lifeministry-spra/src/components/menu/navigation.tsx",[],"/root/projects/lifeministry-spra/src/components/students/studentsList.tsx",[],"/root/projects/lifeministry-spra/src/components/generator/generator.tsx",["146","147","148","149","150","151","152","153","154"],"import {\n  ActionButton,\n  CommandBarButton,\n  DefaultPalette,\n  getTheme,\n  IIconProps,\n  IStackItemStyles,\n  IStackStyles,\n  IStackTokens,\n  KTP_LAYER_ID,\n  mergeStyleSets,\n  PrimaryButton,\n  Stack,\n} from \"@fluentui/react\";\nimport { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { ClassificationType } from \"typescript\";\nimport { LifeMinistryContext } from \"../../App\";\nimport { IDataBase, ISchedule } from \"../../types/ministry.types\";\nimport PartnersLayout from \"./partnersLayout\";\n\ninterface Props {\n  stdAssigments: any;\n}\n\ntype tpOptions = {\n  [key: string]: any;\n};\nconst theme = getTheme();\nconst classNames = mergeStyleSets({\n  pane: {\n    maxWidth: 500,\n    border: \"1px solid \" + theme.palette.neutralLight,\n    margin: \"10px auto\",\n    //padding: 10\n  },\n  stackAssName: {\n    width: 200,\n  },\n  saveBtn: {\n    height: 44,\n    float: \"right\",\n    marginLeft: -90,\n  },\n});\n\nconst addIcon: IIconProps = { iconName: \"Add\" };\n\nconst GeneratorProgram: React.FunctionComponent<Props> = (props: Props) => {\n  const db: IDataBase = React.useContext(LifeMinistryContext);\n  const [allCouples, setAllCouples] = React.useState<tpOptions>({});\n  const [rangeDate, setRangeDate] = React.useState<string>(\"\");\n\n  const getPartners = async (data: {}) => {\n    //db.getPartner(`partners?num=5&gender=m`).then((result: any) => { console.log(result) });\n    let allPartners: any[] = [];\n    let allFullPartners: tpOptions = {};\n    const startDate = new Date(Object.keys(data)[0])\n      .toLocaleString()\n      .split(\",\");\n    const endDate = new Date(Object.keys(data)[Object.keys(data).length - 1])\n      .toLocaleString()\n      .split(\",\");\n    setRangeDate(startDate[0] + \"-\" + endDate[0]);\n    for (const [key, value] of Object.entries(data)) {\n      const newVal = value as any;\n      console.log(`${key}: ${newVal.assignmentsIds}`);\n      const valArray: [] = newVal.assignmentsIds as [];\n      const date = new Date(key).toISOString();\n      const partner = valArray\n        .filter((asg) => asg !== 0)\n        .map(async (assig) => {\n          //for (const assig of valArray) {\n          console.log(assig);\n          if (assig !== 0) {\n            let gender = \"f\";\n            if (assig === 1 || assig === 2) {\n              gender = \"m\";\n            }\n            const partnerURL = `partners?num=${assig}&gender=${gender}&date=${date}`;\n            const partnerFound = db.getPartner(partnerURL);\n            return partnerFound;\n          }\n        });\n      console.log(partner);\n      const finalPartner = await Promise.all(partner);\n      allPartners.push(...finalPartner);\n    }\n    //allFullPartners\n    allPartners.forEach((partner) => {\n      console.log(partner);\n      if (allFullPartners[partner.date]) {\n        allFullPartners[partner.date].push(partner);\n      } else {\n        allFullPartners[partner.date] = [partner];\n      }\n    });\n    console.log(JSON.stringify(allFullPartners));\n    setAllCouples(allFullPartners);\n    //console.log(JSON.stringify(allPartners));\n  };\n\n  const saveShcedule = () => {\n    const week: ISchedule = {\n      id: 0,\n      data: JSON.stringify(allCouples),\n      range: rangeDate,\n    };\n\n    db.addSchedule(week);\n  };\n\n  //getPartners(props.stdAssigments);\n  return (\n    <>\n      <div>\n        <CommandBarButton\n          iconProps={addIcon}\n          text=\"Guardar\"\n          className={classNames.saveBtn}\n          onClick={saveShcedule}\n        />\n      </div>\n      {/* <PrimaryButton text=\"Generar\" allowDisabledFocus onClick={() => { getPartners(props.stdAssigments) }} />*/}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => {\n          getPartners(props.stdAssigments);\n        }}\n      >\n        Generar\n      </Button>\n      <div>\n        {/* {getPartnersLayout(allCouples)} */}\n        <PartnersLayout partners={allCouples} />\n      </div>\n    </>\n  );\n};\n\nexport default GeneratorProgram;\n","/root/projects/lifeministry-spra/src/components/generator/datesGenerator.tsx",["155"],"import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { TimeOpts, WeeksList } from '../../types/ministry.types';\nimport { Radio, RadioGroup } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            //display: 'flex',\n        },\n        formControl: {\n            margin: theme.spacing(1),\n        },\n    }),\n);\n\nconst toDay: Date = new Date();\nconst months: string[] = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n]\n\n\n\ninterface Props {\n    monthsChange: any;\n    weeksChange: any;\n    timeChange: any;\n    timeOpts: TimeOpts;\n    stdMonths: string[];\n    stdWeeks: string[];\n    weeksListArray: WeeksList[]\n}\n\nexport default function DatesGenerator(props: Props) {\n    const classes = useStyles();\n\n\n    //const weeksListArray: WeeksList[] = getWeeksFromMonth(2021, monthsRange);\n\n    React.useEffect(() => {\n\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Fechas</FormLabel>\n              <RadioGroup aria-label=\"gender\" name=\"gender1\" value={props.timeOpts.month ? \"month\" : \"week\"} onChange={props.timeChange}>\n                    <FormControlLabel value=\"week\" control={<Radio />} label=\"Semanas\" />\n                    <FormControlLabel value=\"month\" control={<Radio />} label=\"Meses\" />\n                </RadioGroup>\n            </FormControl>\n            <FormControl required component=\"fieldset\" className={classes.formControl}>\n                <FormLabel component=\"legend\">Semanas</FormLabel>\n                <FormGroup>\n                    {props.weeksListArray.map((week, index) => {\n                        return (\n                            <FormControlLabel\n                                control={<Checkbox disabled={!props.timeOpts.week} checked={props.stdWeeks.includes(index.toString())} onChange={props.weeksChange} name={index.toString()} />}\n                                label={week.start.toDateString() + \" al \" + week.end.toDateString()}\n                            />\n                        );\n                    })}\n                </FormGroup>\n            </FormControl>\n            <FormControl required component=\"fieldset\" className={classes.formControl}>\n                <FormLabel component=\"legend\">Meses</FormLabel>\n                <FormGroup>\n                    {months.map((month, index) => {\n                        if (index >= toDay.getMonth()) {\n                            return (\n                                <FormControlLabel\n                                    control={<Checkbox disabled={!props.timeOpts.month} checked={props.stdMonths.includes(index.toString())} onChange={props.monthsChange} name={index.toString()} key={index} />}\n                                    label={month}\n                                />\n                            );\n                        } else {\n                            return (\n                                <FormControlLabel\n                                    control={<Checkbox disabled checked={props.stdMonths.includes(index.toString())} onChange={props.monthsChange} name={index.toString()} key={index} />}\n                                    label={month}\n                                />\n                            );\n                        }\n                    })}\n                </FormGroup>\n            </FormControl>\n        </div>\n    );\n}\n","/root/projects/lifeministry-spra/src/components/generator/assignment.tsx",["156","157","158","159"],"import React, { useEffect, useState } from \"react\";\n//import { LifeministryContext } from '../App';\n//import { IAssignment, WeeksList } from '../types/ministry.types';\nimport {\n  /*  DropdownMenuItemType, */ IDropdownOption,\n} from \"office-ui-fabric-react/lib/Dropdown\";\nimport {\n  /* Checkbox, ChoiceGroup, */ Dropdown,\n  getTheme,\n  IDropdownStyles,\n  /* FontWeights, getTheme, */ /* IChoiceGroupOption, */ /* IStackTokens, */ Label /* , mergeStyleSets */ /* , Stack */,\n  mergeStyleSets,\n} from \"@fluentui/react\";\nimport { IAssignment, WeeksList } from \"../../types/ministry.types\";\n//import { getWeeksFromMonth } from '../../pages/generator';\nimport { LifeMinistryContext } from \"../../App\";\nimport {\n  createStyles,\n  FormControl,\n  Grid,\n  InputLabel,\n  makeStyles,\n  Select,\n  Theme,\n} from \"@material-ui/core\";\n\nconst theme = getTheme();\nconst classNames = mergeStyleSets({\n  wrapper: {\n    //height: '40vh',\n    position: \"relative\",\n    maxHeight: \"inherit\",\n    //width: '45vh',\n  },\n  pane: {\n    maxWidth: 250,\n    border: \"1px solid \" + theme.palette.neutralLight,\n    margin: \"10px auto\",\n    padding: 10,\n  },\n  sticky: {\n    //color: theme.palette.neutralDark,\n    padding: \"5px 20px 5px 10px\",\n    fontSize: \"13px\",\n    //borderTop: '1px solid ' + theme.palette.black,\n    //borderBottom: '1px solid ' + theme.palette.black,\n  },\n  textContent: {\n    padding: \"15px 10px\",\n  },\n  checkbox: {\n    padding: \"5px\",\n  },\n  /* flexDiv: [\n        //theme.fonts.xLargePlus,\n        {\n            flex: '1 1 auto',\n            borderTop: '1px solid rgb(149 149 149)',\n            //color: theme.palette.neutralPrimary,\n            display: 'flex',\n            alignItems: 'center',\n            fontWeight: FontWeights.semibold,\n            width: \"100%\"\n            //padding: '12px 12px 14px 24px',\n        },\n    ], */\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n\n/* const sectionStackTokens: IStackTokens = { childrenGap: 30 };\n\nconst toDay: Date = new Date();\nconst months: string[] = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n] */\nconst dropdownStyles: Partial<IDropdownStyles> = {\n  dropdown: { width: 200, margin: \"0 auto\" },\n};\n\ntype tpOptions = {\n  [key: string]: string | number | any;\n};\n\ninterface TimeOpts extends tpOptions {\n  week: boolean;\n  month: boolean;\n}\n\n/* interface AssignmentsSelected extends tpOptions {\n    week: boolean;\n} */\n\ninterface Props {\n  //monthsChange: any;\n  //weeksChange: any;\n  //timeChange: any;\n  //timeOpts: TimeOpts;\n  stdMonths: string[];\n  //stdWeeks: string[];\n  fullWeeksList: WeeksList[];\n  stdAssigments: any;\n  assigmentsChange: any;\n  //scheduleWeeks: WeeksList[]\n}\n\n//function GeneratorDates() {\nconst GeneratorAssigments: React.FunctionComponent<Props> = (props: Props) => {\n  //const initialData: IAssignment[] = [{ \"id\": 0, \"name\": \"Initial\", \"type\": \"school\", \"participants\": 0 }];\n  //const [optSelected, setOptSelected] = useState<string>(\"\");\n  //const [weeksSelected, setWeeksSelected] = useState<WeeksList[]>([]);\n  const [assgList, setAssgList] = useState<IDropdownOption[]>([\n    { key: \"lectura\", text: \"Lectura\" },\n  ]);\n  const db: any = React.useContext(LifeMinistryContext);\n  const [stedAssignments, setstedAssignments] = React.useState({});\n  const classes = useStyles();\n\n  //const onChangeAssigment = (\n  //  event: React.FormEvent<HTMLDivElement>,\n  //  option?: IDropdownOption\n  //): void => {\n  //  if (option) {\n  //    console.log(option);\n  //    const ev: HTMLButtonElement = event.target as HTMLButtonElement;\n  //    const keySplit: string[] = ev.id.split(\":\");\n  //    let newstedAssignments: tpOptions = { ...props.stdAssigments };\n  //    newstedAssignments[keySplit[0] as string].assignmentsIds[keySplit[1]] =\n  //      option.key;\n  //    setstedAssignments(newstedAssignments);\n  //    props.assigmentsChange(newstedAssignments);\n\n  //    /* setSelectedKeys(\n  //            item.selected ? [...selectedKeys, item.key as string] : selectedKeys.filter(key => key !== item.key),\n  //          ); */\n  //  }\n  //};\n\n  const optionSelected = (selector: string) => {\n    console.log(\"Checking \" + selector);\n    const keySplit: string[] = selector.split(\":\");\n    let newstedAssignments: tpOptions = { ...props.stdAssigments };\n    console.log(newstedAssignments);\n    console.log(\n      newstedAssignments[keySplit[0] as string].assignmentsIds[keySplit[1]]\n    );\n    return newstedAssignments[keySplit[0] as string].assignmentsIds[\n      keySplit[1]\n    ];\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    const elName = event.target.name || \":\";\n    const elValue = event.target.value;\n    const keySplit: string[] = elName.split(\":\");\n    let newstedAssignments: tpOptions = { ...props.stdAssigments };\n    newstedAssignments[keySplit[0] as string].assignmentsIds[keySplit[1]] =\n      parseInt(elValue as string);\n    setstedAssignments(newstedAssignments);\n    props.assigmentsChange(newstedAssignments);\n\n    console.log(elName);\n    console.log(elValue);\n  };\n\n  interface SelectorProps {\n    label: string;\n    id: string;\n    options: any[];\n    disabled: boolean | undefined;\n    onChange?: (\n      event: React.ChangeEvent<{ name?: string; value: unknown }>\n    ) => void;\n  }\n\n  const AssignmentSelector = (props: SelectorProps) => {\n    return (\n      <FormControl className={classes.formControl} disabled={props.disabled}>\n        <InputLabel htmlFor=\"assignment-native-simple\">\n          {props.label}\n        </InputLabel>\n        <Select\n          native\n          defaultValue={optionSelected(props.id)}\n          onChange={props.onChange}\n          label={props.label}\n          inputProps={{\n            name: props.id,\n            id: props.id,\n          }}\n        >\n          {props.options.map((option) => {\n            console.log(option);\n            return <option value={option.key}>{option.text}</option>;\n          })}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  useEffect(() => {\n    console.log(\"Gen Dates\");\n    // Update the document title using the browser API\n    /* let newSelectedWeeks: WeeksList[] = [];\n        if (props.timeOpts.month) {\n            setOptSelected(\"month\");\n            newSelectedWeeks = getWeeksFromMonth(2021, props.stdMonths)\n            setWeeksSelected(newSelectedWeeks);\n        }\n        if (props.timeOpts.week) {\n            setOptSelected(\"week\");\n            newSelectedWeeks = props.fullWeeksList.filter((week, index) => {\n                // if (props.stdWeeks.includes(index.toString())) {\n                return props.stdWeeks.includes(index.toString())\n                //}\n            }).map(week => week)\n            setWeeksSelected(newSelectedWeeks)\n        }\n\n        if (Object.keys(props.stdAssigments).length === 0) {\n            let newSelectedAssignments = {};\n            newSelectedWeeks.forEach((week: WeeksList) => {\n                console.log(\"Creating Assi\")\n                newSelectedAssignments = { ...newSelectedAssignments, [week.start.toLocaleDateString()]: { assignmentsIds: [1, 2, 3, 4], dates: [], partners: [] } }\n            })\n            console.log(newSelectedAssignments);\n            //props.assigmentsChange(newSelectedAssignments);\n            setstedAssignments(newSelectedAssignments);\n            //let assgList: any[] = []\n        } else {\n            setstedAssignments(props.stdAssigments);\n        } */\n\n    db.getAssignments().then((res: IAssignment[]) => {\n      console.log(res);\n      res.push({\n        id: 0,\n        name: \"Video/Ninguna\",\n        participants: 0,\n        type: \"School\",\n      });\n      setAssgList(\n        res.map((assg) => {\n          //console.log(assg)\n          return { key: assg.id, text: assg.name };\n        })\n      );\n    });\n    //setAssgList(newassgList);\n    //console.log(assgList);\n  }, [props.fullWeeksList, db, setAssgList]);\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        {/* <div>{optSelected}</div> */}\n        {/* {props.scheduleWeeks.map(week => { */}\n        {Object.keys(props.stdAssigments).map((key) => {\n          return (\n            <Grid item xs>\n              <div className={classNames.pane}>\n                <Label\n                  key={props.stdAssigments[\n                    key\n                  ].dates.start.toLocaleDateString()}\n                >{`Semana del ${props.stdAssigments[\n                  key\n                ].dates.start.toLocaleDateString()} al ${props.stdAssigments[\n                  key\n                ].dates.end.toLocaleDateString()}`}</Label>\n                <AssignmentSelector\n                  label=\"Asignación 1\"\n                  id={`${props.stdAssigments[\n                    key\n                  ].dates.start.toLocaleDateString()}:0`}\n                  options={assgList}\n                  disabled={true}\n                />\n                <AssignmentSelector\n                  label=\"Asignación 2\"\n                  id={`${props.stdAssigments[\n                    key\n                  ].dates.start.toLocaleDateString()}:1`}\n                  options={assgList}\n                  disabled={false}\n                  onChange={handleChange}\n                />\n                <AssignmentSelector\n                  label=\"Asignación 3\"\n                  id={`${props.stdAssigments[\n                    key\n                  ].dates.start.toLocaleDateString()}:2`}\n                  options={assgList}\n                  disabled={false}\n                  onChange={handleChange}\n                />\n                <AssignmentSelector\n                  label=\"Asignación 4\"\n                  id={`${props.stdAssigments[\n                    key\n                  ].dates.start.toLocaleDateString()}:3`}\n                  options={assgList}\n                  disabled={false}\n                  onChange={handleChange}\n                />\n\n                {\n                  //                               <Dropdown\n                  //                                   key={`${props.stdAssigments[key].dates.start.toLocaleDateString()}:1`}\n                  //                                   label=\"Asignación # 2\"\n                  //                                   defaultSelectedKey={optionSelected(`${props.stdAssigments[key].dates.start.toLocaleDateString()}:1`)}\n                  //                                   options={assgList}\n                  //                                   disabled={false}\n                  //                                   styles={dropdownStyles}\n                  //                                   id={`${props.stdAssigments[key].dates.start.toLocaleDateString()}:1`}\n                  //                                   onChange={onChangeAssigment}\n                  //                               />\n                  //                               <Dropdown\n                  //                                   key={`${props.stdAssigments[key].dates.start.toLocaleDateString()}:2`}\n                  //                                   label=\"Asignación # 3\"\n                  //                                   defaultSelectedKey={3}\n                  //                                   options={assgList}\n                  //                                   disabled={false}\n                  //                                   styles={dropdownStyles}\n                  //                                   id={`${props.stdAssigments[key].dates.start.toLocaleDateString()}:2`}\n                  //                                   onChange={onChangeAssigment}\n                  //                               />\n                  //                               <Dropdown\n                  //                                   key={`${props.stdAssigments[key].dates.start.toLocaleDateString()}:3`}\n                  //                                   label=\"Asignación # 4\"\n                  //                                   defaultSelectedKey={4}\n                  //                                   options={assgList}\n                  //                                   disabled={false}\n                  //                                   styles={dropdownStyles}\n                  //                                   id={`${props.stdAssigments[key].dates.start.toLocaleDateString()}:3`}\n                  //                                   onChange={onChangeAssigment}\n                  //                               />\n                  //\n                }\n              </div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n};\n\nexport default GeneratorAssigments;\n","/root/projects/lifeministry-spra/src/components/generator/partnersLayout.tsx",["160","161","162","163","164"],"import { ActionButton, CommandBarButton, DefaultPalette, getTheme, IIconProps, IStackItemStyles, IStackStyles, IStackTokens, KTP_LAYER_ID, mergeStyleSets, PrimaryButton, Stack } from \"@fluentui/react\";\nimport React, { useEffect } from \"react\";\nimport { useBoolean } from '@uifabric/react-hooks';\nimport { PubsModal } from \"./pubsModal\";\nimport { IStudent } from \"../../types/ministry.types\";\n\ninterface Props {\n    partners: any;\n}\n\nconst stackStyles: IStackStyles = {\n    root: {\n        //background: DefaultPalette.themeTertiary,\n        textAlign: \"left\"\n    },\n};\nconst stackItemStyles: IStackItemStyles = {\n    root: {\n        //background: DefaultPalette.themePrimary,\n        //color: DefaultPalette.white,\n        padding: 5,\n    },\n};\nconst itemAlignmentsStackStyles: IStackStyles = {\n    root: {\n        background: DefaultPalette.themeTertiary,\n        height: 100,\n    },\n};\nconst stackTokens: IStackTokens = {\n    childrenGap: 5,\n    padding: 10,\n};\n\nconst containerStackTokens: IStackTokens = { childrenGap: 5 };\n\ntype tpOptions = {\n    [key: string]: any\n}\nconst theme = getTheme();\nconst classNames = mergeStyleSets({\n    pane: {\n        maxWidth: 500,\n        border: '1px solid ' + theme.palette.neutralLight,\n        margin: \"10px auto\",\n        //padding: 10\n    },\n    stackAssName: {\n        width: 200\n    }\n})\n\nconst addFriendIcon: IIconProps = { iconName: 'EditContact' };\n\nconst PartnersLayout: React.FunctionComponent<Props> = (props: Props) => {\n    const [allPartners, setAllPartners] = React.useState<tpOptions>(props.partners);\n    const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\n    const [modalData, setModalData] = React.useState<{ gender: string, addr: string }>({ gender: \"m\", addr: \"\" })\n\n    const changeStd = (index: string, gender: string) => {\n        console.log(\"Changing participants\");\n        console.log(`index:${index} - gender:${gender}`)\n        setModalData({ gender: gender, addr: index });\n        showModal()\n    }\n\n    const selectParticipant = (participant: IStudent, index: string) => {\n        console.log(`new std ${participant} in index ${index}`)\n        const splitIndex = index.split('/')\n        let newStdData = { ...allPartners }\n        console.log(splitIndex[1])\n        console.log(newStdData[splitIndex[0]])\n        newStdData[splitIndex[0]][splitIndex[1]][splitIndex[2]] = participant;\n        hideModal()\n        //setAllPartners(newStdData);\n    }\n\n    const getPartnersLayout = (data: tpOptions) => {\n        let layout: any[] = [];\n        const StartDate = new Date(Object.keys(data)[0]).toDateString()\n        const EndDate = new Date(Object.keys(data)[Object.keys(data).length - 1]).toDateString()\n        layout.push(<><p><strong>{`Pograma del ${StartDate} al ${EndDate}`}</strong></p></>)\n        Object.entries(data).forEach((key) => {\n            //<strong>{key[0]}</strong>\n            const day: string = new Date(key[0]).toDateString()\n            layout.push(<strong>{day}</strong>)\n            key[1].forEach((couple: any, index: string) => {\n                console.log(couple);\n                layout.push(<div className={classNames.pane}>\n                    <Stack horizontal styles={stackStyles} tokens={stackTokens}>\n                        <Stack.Item grow={0} styles={stackItemStyles} className={classNames.stackAssName}>\n                            <span>{couple.assigmenttype.name}</span>\n                        </Stack.Item>\n                        <Stack.Item grow={2} styles={stackItemStyles}>\n                            {/* <ul>\n                                <li>\n                                    <ActionButton iconProps={addFriendIcon} allowDisabledFocus>\n                                        {couple.incharge.name}\n                                    </ActionButton></li>\n                                <li><span>{couple.helper.name}</span></li>\n                            </ul> */}\n                            Publicador:\n                            <ActionButton iconProps={addFriendIcon} allowDisabledFocus onClick={() => { changeStd(key[0] + \"/\" + index + \"/incharge\", couple.incharge.gender) }}>\n                                {couple.incharge.name}\n                            </ActionButton><br />\n                            Ayudante:\n                            <ActionButton iconProps={addFriendIcon} allowDisabledFocus onClick={() => { changeStd(key[0] + \"/\" + index + \"/helper\", couple.helper.gender) }}>\n                                {couple.helper.name}\n                            </ActionButton>\n                        </Stack.Item>\n                    </Stack>\n                </div>\n                )\n            })\n        })\n        return layout\n    }\n\n    useEffect(() => {\n        setAllPartners(props.partners);\n    }, [props])\n\n    return (\n        <>\n            <PubsModal editStd={selectParticipant} isOpen={isModalOpen} onClose={hideModal} options={modalData} />\n            {getPartnersLayout(allPartners)}\n        </>\n    )\n}\n\nexport default PartnersLayout;","/root/projects/lifeministry-spra/src/components/generator/pubsModal.tsx",["165","166","167","168","169","170","171","172","173","174"],"import * as React from 'react';\nimport { useId, useBoolean } from '@uifabric/react-hooks';\nimport {\n    getTheme,\n    mergeStyleSets,\n    FontWeights,\n    //ContextualMenu,\n    //Toggle,\n    DefaultButton,\n    Modal,\n    //IDragOptions,\n    IconButton,\n    IIconProps,\n} from 'office-ui-fabric-react';\nimport { /* ChoiceGroup, */ /* IChoiceGroupOption, */ IScrollablePaneStyles, IStackStyles, /* Label, MaskedTextField, */ MessageBar, MessageBarType, PrimaryButton, ScrollablePane, Spinner, Stack, TextField/* , Toggle  */ } from '@fluentui/react';\n//import { StudentsCalendar } from '../calendar/calendar';\nimport { useEffect, useState } from 'react';\nimport { IAssignment, IStudent } from '../../types/ministry.types';\nimport { LifeMinistryContext } from '../../App';\nimport SimpleStudentsTable from './simpleStdList';\n\n\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\n\ninterface Props {\n    editStd: any;\n    isOpen?: boolean;\n    onClose: any;\n    options: { gender: string, addr: string }\n}\n\nconst SuccessMsg = () => (\n    <MessageBar\n        messageBarType={MessageBarType.success}\n        isMultiline={false}\n    >\n        La información se ha guadado correctamente\n    </MessageBar>\n);\n\nconst theme = getTheme();\nconst contentStyles = mergeStyleSets({\n    container: {\n        display: 'flex',\n        flexFlow: 'column nowrap',\n        alignItems: 'stretch',\n        height: 500\n\n    },\n    header: [\n        {\n            flex: '1 1 auto',\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\n            color: theme.palette.neutralPrimary,\n            display: 'flex',\n            alignItems: 'center',\n            fontWeight: FontWeights.semibold,\n            padding: '12px 12px 14px 24px',\n        },\n    ],\n    body: {\n        flex: '4 4 auto',\n        padding: '0 24px 24px 24px',\n        //overflowY: 'hidden',\n        selectors: {\n            p: { margin: '14px 0' },\n            'p:first-child': { marginTop: 0 },\n            'p:last-child': { marginBottom: 0 },\n        },\n        overflow: 'auto',\n        height: 350,\n        width: 600\n\n    },\n    footer: [\n        {\n            flex: '1 1 auto',\n            borderTop: '1px solid rgb(149 149 149)',\n            color: theme.palette.neutralPrimary,\n            display: 'flex',\n            alignItems: 'center',\n            fontWeight: FontWeights.semibold,\n            padding: '12px 12px 14px 24px',\n        },\n    ],\n    wrapper: {\n        height: '80vh',\n        position: 'relative',\n        maxHeight: 'inherit',\n    },\n    pane: {\n        maxWidth: 500,\n        border: '1px solid ' + theme.palette.neutralLight,\n    },\n    textContent: {\n        padding: '15px 10px',\n    },\n});\nconst scrollablePaneStyles: Partial<IScrollablePaneStyles> = { root: contentStyles.pane };\nconst iconButtonStyles = {\n    root: {\n        color: theme.palette.neutralPrimary,\n        marginLeft: 'auto',\n        marginTop: '4px',\n        marginRight: '2px',\n    },\n    rootHovered: {\n        color: theme.palette.neutralDark,\n    },\n};\n\nconst footerStackStyles: Partial<IStackStyles> = { root: { width: \"100%\" } };\n\nexport const PubsModal: React.FunctionComponent<Props> = (props: Props) => {\n    //const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\n    //const [currentDate, setCurrentDate] = React.useState<Date>()\n    const [isMsgShow, { setTrue: showMsg, setFalse: hideMsg }] = useBoolean(false);\n    const [isLoadShow, { setTrue: showLoad, setFalse: hideLoad }] = useBoolean(false);\n    const [stdData, setStdData] = useState<IStudent[]>([])\n    const [participant, setParticipant] = useState<IStudent | undefined>()\n    const db: any = React.useContext(LifeMinistryContext)\n\n    const updateValues = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n        const ele = e.target as HTMLInputElement;\n        console.log(ele.id);\n        let value: string | number = ele.value;\n        const keyName = ele.id;\n        if (keyName === \"participants\") {\n            value = parseInt(value);\n        }\n        /*  setStdData([{\n             ...stdData[0],\n             [keyName]: value\n         }]) */\n    }\n\n    const titleId = useId('title');\n\n    const sendStdData = (): void => {\n        //showLoad();\n        console.log(participant);\n        props.editStd(participant, props.options.addr);\n        //updateValues2(\"last\", currentDate?.toISOString())\n        /* const result = props.addStd(stdData);\n        if (result) {\n            hideLoad();\n            showMsg();\n            setTimeout(function () { hideMsg(); }, 3000);\n        } */\n    }\n\n    useEffect(() => {\n        console.log(props.options)\n        console.log(db.getStudents(props.options.gender, \"active\").then((res: IStudent[]) => {\n            console.log(res);\n            setStdData(res)\n        }));\n    }, [db, props.options])\n\n    return (\n        <div>\n            <Modal\n                titleAriaId={titleId}\n                isOpen={props.isOpen}\n                onDismiss={props.onClose}\n                isBlocking={false}\n                containerClassName={contentStyles.container}\n                dragOptions={undefined}\n                allowTouchBodyScroll={true}\n            >\n                <div className={contentStyles.header}>\n                    <span id={titleId}>Lista de publicadores</span>\n                    <IconButton\n                        styles={iconButtonStyles}\n                        iconProps={cancelIcon}\n                        ariaLabel=\"Close popup modal\"\n                        onClick={props.onClose}\n                    />\n                </div>\n                <div className={contentStyles.body}>\n                    {/* <ScrollablePane\n\n                    >\n                        \n                    </ScrollablePane> */}\n                    <SimpleStudentsTable data={stdData} cllBack={setParticipant} />\n\n                </div>\n                <div>\n                    {isLoadShow &&\n                        <Spinner label=\"Guardando...\" ariaLive=\"assertive\" labelPosition=\"right\" />\n                    }\n                    {isMsgShow &&\n                        <SuccessMsg />\n                    }\n                </div>\n                <div className={contentStyles.footer}>\n                    <Stack horizontal horizontalAlign=\"end\" styles={footerStackStyles}>\n                        <DefaultButton text=\"Cancelar\" onClick={props.onClose} />\n                        <PrimaryButton text=\"Aceptar\" onClick={() => { sendStdData() }} />\n                    </Stack>\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\n\n","/root/projects/lifeministry-spra/src/components/generator/simpleStdList.tsx",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"import * as React from 'react';\n//import { TextField } from 'office-ui-fabric-react/lib/TextField';\n//import { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { Announced } from 'office-ui-fabric-react/lib/Announced';\nimport {\n    DetailsList,\n    DetailsListLayoutMode,\n    Selection,\n    SelectionMode,\n    IColumn,\n    CheckboxVisibility,\n} from 'office-ui-fabric-react/lib/DetailsList';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\nimport { useBoolean } from '@uifabric/react-hooks';\nimport { CommandBarButton, /* DefaultButton, */ DefaultPalette, FontWeights, IIconProps, ISearchBoxStyles, IStackItemStyles, IStackStyles, IStackTokens, Label, SearchBox, Stack, Text } from '@fluentui/react';\nimport { IStudent } from '../../types/ministry.types';\nimport { LifeMinistryContext } from '../../App';\n\nconst classNames = mergeStyleSets({\n    fileIconHeaderIcon: {\n        padding: 0,\n        fontSize: '16px',\n    },\n    fileIconCell: {\n        textAlign: 'center',\n        selectors: {\n            '&:before': {\n                content: '.',\n                display: 'inline-block',\n                verticalAlign: 'middle',\n                height: '100%',\n                width: '0px',\n                visibility: 'hidden',\n            },\n        },\n    },\n    fileIconImg: {\n        verticalAlign: 'middle',\n        maxHeight: '16px',\n        maxWidth: '16px',\n    },\n    controlWrapper: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    exampleToggle: {\n        display: 'inline-block',\n        marginBottom: '10px',\n        marginRight: '30px',\n    },\n    selectionDetails: {\n        marginBottom: '20px',\n    },\n    flexDiv: [\n        //theme.fonts.xLargePlus,\n        {\n            flex: '1 1 auto',\n            borderTop: '1px solid rgb(149 149 149)',\n            //color: theme.palette.neutralPrimary,\n            display: 'flex',\n            alignItems: 'center',\n            fontWeight: FontWeights.semibold,\n            width: \"100%\"\n            //padding: '12px 12px 14px 24px',\n        },\n    ],\n});\n\nexport interface IDetailsListDocumentsExampleState {\n    columns: IColumn[];\n    items: IStudent[];\n    selectionDetails: string;\n    isModalSelection: boolean;\n    isCompactMode: boolean;\n    announcedMessage?: string;\n}\n\nexport interface IDocument {\n    key: string;\n    name: string;\n    value: string;\n    iconName: string;\n    fileType: string;\n    modifiedBy: string;\n    dateModified: string;\n    dateModifiedValue: number;\n    fileSize: string;\n    fileSizeRaw: number;\n}\n\ninterface Props {\n    data: IStudent[];\n    cllBack: any\n}\n\nconst initialData: IStudent[] = [{\n    \"id\": 0,\n    \"name\": \"\",\n    \"gender\": \"f\",\n    \"cel\": 0,\n    \"active\": true,\n    \"notes\": \"\",\n    \"last\": new Date(\"01/01/21\").toISOString(),\n    \"lastpartner\": 0\n}]\n\nconst searchBoxStyles: Partial<ISearchBoxStyles> = { root: { width: 200, height: 44 } };\n\nconst addIcon: IIconProps = { iconName: 'Add' };\nconst mailIcon: IIconProps = { iconName: 'Mail' };\nconst stackStyles: Partial<IStackStyles> = { root: { width: \"100%\", height: 44 } };\n\nconst fabricStyle: IStackStyles = {\n    root: {\n        width: \"100%\",\n    },\n};\n\nconst SimpleStudentsTable = (props: Props) => {\n    //export class StudentsTable extends React.Component<{}, IDetailsListDocumentsExampleState> {\n    let _selection: Selection;\n    //let _selection2: Selection;\n    //let _allItems: IStudent[];\n    //_allItems = props.data;\n    //console.log(_allItems[0]);\n    const isModalSelection = true;\n    const isCompactMode = false;\n\n    const [items, setItems] = React.useState<IStudent[]>([]);\n    const [announcedMessage, setAnnouncedMessage] = React.useState();\n    const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\n    const [modalData, setModalData] = React.useState({ mode: \"new\", data: initialData })\n    const db: any = React.useContext(LifeMinistryContext)\n\n    React.useEffect(() => {\n        console.log(\"component updated\");\n        setItems(props.data);\n        //_allItems = props.data;\n        //console.log(_allItems[0]);\n    }, [props, isModalOpen]);\n\n    const _onColumnClick2 = (): void => {\n        console.log(\"Call from 2 function\");\n        console.log(items[0]);\n        console.log(props.data[0])\n    }\n\n    const _onColumnClick = (ev: React.MouseEvent<HTMLElement>, column: IColumn): void => {\n        //const { columns, items } = state;\n        //_onColumnClick2();\n        console.log(items[0]);\n        const newColumns: IColumn[] = tableColumns.slice();\n        const currColumn: IColumn = newColumns.filter(currCol => column.key === currCol.key)[0];\n        newColumns.forEach((newCol: IColumn) => {\n            if (newCol === currColumn) {\n                currColumn.isSortedDescending = !currColumn.isSortedDescending;\n                currColumn.isSorted = true;\n                //setAnnouncedMessage(`${currColumn.name} is sorted ${currColumn.isSortedDescending ? 'descending' : 'ascending'}`)\n            } else {\n                newCol.isSorted = false;\n                newCol.isSortedDescending = true;\n            }\n        });\n        console.log(props.data[0])\n        const newItems = _copyAndSort(props.data, currColumn.fieldName!, currColumn.isSortedDescending);\n        setColumns(newColumns);\n        setItems(newItems);\n    };\n\n    _selection = new Selection({\n        onSelectionChanged: () => {\n            console.log(items[0]);\n            console.log(\"Row selected\");\n            //setSelectionDetails(_getSelectionDetails());\n            const crrStudentData: string | IStudent[] = _getSelectionDetails();\n            console.log(crrStudentData[0])\n            props.cllBack(crrStudentData[0])\n           /*  setModalData({\n                mode: \"edit\",\n                data: crrStudentData as IStudent[]\n            })\n            showModal() */;\n        },\n    });\n\n    const _getSelectionDetails = (): string | IStudent[] => {\n        const selectionCount = _selection.getSelectedCount();\n\n        switch (selectionCount) {\n            case 0:\n                return initialData;\n            case 1:\n                //return '1 item selected: ' + (_selection.getSelection()[0] as IStudent).name;\n                return _selection.getSelection() as IStudent[];\n            default:\n                return `${selectionCount} items selected`;\n        }\n    }\n\n    const columns: IColumn[] = [\n        {\n            key: 'column1',\n            name: 'Icon',\n            className: classNames.fileIconCell,\n            iconClassName: classNames.fileIconHeaderIcon,\n            ariaLabel: 'Column operations for File type, Press to sort on File type',\n            iconName: 'Page',\n            isIconOnly: true,\n            fieldName: 'name',\n            minWidth: 16,\n            maxWidth: 16,\n            onColumnClick: _onColumnClick,\n            /* onRender: (item: IStudent) => {\n                return <img src={item.iconName} className={classNames.fileIconImg} alt={item.fileType + ' file icon'} />;\n            }, */\n        },\n        {\n            key: 'column2',\n            name: 'Nombre',\n            fieldName: 'name',\n            minWidth: 100,\n            maxWidth: 150,\n            isRowHeader: true,\n            isResizable: true,\n            isSorted: true,\n            isSortedDescending: false,\n            sortAscendingAriaLabel: 'Sorted A to Z',\n            sortDescendingAriaLabel: 'Sorted Z to A',\n            onColumnClick: _onColumnClick,\n            data: 'string',\n            isPadded: true,\n        },\n\n        /* {\n            key: 'column4',\n            name: 'Activo',\n            fieldName: 'active',\n            minWidth: 50,\n            maxWidth: 50,\n            isResizable: true,\n            isCollapsible: true,\n            data: 'boolean',\n            onColumnClick: _onColumnClick,\n            onRender: (item: IStudent) => {\n                return <span>{item.active ? \"Si\" : \"No\"}</span>;\n            },\n            isPadded: true,\n        }, */\n        {\n            key: 'column6',\n            name: 'Nota',\n            fieldName: 'notes',\n            minWidth: 70,\n            maxWidth: 100,\n            isResizable: true,\n            isCollapsible: true,\n            data: 'string',\n            onColumnClick: _onColumnClick2,\n            onRender: (item: IStudent) => {\n                return <span>{item.notes}</span>;\n            },\n        },\n        {\n            key: 'column7',\n            name: 'Last',\n            fieldName: 'last',\n            minWidth: 70,\n            maxWidth: 90,\n            isResizable: true,\n            isCollapsible: true,\n            data: 'string',\n            onColumnClick: _onColumnClick,\n            onRender: (item: IStudent) => {\n                return <span>{new Date(item.last).toDateString()}</span>;\n                //return <span>{item.last}</span>;\n            },\n        },\n        /* {\n            key: 'column8',\n            name: 'Last Partner',\n            fieldName: 'lastpartner',\n            minWidth: 50,\n            maxWidth: 70,\n            isResizable: true,\n            isCollapsible: true,\n            data: 'string',\n            onColumnClick: _onColumnClick,\n            onRender: (item: IStudent) => {\n                return <span>{item.lastpartner}</span>;\n            },\n        }, */\n    ];\n    //_allItems = [{ \"id\": 1, \"name\": \"Ana Iris Arrieta \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:00Z\", \"lastpartner\": 0 }, { \"id\": 2, \"name\": \"Kelly Arrieta \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:01Z\", \"lastpartner\": 0 }, { \"id\": 3, \"name\": \"Wilson Arrieta \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:02Z\", \"lastpartner\": 0 }, { \"id\": 4, \"name\": \"Wilson hijo Arrieta \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:03Z\", \"lastpartner\": 0 }, { \"id\": 5, \"name\": \"Claribel Cárdenas \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:04Z\", \"lastpartner\": 0 }, { \"id\": 6, \"name\": \"Samuel Cárdenas \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:05Z\", \"lastpartner\": 0 }, { \"id\": 7, \"name\": \"Yesenia Cárdenas\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:06Z\", \"lastpartner\": 0 }, { \"id\": 8, \"name\": \"Vélez Carolina \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:07Z\", \"lastpartner\": 0 }, { \"id\": 9, \"name\": \"Dairo C Chávez \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:08Z\", \"lastpartner\": 0 }, { \"id\": 10, \"name\": \"Mary Cielo Corpus \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:09Z\", \"lastpartner\": 0 }, { \"id\": 11, \"name\": \"Pablo Corpus \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:10Z\", \"lastpartner\": 0 }, { \"id\": 12, \"name\": \"Paulina Corpus \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:11Z\", \"lastpartner\": 0 }, { \"id\": 13, \"name\": \"Aldair Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:12Z\", \"lastpartner\": 0 }, { \"id\": 14, \"name\": \"Iván Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:13Z\", \"lastpartner\": 0 }, { \"id\": 15, \"name\": \"Jael Galván \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:14Z\", \"lastpartner\": 0 }, { \"id\": 16, \"name\": \"Nelson Galvis Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:15Z\", \"lastpartner\": 0 }, { \"id\": 17, \"name\": \"Abad García \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:16Z\", \"lastpartner\": 0 }, { \"id\": 18, \"name\": \"Doris González \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:17Z\", \"lastpartner\": 0 }, { \"id\": 19, \"name\": \"Brenda Guardo \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:18Z\", \"lastpartner\": 0 }, { \"id\": 20, \"name\": \"Celia Guardo \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-26T11:58:04.3956794-05:00\", \"lastpartner\": 38 }, { \"id\": 21, \"name\": \"Oleida Guzmán \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:20Z\", \"lastpartner\": 0 }, { \"id\": 22, \"name\": \"Eneida Hoyos \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:21Z\", \"lastpartner\": 0 }, { \"id\": 23, \"name\": \"Marley Jaller \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:22Z\", \"lastpartner\": 0 }, { \"id\": 24, \"name\": \"Eduardo Jaller \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:23Z\", \"lastpartner\": 0 }, { \"id\": 25, \"name\": \"Salma Jaller \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:24Z\", \"lastpartner\": 0 }, { \"id\": 26, \"name\": \"Isabella Jiménez \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:25Z\", \"lastpartner\": 0 }, { \"id\": 27, \"name\": \"Lilián Manchego \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:26Z\", \"lastpartner\": 0 }, { \"id\": 28, \"name\": \"Isabel Manjarrés\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:27Z\", \"lastpartner\": 0 }, { \"id\": 29, \"name\": \"Angélica Montesinos\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:28Z\", \"lastpartner\": 0 }, { \"id\": 30, \"name\": \"Pio Pacheco\", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:29Z\", \"lastpartner\": 0 }, { \"id\": 31, \"name\": \"Maryonis Pacheco\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:30Z\", \"lastpartner\": 0 }, { \"id\": 32, \"name\": \"Rita Rico \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:31Z\", \"lastpartner\": 0 }, { \"id\": 33, \"name\": \"Karol Rincón \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:32Z\", \"lastpartner\": 0 }, { \"id\": 34, \"name\": \"Katerin Rincón\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:33Z\", \"lastpartner\": 0 }, { \"id\": 35, \"name\": \"Rosmira Rodríguez\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:34Z\", \"lastpartner\": 0 }, { \"id\": 36, \"name\": \"Sixta Rodríguez \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:35Z\", \"lastpartner\": 0 }, { \"id\": 37, \"name\": \"Erika Silgado\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:36Z\", \"lastpartner\": 0 }, { \"id\": 38, \"name\": \"Lorena Silgado\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-26T11:58:04.3956794-05:00\", \"lastpartner\": 20 }, { \"id\": 39, \"name\": \"Ana Turizo\", \"gender\": \"f\", \"cel\": 0, \"active\": false, \"notes\": \"\", \"last\": \"2020-11-01T00:00:38Z\", \"lastpartner\": 0 }, { \"id\": 40, \"name\": \"Calixto Turizo\", \"gender\": \"m\", \"cel\": 0, \"active\": false, \"notes\": \"\", \"last\": \"2020-11-01T00:00:39Z\", \"lastpartner\": 0 }, { \"id\": 41, \"name\": \"Máximo Villalobos\", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:40Z\", \"lastpartner\": 0 }, { \"id\": 42, \"name\": \"Sara Villalobos\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:41Z\", \"lastpartner\": 0 }, { \"id\": 43, \"name\": \"Yadith Villalobos \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:42Z\", \"lastpartner\": 0 }]\n    const [tableColumns, setColumns] = React.useState(columns);\n    //const [selectionDetails, setSelectionDetails] = React.useState(_getSelectionDetails);\n    //constructor(props: {}) {\n    //super(props);\n\n    //_allItems = _generateDocuments();\n\n    const _getKey = (item: any, index?: number): string => {\n        return item.key;\n    }\n\n    const _onChangeText = (ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n        const text2 = ev?.target as HTMLButtonElement;\n        console.log(text2.value);\n        const text = text2.value;\n        //setItems(text ? _allItems.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _allItems)\n        console.log(items);\n    };\n\n    const _onItemInvoked = (item: any): void => {\n        alert(`Item invoked: ${item.name}`);\n    }\n\n    const openModal = () => {\n        console.log(\"Opening\");\n        setModalData({\n            mode: \"new\",\n            data: initialData\n        })\n        showModal();\n    }\n\n    const onClickTest = () => {\n        console.log(\"Good Click\")\n    }\n\n\n    /*  useEffect(() => {\n \n     }); */\n    //const { isCompactMode, items, selectionDetails, isModalSelection, announcedMessage } = state;\n\n    return (\n        <Fabric styles={fabricStyle}>\n            {/* <div className={classNames.selectionDetails}>{selectionDetails}</div> */}\n\n            {/* <DefaultButton onClick={openModal} text=\"Open Modal\" /> */}\n            {/* <DefaultButton onClick={_onColumnClick2} text=\"Test\" /> */}\n            {/* <div className={classNames.controlWrapper}>\n                <TextField label=\"Filter by name:\" onChange={(event) => { _onChangeText(event) }} styles={controlStyles} />\n                <Announced message={`Number of items after filter applied: ${items.length}.`} />\n            </div> */}\n            {/* <div className={classNames.flexDiv}>\n                <div>\n                    <Text variant={\"xLarge\"} block> Estudiantes </Text>\n                </div>\n            </div> */}\n            {/* <Announced message={selectionDetails} /> */}\n            {/* {announcedMessage ? <Announced message={announcedMessage} /> : undefined} */}\n            {isModalSelection ? (\n                <MarqueeSelection selection={_selection}>\n                    <DetailsList\n                        items={items}\n                        compact={isCompactMode}\n                        columns={tableColumns}\n                        //selectionMode={SelectionMode.multiple}\n                        selectionMode={SelectionMode.single}\n                        getKey={_getKey}\n                        setKey=\"multiple\"\n                        layoutMode={DetailsListLayoutMode.justified}\n                        isHeaderVisible={true}\n                        selection={_selection}\n                        selectionPreservedOnEmptyClick={true}\n                        onItemInvoked={_onItemInvoked}\n                        enterModalSelectionOnTouch={true}\n                        ariaLabelForSelectionColumn=\"Toggle selection\"\n                        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n                        checkButtonAriaLabel=\"Row checkbox\"\n                        checkboxVisibility={CheckboxVisibility.hidden}\n                    />\n                </MarqueeSelection>\n            ) : (\n                    <DetailsList\n                        items={items}\n                        compact={isCompactMode}\n                        columns={tableColumns}\n                        selectionMode={SelectionMode.none}\n                        getKey={_getKey}\n                        setKey=\"none\"\n                        layoutMode={DetailsListLayoutMode.justified}\n                        isHeaderVisible={true}\n                        onItemInvoked={_onItemInvoked}\n                        selection={_selection}\n                    />\n                )}\n        </Fabric>\n    );\n\n    function _copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\n        const key = columnKey as keyof T;\n        console.log(items[0]);\n        return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\n    }\n}\n\nexport default SimpleStudentsTable;\n\n\n\n\n\n\n\n","/root/projects/lifeministry-spra/src/components/students/stdModal.tsx",[],"/root/projects/lifeministry-spra/src/components/generator/schedulesList.tsx",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221"],"import * as React from 'react';\n//import { TextField } from 'office-ui-fabric-react/lib/TextField';\n//import { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { Announced } from 'office-ui-fabric-react/lib/Announced';\nimport {\n    DetailsList,\n    DetailsListLayoutMode,\n    Selection,\n    SelectionMode,\n    IColumn,\n    CheckboxVisibility,\n} from 'office-ui-fabric-react/lib/DetailsList';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\nimport { useBoolean } from '@uifabric/react-hooks';\nimport { ActionButton, CommandBarButton, /* DefaultButton, */ DefaultPalette, FontWeights, IIconProps, ISearchBoxStyles, IStackItemStyles, IStackStyles, IStackTokens, Label, SearchBox, Stack, Text } from '@fluentui/react';\nimport { IDataBase, ISchedule, IStudent } from '../../types/ministry.types';\nimport { LifeMinistryContext } from '../../App';\n\nconst classNames = mergeStyleSets({\n    fileIconHeaderIcon: {\n        padding: 0,\n        fontSize: '16px',\n    },\n    fileIconCell: {\n        textAlign: 'center',\n        selectors: {\n            '&:before': {\n                content: '.',\n                display: 'inline-block',\n                verticalAlign: 'middle',\n                height: '100%',\n                width: '0px',\n                visibility: 'hidden',\n            },\n        },\n    },\n    fileIconImg: {\n        verticalAlign: 'middle',\n        maxHeight: '16px',\n        maxWidth: '16px',\n    },\n    controlWrapper: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    exampleToggle: {\n        display: 'inline-block',\n        marginBottom: '10px',\n        marginRight: '30px',\n    },\n    selectionDetails: {\n        marginBottom: '20px',\n    },\n    flexDiv: [\n        //theme.fonts.xLargePlus,\n        {\n            flex: '1 1 auto',\n            borderTop: '1px solid rgb(149 149 149)',\n            //color: theme.palette.neutralPrimary,\n            display: 'flex',\n            alignItems: 'center',\n            fontWeight: FontWeights.semibold,\n            width: \"100%\"\n            //padding: '12px 12px 14px 24px',\n        },\n    ],\n});\n\n\nexport interface IDetailsListDocumentsExampleState {\n    columns: IColumn[];\n    items: IStudent[];\n    selectionDetails: string;\n    isModalSelection: boolean;\n    isCompactMode: boolean;\n    announcedMessage?: string;\n}\n\nexport interface IDocument {\n    key: string;\n    name: string;\n    value: string;\n    iconName: string;\n    fileType: string;\n    modifiedBy: string;\n    dateModified: string;\n    dateModifiedValue: number;\n    fileSize: string;\n    fileSizeRaw: number;\n}\n\ninterface Props {\n    loadSchedule: any\n}\n\nconst initialData: IStudent[] = [{\n    \"id\": 0,\n    \"name\": \"\",\n    \"gender\": \"f\",\n    \"cel\": 0,\n    \"active\": true,\n    \"notes\": \"\",\n    \"last\": new Date(\"01/01/21\").toISOString(),\n    \"lastpartner\": 0\n}]\n\nconst searchBoxStyles: Partial<ISearchBoxStyles> = { root: { width: 200, height: 44 } };\n\nconst delIcon: IIconProps = { iconName: 'Add' };\nconst mailIcon: IIconProps = { iconName: 'Mail' };\nconst stackStyles: Partial<IStackStyles> = { root: { width: \"100%\", height: 44 } };\n\nconst fabricStyle: IStackStyles = {\n    root: {\n        width: \"100%\",\n    },\n};\n\nconst SchedulesList = (props: Props) => {\n    //export class StudentsTable extends React.Component<{}, IDetailsListDocumentsExampleState> {\n    let _selection: Selection;\n    //let _selection2: Selection;\n    //let _allItems: IStudent[];\n    //_allItems = props.data;\n    //console.log(_allItems[0]);\n    const isModalSelection = true;\n    const isCompactMode = true;\n\n    const db: IDataBase = React.useContext(LifeMinistryContext)\n    const [items, setItems] = React.useState<ISchedule[]>([]);\n    const [announcedMessage, setAnnouncedMessage] = React.useState();\n    const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\n    const [modalData, setModalData] = React.useState({ mode: \"new\", data: initialData })\n\n\n    React.useEffect(() => {\n        console.log(\"component updated\");\n        //setItems(db.getSchedules);\n        //_allItems = props.data;\n        //console.log(_allItems[0]);\n        db.getSchedules().then((res: ISchedule[]) => {\n            console.log(res);\n            setItems(res);\n        });\n        console.log(items);\n    }, []);\n\n    const _onColumnClick = (): void => {\n        console.log(\"Call from 2 function\");\n        console.log(items[0]);\n        //console.log(props.data[0])\n    }\n\n    /* const _onColumnClick = (ev: React.MouseEvent<HTMLElement>, column: IColumn): void => {\n        //const { columns, items } = state;\n        //_onColumnClick2();\n        console.log(items[0]);\n        const newColumns: IColumn[] = tableColumns.slice();\n        const currColumn: IColumn = newColumns.filter(currCol => column.key === currCol.key)[0];\n        newColumns.forEach((newCol: IColumn) => {\n            if (newCol === currColumn) {\n                currColumn.isSortedDescending = !currColumn.isSortedDescending;\n                currColumn.isSorted = true;\n                //setAnnouncedMessage(`${currColumn.name} is sorted ${currColumn.isSortedDescending ? 'descending' : 'ascending'}`)\n            } else {\n                newCol.isSorted = false;\n                newCol.isSortedDescending = true;\n            }\n        });\n        console.log(props.data[0])\n        const newItems = _copyAndSort(props.data, currColumn.fieldName!, currColumn.isSortedDescending);\n        setColumns(newColumns);\n        //setItems(newItems);\n    }; */\n\n    _selection = new Selection({\n        onSelectionChanged: () => {\n            console.log(items[0]);\n            console.log(\"Row selected\");\n            //setSelectionDetails(_getSelectionDetails());\n            const crrStudentData: string | IStudent[] = _getSelectionDetails();\n            console.log(crrStudentData[0])\n            //props.cllBack(crrStudentData[0])\n           /*  setModalData({\n                mode: \"edit\",\n                data: crrStudentData as IStudent[]\n            })\n            showModal() */;\n        },\n    });\n\n    const _getSelectionDetails = (): string | IStudent[] => {\n        const selectionCount = _selection.getSelectedCount();\n\n        switch (selectionCount) {\n            case 0:\n                return initialData;\n            case 1:\n                //return '1 item selected: ' + (_selection.getSelection()[0] as IStudent).name;\n                return _selection.getSelection() as IStudent[];\n            default:\n                return `${selectionCount} items selected`;\n        }\n    }\n\n    const columns: IColumn[] = [\n        {\n            key: 'column1',\n            name: 'Icon',\n            className: classNames.fileIconCell,\n            iconClassName: classNames.fileIconHeaderIcon,\n            ariaLabel: 'Column operations for File type, Press to sort on File type',\n            iconName: 'Page',\n            isIconOnly: true,\n            fieldName: 'name',\n            minWidth: 16,\n            maxWidth: 16,\n            onColumnClick: _onColumnClick,\n            /* onRender: (item: IStudent) => {\n                return <img src={item.iconName} className={classNames.fileIconImg} alt={item.fileType + ' file icon'} />;\n            }, */\n        },\n        {\n            key: 'column2',\n            name: 'Fechas',\n            //fieldName: 'range',\n            minWidth: 100,\n            maxWidth: 150,\n            isRowHeader: true,\n            isResizable: true,\n            isSorted: true,\n            isSortedDescending: false,\n            sortAscendingAriaLabel: 'Sorted A to Z',\n            sortDescendingAriaLabel: 'Sorted Z to A',\n            onColumnClick: _onColumnClick,\n            data: 'string',\n\n            onRender: (item: ISchedule) => {\n                return (\n                    <ActionButton allowDisabledFocus onClick={props.loadSchedule} >\n                        {item.range}\n                    </ActionButton>\n                )\n            },\n            isPadded: true,\n        },\n\n        {\n            key: 'column4',\n            name: 'Acciones',\n            //fieldName: 'active',\n            minWidth: 50,\n            maxWidth: 50,\n            isResizable: true,\n            isCollapsible: true,\n            data: 'boolean',\n            onColumnClick: _onColumnClick,\n            onRender: (item: ISchedule) => {\n                return (\n                    <ActionButton allowDisabledFocus >\n                        Borrar\n                    </ActionButton>\n                )\n            },\n            isPadded: true,\n        },\n        /* {\n            key: 'column6',\n            name: 'Nota',\n            fieldName: 'notes',\n            minWidth: 70,\n            maxWidth: 100,\n            isResizable: true,\n            isCollapsible: true,\n            data: 'string',\n            onColumnClick: _onColumnClick2,\n            onRender: (item: IStudent) => {\n                return <span>{item.notes}</span>;\n            },\n        },\n        {\n            key: 'column7',\n            name: 'Last',\n            fieldName: 'last',\n            minWidth: 70,\n            maxWidth: 90,\n            isResizable: true,\n            isCollapsible: true,\n            data: 'string',\n            onColumnClick: _onColumnClick,\n            onRender: (item: IStudent) => {\n                return <span>{new Date(item.last).toDateString()}</span>;\n                //return <span>{item.last}</span>;\n            },\n        }, */\n        /* {\n            key: 'column8',\n            name: 'Last Partner',\n            fieldName: 'lastpartner',\n            minWidth: 50,\n            maxWidth: 70,\n            isResizable: true,\n            isCollapsible: true,\n            data: 'string',\n            onColumnClick: _onColumnClick,\n            onRender: (item: IStudent) => {\n                return <span>{item.lastpartner}</span>;\n            },\n        }, */\n    ];\n    //_allItems = [{ \"id\": 1, \"name\": \"Ana Iris Arrieta \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:00Z\", \"lastpartner\": 0 }, { \"id\": 2, \"name\": \"Kelly Arrieta \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:01Z\", \"lastpartner\": 0 }, { \"id\": 3, \"name\": \"Wilson Arrieta \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:02Z\", \"lastpartner\": 0 }, { \"id\": 4, \"name\": \"Wilson hijo Arrieta \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:03Z\", \"lastpartner\": 0 }, { \"id\": 5, \"name\": \"Claribel Cárdenas \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:04Z\", \"lastpartner\": 0 }, { \"id\": 6, \"name\": \"Samuel Cárdenas \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:05Z\", \"lastpartner\": 0 }, { \"id\": 7, \"name\": \"Yesenia Cárdenas\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:06Z\", \"lastpartner\": 0 }, { \"id\": 8, \"name\": \"Vélez Carolina \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:07Z\", \"lastpartner\": 0 }, { \"id\": 9, \"name\": \"Dairo C Chávez \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:08Z\", \"lastpartner\": 0 }, { \"id\": 10, \"name\": \"Mary Cielo Corpus \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:09Z\", \"lastpartner\": 0 }, { \"id\": 11, \"name\": \"Pablo Corpus \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:10Z\", \"lastpartner\": 0 }, { \"id\": 12, \"name\": \"Paulina Corpus \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:11Z\", \"lastpartner\": 0 }, { \"id\": 13, \"name\": \"Aldair Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:12Z\", \"lastpartner\": 0 }, { \"id\": 14, \"name\": \"Iván Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:13Z\", \"lastpartner\": 0 }, { \"id\": 15, \"name\": \"Jael Galván \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:14Z\", \"lastpartner\": 0 }, { \"id\": 16, \"name\": \"Nelson Galvis Galván \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:15Z\", \"lastpartner\": 0 }, { \"id\": 17, \"name\": \"Abad García \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:16Z\", \"lastpartner\": 0 }, { \"id\": 18, \"name\": \"Doris González \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:17Z\", \"lastpartner\": 0 }, { \"id\": 19, \"name\": \"Brenda Guardo \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:18Z\", \"lastpartner\": 0 }, { \"id\": 20, \"name\": \"Celia Guardo \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-26T11:58:04.3956794-05:00\", \"lastpartner\": 38 }, { \"id\": 21, \"name\": \"Oleida Guzmán \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:20Z\", \"lastpartner\": 0 }, { \"id\": 22, \"name\": \"Eneida Hoyos \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:21Z\", \"lastpartner\": 0 }, { \"id\": 23, \"name\": \"Marley Jaller \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:22Z\", \"lastpartner\": 0 }, { \"id\": 24, \"name\": \"Eduardo Jaller \", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:23Z\", \"lastpartner\": 0 }, { \"id\": 25, \"name\": \"Salma Jaller \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:24Z\", \"lastpartner\": 0 }, { \"id\": 26, \"name\": \"Isabella Jiménez \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:25Z\", \"lastpartner\": 0 }, { \"id\": 27, \"name\": \"Lilián Manchego \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:26Z\", \"lastpartner\": 0 }, { \"id\": 28, \"name\": \"Isabel Manjarrés\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:27Z\", \"lastpartner\": 0 }, { \"id\": 29, \"name\": \"Angélica Montesinos\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:28Z\", \"lastpartner\": 0 }, { \"id\": 30, \"name\": \"Pio Pacheco\", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:29Z\", \"lastpartner\": 0 }, { \"id\": 31, \"name\": \"Maryonis Pacheco\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:30Z\", \"lastpartner\": 0 }, { \"id\": 32, \"name\": \"Rita Rico \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:31Z\", \"lastpartner\": 0 }, { \"id\": 33, \"name\": \"Karol Rincón \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:32Z\", \"lastpartner\": 0 }, { \"id\": 34, \"name\": \"Katerin Rincón\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:33Z\", \"lastpartner\": 0 }, { \"id\": 35, \"name\": \"Rosmira Rodríguez\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:34Z\", \"lastpartner\": 0 }, { \"id\": 36, \"name\": \"Sixta Rodríguez \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:35Z\", \"lastpartner\": 0 }, { \"id\": 37, \"name\": \"Erika Silgado\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:36Z\", \"lastpartner\": 0 }, { \"id\": 38, \"name\": \"Lorena Silgado\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-26T11:58:04.3956794-05:00\", \"lastpartner\": 20 }, { \"id\": 39, \"name\": \"Ana Turizo\", \"gender\": \"f\", \"cel\": 0, \"active\": false, \"notes\": \"\", \"last\": \"2020-11-01T00:00:38Z\", \"lastpartner\": 0 }, { \"id\": 40, \"name\": \"Calixto Turizo\", \"gender\": \"m\", \"cel\": 0, \"active\": false, \"notes\": \"\", \"last\": \"2020-11-01T00:00:39Z\", \"lastpartner\": 0 }, { \"id\": 41, \"name\": \"Máximo Villalobos\", \"gender\": \"m\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:40Z\", \"lastpartner\": 0 }, { \"id\": 42, \"name\": \"Sara Villalobos\", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:41Z\", \"lastpartner\": 0 }, { \"id\": 43, \"name\": \"Yadith Villalobos \", \"gender\": \"f\", \"cel\": 0, \"active\": true, \"notes\": \"\", \"last\": \"2020-11-01T00:00:42Z\", \"lastpartner\": 0 }]\n    const [tableColumns, setColumns] = React.useState(columns);\n    //const [selectionDetails, setSelectionDetails] = React.useState(_getSelectionDetails);\n    //constructor(props: {}) {\n    //super(props);\n\n    //_allItems = _generateDocuments();\n\n    const _getKey = (item: any, index?: number): string => {\n        return item.key;\n    }\n\n    const _onChangeText = (ev?: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n        const text2 = ev?.target as HTMLButtonElement;\n        console.log(text2.value);\n        const text = text2.value;\n        //setItems(text ? _allItems.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _allItems)\n        console.log(items);\n    };\n\n    const _onItemInvoked = (item: any): void => {\n        alert(`Item invoked: ${item.name}`);\n    }\n\n    const openModal = () => {\n        console.log(\"Opening\");\n        setModalData({\n            mode: \"new\",\n            data: initialData\n        })\n        showModal();\n    }\n\n    const onClickTest = () => {\n        console.log(\"Good Click\")\n    }\n\n\n    /*  useEffect(() => {\n \n     }); */\n    //const { isCompactMode, items, selectionDetails, isModalSelection, announcedMessage } = state;\n\n    return (\n        <Fabric styles={fabricStyle}>\n            {/* <div className={classNames.selectionDetails}>{selectionDetails}</div> */}\n\n            {/* <DefaultButton onClick={openModal} text=\"Open Modal\" /> */}\n            {/* <DefaultButton onClick={_onColumnClick2} text=\"Test\" /> */}\n            {/* <div className={classNames.controlWrapper}>\n                <TextField label=\"Filter by name:\" onChange={(event) => { _onChangeText(event) }} styles={controlStyles} />\n                <Announced message={`Number of items after filter applied: ${items.length}.`} />\n            </div> */}\n            {/* <div className={classNames.flexDiv}>\n                <div>\n                    <Text variant={\"xLarge\"} block> Estudiantes </Text>\n                </div>\n            </div> */}\n            {/* <Announced message={selectionDetails} /> */}\n            {/* {announcedMessage ? <Announced message={announcedMessage} /> : undefined} */}\n            {isModalSelection ? (\n                <MarqueeSelection selection={_selection}>\n                    <DetailsList\n                        items={items}\n                        compact={isCompactMode}\n                        columns={tableColumns}\n                        //selectionMode={SelectionMode.multiple}\n                        selectionMode={SelectionMode.none}\n                        getKey={_getKey}\n                        setKey=\"multiple\"\n                        layoutMode={DetailsListLayoutMode.justified}\n                        isHeaderVisible={true}\n                        selection={_selection}\n                        selectionPreservedOnEmptyClick={false}\n                        onItemInvoked={_onItemInvoked}\n                        enterModalSelectionOnTouch={true}\n                        ariaLabelForSelectionColumn=\"Toggle selection\"\n                        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n                        checkButtonAriaLabel=\"Row checkbox\"\n                        checkboxVisibility={CheckboxVisibility.hidden}\n                    />\n                </MarqueeSelection>\n            ) : (\n                    <DetailsList\n                        items={items}\n                        compact={isCompactMode}\n                        columns={tableColumns}\n                        selectionMode={SelectionMode.none}\n                        getKey={_getKey}\n                        setKey=\"none\"\n                        layoutMode={DetailsListLayoutMode.justified}\n                        isHeaderVisible={true}\n                        onItemInvoked={_onItemInvoked}\n                        selection={_selection}\n                    />\n                )}\n        </Fabric>\n    );\n\n    function _copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\n        const key = columnKey as keyof T;\n        console.log(items[0]);\n        return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\n    }\n}\n\nexport default SchedulesList;\n\n\n\n\n\n\n\n","/home/velez/Projects/lifeministry-spra/src/index.tsx",[],["222","223"],"/home/velez/Projects/lifeministry-spra/src/reportWebVitals.ts",[],"/home/velez/Projects/lifeministry-spra/src/App.tsx",[],"/home/velez/Projects/lifeministry-spra/src/api/lifeministry.ts",[],"/home/velez/Projects/lifeministry-spra/src/pages/students.tsx",["224"],"/home/velez/Projects/lifeministry-spra/src/pages/generator.tsx",["225"],"/home/velez/Projects/lifeministry-spra/src/components/menu/navigation.tsx",[],"/home/velez/Projects/lifeministry-spra/src/components/students/studentsList.tsx",[],"/home/velez/Projects/lifeministry-spra/src/components/generator/datesGenerator.tsx",["226"],"/home/velez/Projects/lifeministry-spra/src/components/generator/generator.tsx",["227","228","229","230","231","232","233","234","235"],"/home/velez/Projects/lifeministry-spra/src/components/generator/schedulesList.tsx",["236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260"],"/home/velez/Projects/lifeministry-spra/src/components/generator/assignment.tsx",[],"/home/velez/Projects/lifeministry-spra/src/components/students/stdModal.tsx",[],"/home/velez/Projects/lifeministry-spra/src/components/generator/partnersLayout.tsx",["261","262","263","264","265"],"/home/velez/Projects/lifeministry-spra/src/components/generator/pubsModal.tsx",["266","267","268","269","270","271","272","273","274","275"],"/home/velez/Projects/lifeministry-spra/src/components/generator/simpleStdList.tsx",["276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297"],{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","severity":1,"message":"303","line":38,"column":6,"nodeType":"304","endLine":38,"endColumn":18,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":119,"column":10,"nodeType":"308","messageId":"309","endLine":119,"endColumn":23},{"ruleId":"306","severity":1,"message":"310","line":2,"column":3,"nodeType":"308","messageId":"309","endLine":2,"endColumn":15},{"ruleId":"306","severity":1,"message":"311","line":4,"column":3,"nodeType":"308","messageId":"309","endLine":4,"endColumn":17},{"ruleId":"306","severity":1,"message":"312","line":7,"column":3,"nodeType":"308","messageId":"309","endLine":7,"endColumn":19},{"ruleId":"306","severity":1,"message":"313","line":8,"column":3,"nodeType":"308","messageId":"309","endLine":8,"endColumn":15},{"ruleId":"306","severity":1,"message":"314","line":9,"column":3,"nodeType":"308","messageId":"309","endLine":9,"endColumn":15},{"ruleId":"306","severity":1,"message":"315","line":10,"column":3,"nodeType":"308","messageId":"309","endLine":10,"endColumn":15},{"ruleId":"306","severity":1,"message":"316","line":12,"column":3,"nodeType":"308","messageId":"309","endLine":12,"endColumn":16},{"ruleId":"306","severity":1,"message":"317","line":13,"column":3,"nodeType":"308","messageId":"309","endLine":13,"endColumn":8},{"ruleId":"306","severity":1,"message":"318","line":17,"column":10,"nodeType":"308","messageId":"309","endLine":17,"endColumn":28},{"ruleId":"306","severity":1,"message":"319","line":1,"column":17,"nodeType":"308","messageId":"309","endLine":1,"endColumn":25},{"ruleId":"306","severity":1,"message":"320","line":8,"column":32,"nodeType":"308","messageId":"309","endLine":8,"endColumn":40},{"ruleId":"306","severity":1,"message":"321","line":98,"column":7,"nodeType":"308","messageId":"309","endLine":98,"endColumn":47},{"ruleId":"306","severity":1,"message":"322","line":106,"column":11,"nodeType":"308","messageId":"309","endLine":106,"endColumn":19},{"ruleId":"306","severity":1,"message":"323","line":137,"column":10,"nodeType":"308","messageId":"309","endLine":137,"endColumn":25},{"ruleId":"306","severity":1,"message":"324","line":1,"column":24,"nodeType":"308","messageId":"309","endLine":1,"endColumn":40},{"ruleId":"306","severity":1,"message":"315","line":1,"column":126,"nodeType":"308","messageId":"309","endLine":1,"endColumn":138},{"ruleId":"306","severity":1,"message":"316","line":1,"column":156,"nodeType":"308","messageId":"309","endLine":1,"endColumn":169},{"ruleId":"306","severity":1,"message":"325","line":24,"column":7,"nodeType":"308","messageId":"309","endLine":24,"endColumn":46},{"ruleId":"306","severity":1,"message":"326","line":35,"column":7,"nodeType":"308","messageId":"309","endLine":35,"endColumn":41},{"ruleId":"306","severity":1,"message":"327","line":15,"column":165,"nodeType":"308","messageId":"309","endLine":15,"endColumn":179},{"ruleId":"306","severity":1,"message":"328","line":15,"column":197,"nodeType":"308","messageId":"309","endLine":15,"endColumn":206},{"ruleId":"306","severity":1,"message":"329","line":18,"column":10,"nodeType":"308","messageId":"309","endLine":18,"endColumn":21},{"ruleId":"306","severity":1,"message":"330","line":99,"column":7,"nodeType":"308","messageId":"309","endLine":99,"endColumn":59},{"ruleId":"306","severity":1,"message":"331","line":117,"column":34,"nodeType":"308","messageId":"309","endLine":117,"endColumn":41},{"ruleId":"306","severity":1,"message":"332","line":117,"column":53,"nodeType":"308","messageId":"309","endLine":117,"endColumn":60},{"ruleId":"306","severity":1,"message":"333","line":118,"column":35,"nodeType":"308","messageId":"309","endLine":118,"endColumn":43},{"ruleId":"306","severity":1,"message":"334","line":118,"column":55,"nodeType":"308","messageId":"309","endLine":118,"endColumn":63},{"ruleId":"306","severity":1,"message":"335","line":123,"column":11,"nodeType":"308","messageId":"309","endLine":123,"endColumn":23},{"ruleId":"306","severity":1,"message":"336","line":129,"column":30,"nodeType":"308","messageId":"309","endLine":129,"endColumn":35},{"ruleId":"306","severity":1,"message":"337","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":19},{"ruleId":"306","severity":1,"message":"324","line":17,"column":10,"nodeType":"308","messageId":"309","endLine":17,"endColumn":26},{"ruleId":"306","severity":1,"message":"311","line":17,"column":49,"nodeType":"308","messageId":"309","endLine":17,"endColumn":63},{"ruleId":"306","severity":1,"message":"312","line":17,"column":108,"nodeType":"308","messageId":"309","endLine":17,"endColumn":124},{"ruleId":"306","severity":1,"message":"314","line":17,"column":140,"nodeType":"308","messageId":"309","endLine":17,"endColumn":152},{"ruleId":"306","severity":1,"message":"338","line":17,"column":154,"nodeType":"308","messageId":"309","endLine":17,"endColumn":159},{"ruleId":"306","severity":1,"message":"339","line":17,"column":161,"nodeType":"308","messageId":"309","endLine":17,"endColumn":170},{"ruleId":"306","severity":1,"message":"317","line":17,"column":172,"nodeType":"308","messageId":"309","endLine":17,"endColumn":177},{"ruleId":"306","severity":1,"message":"340","line":17,"column":179,"nodeType":"308","messageId":"309","endLine":17,"endColumn":183},{"ruleId":"306","severity":1,"message":"341","line":109,"column":7,"nodeType":"308","messageId":"309","endLine":109,"endColumn":49},{"ruleId":"306","severity":1,"message":"342","line":111,"column":7,"nodeType":"308","messageId":"309","endLine":111,"endColumn":26},{"ruleId":"306","severity":1,"message":"343","line":112,"column":7,"nodeType":"308","messageId":"309","endLine":112,"endColumn":27},{"ruleId":"306","severity":1,"message":"344","line":113,"column":7,"nodeType":"308","messageId":"309","endLine":113,"endColumn":41},{"ruleId":"306","severity":1,"message":"345","line":132,"column":12,"nodeType":"308","messageId":"309","endLine":132,"endColumn":28},{"ruleId":"306","severity":1,"message":"346","line":132,"column":30,"nodeType":"308","messageId":"309","endLine":132,"endColumn":49},{"ruleId":"306","severity":1,"message":"347","line":133,"column":57,"nodeType":"308","messageId":"309","endLine":133,"endColumn":66},{"ruleId":"306","severity":1,"message":"348","line":134,"column":12,"nodeType":"308","messageId":"309","endLine":134,"endColumn":21},{"ruleId":"306","severity":1,"message":"349","line":135,"column":11,"nodeType":"308","messageId":"309","endLine":135,"endColumn":18},{"ruleId":"306","severity":1,"message":"350","line":307,"column":11,"nodeType":"308","messageId":"309","endLine":307,"endColumn":24},{"ruleId":"306","severity":1,"message":"351","line":310,"column":15,"nodeType":"308","messageId":"309","endLine":310,"endColumn":19},{"ruleId":"306","severity":1,"message":"352","line":319,"column":11,"nodeType":"308","messageId":"309","endLine":319,"endColumn":20},{"ruleId":"306","severity":1,"message":"353","line":328,"column":11,"nodeType":"308","messageId":"309","endLine":328,"endColumn":22},{"ruleId":"306","severity":1,"message":"337","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":19},{"ruleId":"306","severity":1,"message":"324","line":17,"column":24,"nodeType":"308","messageId":"309","endLine":17,"endColumn":40},{"ruleId":"306","severity":1,"message":"311","line":17,"column":63,"nodeType":"308","messageId":"309","endLine":17,"endColumn":77},{"ruleId":"306","severity":1,"message":"312","line":17,"column":122,"nodeType":"308","messageId":"309","endLine":17,"endColumn":138},{"ruleId":"306","severity":1,"message":"314","line":17,"column":154,"nodeType":"308","messageId":"309","endLine":17,"endColumn":166},{"ruleId":"306","severity":1,"message":"338","line":17,"column":168,"nodeType":"308","messageId":"309","endLine":17,"endColumn":173},{"ruleId":"306","severity":1,"message":"339","line":17,"column":175,"nodeType":"308","messageId":"309","endLine":17,"endColumn":184},{"ruleId":"306","severity":1,"message":"317","line":17,"column":186,"nodeType":"308","messageId":"309","endLine":17,"endColumn":191},{"ruleId":"306","severity":1,"message":"340","line":17,"column":193,"nodeType":"308","messageId":"309","endLine":17,"endColumn":197},{"ruleId":"306","severity":1,"message":"341","line":109,"column":7,"nodeType":"308","messageId":"309","endLine":109,"endColumn":49},{"ruleId":"306","severity":1,"message":"354","line":111,"column":7,"nodeType":"308","messageId":"309","endLine":111,"endColumn":26},{"ruleId":"306","severity":1,"message":"343","line":112,"column":7,"nodeType":"308","messageId":"309","endLine":112,"endColumn":27},{"ruleId":"306","severity":1,"message":"344","line":113,"column":7,"nodeType":"308","messageId":"309","endLine":113,"endColumn":41},{"ruleId":"306","severity":1,"message":"345","line":133,"column":12,"nodeType":"308","messageId":"309","endLine":133,"endColumn":28},{"ruleId":"306","severity":1,"message":"346","line":133,"column":30,"nodeType":"308","messageId":"309","endLine":133,"endColumn":49},{"ruleId":"306","severity":1,"message":"355","line":134,"column":12,"nodeType":"308","messageId":"309","endLine":134,"endColumn":23},{"ruleId":"306","severity":1,"message":"347","line":134,"column":57,"nodeType":"308","messageId":"309","endLine":134,"endColumn":66},{"ruleId":"306","severity":1,"message":"348","line":135,"column":12,"nodeType":"308","messageId":"309","endLine":135,"endColumn":21},{"ruleId":"302","severity":1,"message":"356","line":148,"column":8,"nodeType":"304","endLine":148,"endColumn":10,"suggestions":"357"},{"ruleId":"306","severity":1,"message":"358","line":314,"column":26,"nodeType":"308","messageId":"309","endLine":314,"endColumn":36},{"ruleId":"306","severity":1,"message":"350","line":325,"column":11,"nodeType":"308","messageId":"309","endLine":325,"endColumn":24},{"ruleId":"306","severity":1,"message":"351","line":328,"column":15,"nodeType":"308","messageId":"309","endLine":328,"endColumn":19},{"ruleId":"306","severity":1,"message":"352","line":337,"column":11,"nodeType":"308","messageId":"309","endLine":337,"endColumn":20},{"ruleId":"306","severity":1,"message":"353","line":346,"column":11,"nodeType":"308","messageId":"309","endLine":346,"endColumn":22},{"ruleId":"306","severity":1,"message":"359","line":412,"column":14,"nodeType":"308","messageId":"309","endLine":412,"endColumn":26},{"ruleId":"298","replacedBy":"360"},{"ruleId":"300","replacedBy":"361"},{"ruleId":"302","severity":1,"message":"303","line":38,"column":6,"nodeType":"304","endLine":38,"endColumn":18,"suggestions":"362"},{"ruleId":"306","severity":1,"message":"307","line":119,"column":10,"nodeType":"308","messageId":"309","endLine":119,"endColumn":23},{"ruleId":"306","severity":1,"message":"319","line":1,"column":17,"nodeType":"308","messageId":"309","endLine":1,"endColumn":25},{"ruleId":"306","severity":1,"message":"310","line":2,"column":3,"nodeType":"308","messageId":"309","endLine":2,"endColumn":15},{"ruleId":"306","severity":1,"message":"311","line":4,"column":3,"nodeType":"308","messageId":"309","endLine":4,"endColumn":17},{"ruleId":"306","severity":1,"message":"312","line":7,"column":3,"nodeType":"308","messageId":"309","endLine":7,"endColumn":19},{"ruleId":"306","severity":1,"message":"313","line":8,"column":3,"nodeType":"308","messageId":"309","endLine":8,"endColumn":15},{"ruleId":"306","severity":1,"message":"314","line":9,"column":3,"nodeType":"308","messageId":"309","endLine":9,"endColumn":15},{"ruleId":"306","severity":1,"message":"315","line":10,"column":3,"nodeType":"308","messageId":"309","endLine":10,"endColumn":15},{"ruleId":"306","severity":1,"message":"316","line":12,"column":3,"nodeType":"308","messageId":"309","endLine":12,"endColumn":16},{"ruleId":"306","severity":1,"message":"317","line":13,"column":3,"nodeType":"308","messageId":"309","endLine":13,"endColumn":8},{"ruleId":"306","severity":1,"message":"318","line":17,"column":10,"nodeType":"308","messageId":"309","endLine":17,"endColumn":28},{"ruleId":"306","severity":1,"message":"337","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":19},{"ruleId":"306","severity":1,"message":"324","line":17,"column":24,"nodeType":"308","messageId":"309","endLine":17,"endColumn":40},{"ruleId":"306","severity":1,"message":"311","line":17,"column":63,"nodeType":"308","messageId":"309","endLine":17,"endColumn":77},{"ruleId":"306","severity":1,"message":"312","line":17,"column":122,"nodeType":"308","messageId":"309","endLine":17,"endColumn":138},{"ruleId":"306","severity":1,"message":"314","line":17,"column":154,"nodeType":"308","messageId":"309","endLine":17,"endColumn":166},{"ruleId":"306","severity":1,"message":"338","line":17,"column":168,"nodeType":"308","messageId":"309","endLine":17,"endColumn":173},{"ruleId":"306","severity":1,"message":"339","line":17,"column":175,"nodeType":"308","messageId":"309","endLine":17,"endColumn":184},{"ruleId":"306","severity":1,"message":"317","line":17,"column":186,"nodeType":"308","messageId":"309","endLine":17,"endColumn":191},{"ruleId":"306","severity":1,"message":"340","line":17,"column":193,"nodeType":"308","messageId":"309","endLine":17,"endColumn":197},{"ruleId":"306","severity":1,"message":"341","line":109,"column":7,"nodeType":"308","messageId":"309","endLine":109,"endColumn":49},{"ruleId":"306","severity":1,"message":"354","line":111,"column":7,"nodeType":"308","messageId":"309","endLine":111,"endColumn":26},{"ruleId":"306","severity":1,"message":"343","line":112,"column":7,"nodeType":"308","messageId":"309","endLine":112,"endColumn":27},{"ruleId":"306","severity":1,"message":"344","line":113,"column":7,"nodeType":"308","messageId":"309","endLine":113,"endColumn":41},{"ruleId":"306","severity":1,"message":"345","line":133,"column":12,"nodeType":"308","messageId":"309","endLine":133,"endColumn":28},{"ruleId":"306","severity":1,"message":"346","line":133,"column":30,"nodeType":"308","messageId":"309","endLine":133,"endColumn":49},{"ruleId":"306","severity":1,"message":"355","line":134,"column":12,"nodeType":"308","messageId":"309","endLine":134,"endColumn":23},{"ruleId":"306","severity":1,"message":"347","line":134,"column":57,"nodeType":"308","messageId":"309","endLine":134,"endColumn":66},{"ruleId":"306","severity":1,"message":"348","line":135,"column":12,"nodeType":"308","messageId":"309","endLine":135,"endColumn":21},{"ruleId":"302","severity":1,"message":"356","line":148,"column":8,"nodeType":"304","endLine":148,"endColumn":10,"suggestions":"363"},{"ruleId":"306","severity":1,"message":"358","line":314,"column":26,"nodeType":"308","messageId":"309","endLine":314,"endColumn":36},{"ruleId":"306","severity":1,"message":"350","line":325,"column":11,"nodeType":"308","messageId":"309","endLine":325,"endColumn":24},{"ruleId":"306","severity":1,"message":"351","line":328,"column":15,"nodeType":"308","messageId":"309","endLine":328,"endColumn":19},{"ruleId":"306","severity":1,"message":"352","line":337,"column":11,"nodeType":"308","messageId":"309","endLine":337,"endColumn":20},{"ruleId":"306","severity":1,"message":"353","line":346,"column":11,"nodeType":"308","messageId":"309","endLine":346,"endColumn":22},{"ruleId":"306","severity":1,"message":"359","line":412,"column":14,"nodeType":"308","messageId":"309","endLine":412,"endColumn":26},{"ruleId":"306","severity":1,"message":"324","line":1,"column":24,"nodeType":"308","messageId":"309","endLine":1,"endColumn":40},{"ruleId":"306","severity":1,"message":"315","line":1,"column":126,"nodeType":"308","messageId":"309","endLine":1,"endColumn":138},{"ruleId":"306","severity":1,"message":"316","line":1,"column":156,"nodeType":"308","messageId":"309","endLine":1,"endColumn":169},{"ruleId":"306","severity":1,"message":"325","line":24,"column":7,"nodeType":"308","messageId":"309","endLine":24,"endColumn":46},{"ruleId":"306","severity":1,"message":"326","line":35,"column":7,"nodeType":"308","messageId":"309","endLine":35,"endColumn":41},{"ruleId":"306","severity":1,"message":"327","line":15,"column":165,"nodeType":"308","messageId":"309","endLine":15,"endColumn":179},{"ruleId":"306","severity":1,"message":"328","line":15,"column":197,"nodeType":"308","messageId":"309","endLine":15,"endColumn":206},{"ruleId":"306","severity":1,"message":"329","line":18,"column":10,"nodeType":"308","messageId":"309","endLine":18,"endColumn":21},{"ruleId":"306","severity":1,"message":"330","line":99,"column":7,"nodeType":"308","messageId":"309","endLine":99,"endColumn":59},{"ruleId":"306","severity":1,"message":"331","line":117,"column":34,"nodeType":"308","messageId":"309","endLine":117,"endColumn":41},{"ruleId":"306","severity":1,"message":"332","line":117,"column":53,"nodeType":"308","messageId":"309","endLine":117,"endColumn":60},{"ruleId":"306","severity":1,"message":"333","line":118,"column":35,"nodeType":"308","messageId":"309","endLine":118,"endColumn":43},{"ruleId":"306","severity":1,"message":"334","line":118,"column":55,"nodeType":"308","messageId":"309","endLine":118,"endColumn":63},{"ruleId":"306","severity":1,"message":"335","line":123,"column":11,"nodeType":"308","messageId":"309","endLine":123,"endColumn":23},{"ruleId":"306","severity":1,"message":"336","line":129,"column":30,"nodeType":"308","messageId":"309","endLine":129,"endColumn":35},{"ruleId":"306","severity":1,"message":"337","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":19},{"ruleId":"306","severity":1,"message":"324","line":17,"column":10,"nodeType":"308","messageId":"309","endLine":17,"endColumn":26},{"ruleId":"306","severity":1,"message":"311","line":17,"column":49,"nodeType":"308","messageId":"309","endLine":17,"endColumn":63},{"ruleId":"306","severity":1,"message":"312","line":17,"column":108,"nodeType":"308","messageId":"309","endLine":17,"endColumn":124},{"ruleId":"306","severity":1,"message":"314","line":17,"column":140,"nodeType":"308","messageId":"309","endLine":17,"endColumn":152},{"ruleId":"306","severity":1,"message":"338","line":17,"column":154,"nodeType":"308","messageId":"309","endLine":17,"endColumn":159},{"ruleId":"306","severity":1,"message":"339","line":17,"column":161,"nodeType":"308","messageId":"309","endLine":17,"endColumn":170},{"ruleId":"306","severity":1,"message":"317","line":17,"column":172,"nodeType":"308","messageId":"309","endLine":17,"endColumn":177},{"ruleId":"306","severity":1,"message":"340","line":17,"column":179,"nodeType":"308","messageId":"309","endLine":17,"endColumn":183},{"ruleId":"306","severity":1,"message":"341","line":109,"column":7,"nodeType":"308","messageId":"309","endLine":109,"endColumn":49},{"ruleId":"306","severity":1,"message":"342","line":111,"column":7,"nodeType":"308","messageId":"309","endLine":111,"endColumn":26},{"ruleId":"306","severity":1,"message":"343","line":112,"column":7,"nodeType":"308","messageId":"309","endLine":112,"endColumn":27},{"ruleId":"306","severity":1,"message":"344","line":113,"column":7,"nodeType":"308","messageId":"309","endLine":113,"endColumn":41},{"ruleId":"306","severity":1,"message":"345","line":132,"column":12,"nodeType":"308","messageId":"309","endLine":132,"endColumn":28},{"ruleId":"306","severity":1,"message":"346","line":132,"column":30,"nodeType":"308","messageId":"309","endLine":132,"endColumn":49},{"ruleId":"306","severity":1,"message":"347","line":133,"column":57,"nodeType":"308","messageId":"309","endLine":133,"endColumn":66},{"ruleId":"306","severity":1,"message":"348","line":134,"column":12,"nodeType":"308","messageId":"309","endLine":134,"endColumn":21},{"ruleId":"306","severity":1,"message":"349","line":135,"column":11,"nodeType":"308","messageId":"309","endLine":135,"endColumn":18},{"ruleId":"306","severity":1,"message":"350","line":307,"column":11,"nodeType":"308","messageId":"309","endLine":307,"endColumn":24},{"ruleId":"306","severity":1,"message":"351","line":310,"column":15,"nodeType":"308","messageId":"309","endLine":310,"endColumn":19},{"ruleId":"306","severity":1,"message":"352","line":319,"column":11,"nodeType":"308","messageId":"309","endLine":319,"endColumn":20},{"ruleId":"306","severity":1,"message":"353","line":328,"column":11,"nodeType":"308","messageId":"309","endLine":328,"endColumn":22},"no-native-reassign",["364"],"no-negated-in-lhs",["365"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["366"],"@typescript-eslint/no-unused-vars","'scheduleWeeks' is assigned a value but never used.","Identifier","unusedVar","'ActionButton' is defined but never used.","'DefaultPalette' is defined but never used.","'IStackItemStyles' is defined but never used.","'IStackStyles' is defined but never used.","'IStackTokens' is defined but never used.","'KTP_LAYER_ID' is defined but never used.","'PrimaryButton' is defined but never used.","'Stack' is defined but never used.","'ClassificationType' is defined but never used.","'useState' is defined but never used.","'Dropdown' is defined but never used.","'dropdownStyles' is assigned a value but never used.","'TimeOpts' is defined but never used.","'stedAssignments' is assigned a value but never used.","'CommandBarButton' is defined but never used.","'itemAlignmentsStackStyles' is assigned a value but never used.","'containerStackTokens' is assigned a value but never used.","'ScrollablePane' is defined but never used.","'TextField' is defined but never used.","'IAssignment' is defined but never used.","'scrollablePaneStyles' is assigned a value but never used.","'showMsg' is assigned a value but never used.","'hideMsg' is assigned a value but never used.","'showLoad' is assigned a value but never used.","'hideLoad' is assigned a value but never used.","'updateValues' is assigned a value but never used.","'value' is assigned a value but never used.","'Announced' is defined but never used.","'Label' is defined but never used.","'SearchBox' is defined but never used.","'Text' is defined but never used.","'searchBoxStyles' is assigned a value but never used.","'addIcon' is assigned a value but never used.","'mailIcon' is assigned a value but never used.","'stackStyles' is assigned a value but never used.","'announcedMessage' is assigned a value but never used.","'setAnnouncedMessage' is assigned a value but never used.","'hideModal' is assigned a value but never used.","'modalData' is assigned a value but never used.","'db' is assigned a value but never used.","'_onChangeText' is assigned a value but never used.","'text' is assigned a value but never used.","'openModal' is assigned a value but never used.","'onClickTest' is assigned a value but never used.","'delIcon' is assigned a value but never used.","'isModalOpen' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'db' and 'items'. Either include them or remove the dependency array.",["367"],"'setColumns' is assigned a value but never used.","'_copyAndSort' is defined but never used.",["364"],["365"],["368"],["369"],"no-global-assign","no-unsafe-negation",{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"370","fix":"374"},{"desc":"372","fix":"375"},"Update the dependencies array to be: [db, setStdData]",{"range":"376","text":"377"},"Update the dependencies array to be: [db, items]",{"range":"378","text":"379"},{"range":"380","text":"377"},{"range":"381","text":"379"},[1075,1087],"[db, setStdData]",[4411,4413],"[db, items]",[1075,1087],[4411,4413]]